# frozen_string_literal: true

module MetronomeSDK
  module Models
    # Either a **parent** configuration with a list of children or a **child**
    # configuration with a single parent.
    module HierarchyConfiguration
      extend MetronomeSDK::Internal::Type::Union

      variant -> { MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration }

      variant -> { MetronomeSDK::HierarchyConfiguration::ChildHierarchyConfiguration }

      class ParentHierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
        # @!attribute children
        #   List of contracts that belong to this parent.
        #
        #   @return [Array<MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::Child>]
        required :children,
                 -> { MetronomeSDK::Internal::Type::ArrayOf[MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::Child] }

        # @!attribute parent_behavior
        #
        #   @return [MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior, nil]
        optional :parent_behavior,
                 -> { MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior }

        # @!method initialize(children:, parent_behavior: nil)
        #   @param children [Array<MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::Child>] List of contracts that belong to this parent.
        #
        #   @param parent_behavior [MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior]

        class Child < MetronomeSDK::Internal::Type::BaseModel
          # @!attribute contract_id
          #
          #   @return [String]
          required :contract_id, String

          # @!attribute customer_id
          #
          #   @return [String]
          required :customer_id, String

          # @!method initialize(contract_id:, customer_id:)
          #   @param contract_id [String]
          #   @param customer_id [String]
        end

        # @see MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration#parent_behavior
        class ParentBehavior < MetronomeSDK::Internal::Type::BaseModel
          # @!attribute invoice_consolidation_type
          #   Account hierarchy M3 - Indicates the desired behavior of consolidated invoices
          #   generated by the parent in a customer hierarchy
          #
          #   **CONCATENATE**: Statements on the invoices of child customers will be appended
          #   to the consolidated invoice
          #
          #   **NONE**: Do not generate consolidated invoices
          #
          #   @return [Symbol, MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::InvoiceConsolidationType, nil]
          optional :invoice_consolidation_type,
                   enum: -> { MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::InvoiceConsolidationType }

          # @!method initialize(invoice_consolidation_type: nil)
          #   Some parameter documentations has been truncated, see
          #   {MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior}
          #   for more details.
          #
          #   @param invoice_consolidation_type [Symbol, MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::InvoiceConsolidationType] Account hierarchy M3 - Indicates the desired behavior of consolidated invoices g

          # Account hierarchy M3 - Indicates the desired behavior of consolidated invoices
          # generated by the parent in a customer hierarchy
          #
          # **CONCATENATE**: Statements on the invoices of child customers will be appended
          # to the consolidated invoice
          #
          # **NONE**: Do not generate consolidated invoices
          #
          # @see MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior#invoice_consolidation_type
          module InvoiceConsolidationType
            extend MetronomeSDK::Internal::Type::Enum

            CONCATENATE = :CONCATENATE
            NONE = :NONE

            # @!method self.values
            #   @return [Array<Symbol>]
          end
        end
      end

      class ChildHierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
        # @!attribute parent
        #   The single parent contract/customer for this child.
        #
        #   @return [MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::Parent]
        required :parent, -> { MetronomeSDK::HierarchyConfiguration::ChildHierarchyConfiguration::Parent }

        # @!attribute payer
        #   Account hierarchy M3 - Indicates which customer should pay for the child's
        #   invoice charges
        #
        #   **SELF**: The child pays for its own invoice charges
        #
        #   **PARENT**: The parent pays for the child's invoice charges
        #
        #   @return [Symbol, MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::Payer, nil]
        optional :payer, enum: -> { MetronomeSDK::HierarchyConfiguration::ChildHierarchyConfiguration::Payer }

        # @!attribute usage_statement_behavior
        #   Account hierarchy M3 - Indicates the behavior of the child's invoice statements
        #   on the parent's invoices.
        #
        #   **CONSOLIDATE**: Child's invoice statements will be added to parent's
        #   consolidated invoices
        #
        #   **SEPARATE**: Child's invoice statements will appear not appear on parent's
        #   consolidated invoices
        #
        #   @return [Symbol, MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::UsageStatementBehavior, nil]
        optional :usage_statement_behavior,
                 enum: -> { MetronomeSDK::HierarchyConfiguration::ChildHierarchyConfiguration::UsageStatementBehavior }

        # @!method initialize(parent:, payer: nil, usage_statement_behavior: nil)
        #   Some parameter documentations has been truncated, see
        #   {MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration} for
        #   more details.
        #
        #   @param parent [MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::Parent] The single parent contract/customer for this child.
        #
        #   @param payer [Symbol, MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::Payer] Account hierarchy M3 - Indicates which customer should pay for the child's invoi
        #
        #   @param usage_statement_behavior [Symbol, MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::UsageStatementBehavior] Account hierarchy M3 - Indicates the behavior of the child's invoice statements

        # @see MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration#parent
        class Parent < MetronomeSDK::Internal::Type::BaseModel
          # @!attribute contract_id
          #
          #   @return [String]
          required :contract_id, String

          # @!attribute customer_id
          #
          #   @return [String]
          required :customer_id, String

          # @!method initialize(contract_id:, customer_id:)
          #   The single parent contract/customer for this child.
          #
          #   @param contract_id [String]
          #   @param customer_id [String]
        end

        # Account hierarchy M3 - Indicates which customer should pay for the child's
        # invoice charges
        #
        # **SELF**: The child pays for its own invoice charges
        #
        # **PARENT**: The parent pays for the child's invoice charges
        #
        # @see MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration#payer
        module Payer
          extend MetronomeSDK::Internal::Type::Enum

          SELF = :SELF
          PARENT = :PARENT

          # @!method self.values
          #   @return [Array<Symbol>]
        end

        # Account hierarchy M3 - Indicates the behavior of the child's invoice statements
        # on the parent's invoices.
        #
        # **CONSOLIDATE**: Child's invoice statements will be added to parent's
        # consolidated invoices
        #
        # **SEPARATE**: Child's invoice statements will appear not appear on parent's
        # consolidated invoices
        #
        # @see MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration#usage_statement_behavior
        module UsageStatementBehavior
          extend MetronomeSDK::Internal::Type::Enum

          CONSOLIDATE = :CONSOLIDATE
          SEPARATE = :SEPARATE

          # @!method self.values
          #   @return [Array<Symbol>]
        end
      end

      # @!method self.variants
      #   @return [Array(MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration, MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration)]
    end
  end
end
