module Metronome
  module Models
    type customer_create_params =
      {
        name: String,
        billing_config: Metronome::Models::CustomerCreateParams::BillingConfig,
        custom_fields: Hash[Symbol, String],
        customer_billing_provider_configurations: Array[Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration],
        external_id: String,
        ingest_aliases: Array[String]
      }
      & Metronome::request_parameters

    class CustomerCreateParams < Metronome::BaseModel
      extend Metronome::RequestParameters::Converter
      include Metronome::RequestParameters

      attr_accessor name: String

      attr_reader billing_config: Metronome::Models::CustomerCreateParams::BillingConfig?

      def billing_config=: (
        Metronome::Models::CustomerCreateParams::BillingConfig
      ) -> void

      attr_reader custom_fields: Hash[Symbol, String]?

      def custom_fields=: (Hash[Symbol, String]) -> void

      attr_reader customer_billing_provider_configurations: Array[Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration]?

      def customer_billing_provider_configurations=: (
        Array[Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration]
      ) -> void

      attr_reader external_id: String?

      def external_id=: (String) -> void

      attr_reader ingest_aliases: Array[String]?

      def ingest_aliases=: (Array[String]) -> void

      def initialize:
        (
          name: String,
          billing_config: Metronome::Models::CustomerCreateParams::BillingConfig,
          custom_fields: Hash[Symbol, String],
          customer_billing_provider_configurations: Array[Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration],
          external_id: String,
          ingest_aliases: Array[String],
          request_options: Metronome::request_opts
        ) -> void
        | (
          ?Metronome::Models::customer_create_params | Metronome::BaseModel data
        ) -> void

      def to_hash: -> Metronome::Models::customer_create_params

      type billing_config =
        {
          billing_provider_customer_id: String,
          billing_provider_type: Metronome::Models::CustomerCreateParams::BillingConfig::billing_provider_type,
          aws_is_subscription_product: bool,
          aws_product_code: String,
          aws_region: Metronome::Models::CustomerCreateParams::BillingConfig::aws_region,
          stripe_collection_method: Metronome::Models::CustomerCreateParams::BillingConfig::stripe_collection_method
        }

      class BillingConfig < Metronome::BaseModel
        attr_accessor billing_provider_customer_id: String

        attr_accessor billing_provider_type: Metronome::Models::CustomerCreateParams::BillingConfig::billing_provider_type

        attr_reader aws_is_subscription_product: bool?

        def aws_is_subscription_product=: (bool) -> void

        attr_reader aws_product_code: String?

        def aws_product_code=: (String) -> void

        attr_reader aws_region: Metronome::Models::CustomerCreateParams::BillingConfig::aws_region?

        def aws_region=: (
          Metronome::Models::CustomerCreateParams::BillingConfig::aws_region
        ) -> void

        attr_reader stripe_collection_method: Metronome::Models::CustomerCreateParams::BillingConfig::stripe_collection_method?

        def stripe_collection_method=: (
          Metronome::Models::CustomerCreateParams::BillingConfig::stripe_collection_method
        ) -> void

        def initialize:
          (
            billing_provider_customer_id: String,
            billing_provider_type: Metronome::Models::CustomerCreateParams::BillingConfig::billing_provider_type,
            aws_is_subscription_product: bool,
            aws_product_code: String,
            aws_region: Metronome::Models::CustomerCreateParams::BillingConfig::aws_region,
            stripe_collection_method: Metronome::Models::CustomerCreateParams::BillingConfig::stripe_collection_method
          ) -> void
          | (
            ?Metronome::Models::CustomerCreateParams::billing_config
            | Metronome::BaseModel data
          ) -> void

        def to_hash: -> Metronome::Models::CustomerCreateParams::billing_config

        type billing_provider_type =
          :aws_marketplace
          | :stripe
          | :netsuite
          | :custom
          | :azure_marketplace
          | :quickbooks_online
          | :workday
          | :gcp_marketplace

        class BillingProviderType < Metronome::Enum
          AWS_MARKETPLACE: :aws_marketplace
          STRIPE: :stripe
          NETSUITE: :netsuite
          CUSTOM: :custom
          AZURE_MARKETPLACE: :azure_marketplace
          QUICKBOOKS_ONLINE: :quickbooks_online
          WORKDAY: :workday
          GCP_MARKETPLACE: :gcp_marketplace

          def self.values: -> Array[Metronome::Models::CustomerCreateParams::BillingConfig::billing_provider_type]
        end

        type aws_region =
          :"af-south-1"
          | :"ap-east-1"
          | :"ap-northeast-1"
          | :"ap-northeast-2"
          | :"ap-northeast-3"
          | :"ap-south-1"
          | :"ap-southeast-1"
          | :"ap-southeast-2"
          | :"ca-central-1"
          | :"cn-north-1"
          | :"cn-northwest-1"
          | :"eu-central-1"
          | :"eu-north-1"
          | :"eu-south-1"
          | :"eu-west-1"
          | :"eu-west-2"
          | :"eu-west-3"
          | :"me-south-1"
          | :"sa-east-1"
          | :"us-east-1"
          | :"us-east-2"
          | :"us-gov-east-1"
          | :"us-gov-west-1"
          | :"us-west-1"
          | :"us-west-2"

        class AwsRegion < Metronome::Enum
          AF_SOUTH_1: :"af-south-1"
          AP_EAST_1: :"ap-east-1"
          AP_NORTHEAST_1: :"ap-northeast-1"
          AP_NORTHEAST_2: :"ap-northeast-2"
          AP_NORTHEAST_3: :"ap-northeast-3"
          AP_SOUTH_1: :"ap-south-1"
          AP_SOUTHEAST_1: :"ap-southeast-1"
          AP_SOUTHEAST_2: :"ap-southeast-2"
          CA_CENTRAL_1: :"ca-central-1"
          CN_NORTH_1: :"cn-north-1"
          CN_NORTHWEST_1: :"cn-northwest-1"
          EU_CENTRAL_1: :"eu-central-1"
          EU_NORTH_1: :"eu-north-1"
          EU_SOUTH_1: :"eu-south-1"
          EU_WEST_1: :"eu-west-1"
          EU_WEST_2: :"eu-west-2"
          EU_WEST_3: :"eu-west-3"
          ME_SOUTH_1: :"me-south-1"
          SA_EAST_1: :"sa-east-1"
          US_EAST_1: :"us-east-1"
          US_EAST_2: :"us-east-2"
          US_GOV_EAST_1: :"us-gov-east-1"
          US_GOV_WEST_1: :"us-gov-west-1"
          US_WEST_1: :"us-west-1"
          US_WEST_2: :"us-west-2"

          def self.values: -> Array[Metronome::Models::CustomerCreateParams::BillingConfig::aws_region]
        end

        type stripe_collection_method = :charge_automatically | :send_invoice

        class StripeCollectionMethod < Metronome::Enum
          CHARGE_AUTOMATICALLY: :charge_automatically
          SEND_INVOICE: :send_invoice

          def self.values: -> Array[Metronome::Models::CustomerCreateParams::BillingConfig::stripe_collection_method]
        end
      end

      type customer_billing_provider_configuration =
        {
          billing_provider: Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration::billing_provider,
          configuration: Hash[Symbol, top],
          delivery_method: Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration::delivery_method,
          delivery_method_id: String
        }

      class CustomerBillingProviderConfiguration < Metronome::BaseModel
        attr_accessor billing_provider: Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration::billing_provider

        attr_reader configuration: Hash[Symbol, top]?

        def configuration=: (Hash[Symbol, top]) -> void

        attr_reader delivery_method: Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration::delivery_method?

        def delivery_method=: (
          Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration::delivery_method
        ) -> void

        attr_reader delivery_method_id: String?

        def delivery_method_id=: (String) -> void

        def initialize:
          (
            billing_provider: Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration::billing_provider,
            configuration: Hash[Symbol, top],
            delivery_method: Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration::delivery_method,
            delivery_method_id: String
          ) -> void
          | (
            ?Metronome::Models::CustomerCreateParams::customer_billing_provider_configuration
            | Metronome::BaseModel data
          ) -> void

        def to_hash: -> Metronome::Models::CustomerCreateParams::customer_billing_provider_configuration

        type billing_provider =
          :aws_marketplace
          | :azure_marketplace
          | :gcp_marketplace
          | :stripe
          | :netsuite

        class BillingProvider < Metronome::Enum
          AWS_MARKETPLACE: :aws_marketplace
          AZURE_MARKETPLACE: :azure_marketplace
          GCP_MARKETPLACE: :gcp_marketplace
          STRIPE: :stripe
          NETSUITE: :netsuite

          def self.values: -> Array[Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration::billing_provider]
        end

        type delivery_method =
          :direct_to_billing_provider | :aws_sqs | :tackle | :aws_sns

        class DeliveryMethod < Metronome::Enum
          DIRECT_TO_BILLING_PROVIDER: :direct_to_billing_provider
          AWS_SQS: :aws_sqs
          TACKLE: :tackle
          AWS_SNS: :aws_sns

          def self.values: -> Array[Metronome::Models::CustomerCreateParams::CustomerBillingProviderConfiguration::delivery_method]
        end
      end
    end
  end
end
