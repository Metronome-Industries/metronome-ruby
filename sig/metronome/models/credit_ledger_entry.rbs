module Metronome
  module Models
    type credit_ledger_entry =
      {
        amount: Float,
        created_by: String,
        credit_grant_id: String,
        effective_at: Time,
        reason: String,
        running_balance: Float,
        invoice_id: String?
      }

    class CreditLedgerEntry < Metronome::BaseModel
      attr_accessor amount: Float

      attr_accessor created_by: String

      attr_accessor credit_grant_id: String

      attr_accessor effective_at: Time

      attr_accessor reason: String

      attr_accessor running_balance: Float

      attr_accessor invoice_id: String?

      def initialize:
        (
          amount: Float,
          created_by: String,
          credit_grant_id: String,
          effective_at: Time,
          reason: String,
          running_balance: Float,
          invoice_id: String?
        ) -> void
        | (
          ?Metronome::Models::credit_ledger_entry | Metronome::BaseModel data
        ) -> void

      def to_hash: -> Metronome::Models::credit_ledger_entry
    end
  end
end
