module Metronome
  module Models
    type contract_list_balances_response =
      {
        data: Array[Metronome::Models::ContractListBalancesResponse::data],
        next_page: String?
      }

    class ContractListBalancesResponse < Metronome::BaseModel
      attr_accessor data: Array[Metronome::Models::ContractListBalancesResponse::data]

      attr_accessor next_page: String?

      def initialize:
        (
          data: Array[Metronome::Models::ContractListBalancesResponse::data],
          next_page: String?
        ) -> void
        | (
          ?Metronome::Models::contract_list_balances_response
          | Metronome::BaseModel data
        ) -> void

      def to_hash: -> Metronome::Models::contract_list_balances_response

      type data = Metronome::Models::Commit | Metronome::Models::Credit

      class Data < Metronome::Union
        private def self.variants: -> [[nil, Metronome::Models::Commit], [nil, Metronome::Models::Credit]]
      end
    end
  end
end
