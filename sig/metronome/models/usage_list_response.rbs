module Metronome
  module Models
    type usage_list_response =
      {
        data: Array[Metronome::Models::UsageListResponse::Data],
        next_page: String?
      }

    class UsageListResponse < Metronome::BaseModel
      attr_accessor data: Array[Metronome::Models::UsageListResponse::Data]

      attr_accessor next_page: String?

      def initialize:
        (
          data: Array[Metronome::Models::UsageListResponse::Data],
          next_page: String?
        ) -> void
        | (
          ?Metronome::Models::usage_list_response | Metronome::BaseModel data
        ) -> void

      def to_h: -> Metronome::Models::usage_list_response

      type data =
        {
          billable_metric_id: String,
          billable_metric_name: String,
          customer_id: String,
          end_timestamp: Time,
          start_timestamp: Time,
          value: Float?,
          groups: Hash[Symbol, Float?]?
        }

      class Data < Metronome::BaseModel
        attr_accessor billable_metric_id: String

        attr_accessor billable_metric_name: String

        attr_accessor customer_id: String

        attr_accessor end_timestamp: Time

        attr_accessor start_timestamp: Time

        attr_accessor value: Float?

        attr_reader groups: Hash[Symbol, Float?]?

        def groups=: (Hash[Symbol, Float?]?) -> void

        def initialize:
          (
            billable_metric_id: String,
            billable_metric_name: String,
            customer_id: String,
            end_timestamp: Time,
            start_timestamp: Time,
            value: Float?,
            groups: Hash[Symbol, Float?]?
          ) -> void
          | (
            ?Metronome::Models::UsageListResponse::data
            | Metronome::BaseModel data
          ) -> void

        def to_h: -> Metronome::Models::UsageListResponse::data
      end
    end
  end
end
