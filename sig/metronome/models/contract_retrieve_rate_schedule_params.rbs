module Metronome
  module Models
    type contract_retrieve_rate_schedule_params =
      {
        contract_id: String,
        customer_id: String,
        limit: Integer,
        next_page: String,
        at: Time,
        selectors: ::Array[Metronome::Models::ContractRetrieveRateScheduleParams::Selector]
      }
      & Metronome::request_parameters

    class ContractRetrieveRateScheduleParams < Metronome::BaseModel
      extend Metronome::RequestParameters::Converter
      include Metronome::RequestParameters

      attr_accessor contract_id: String

      attr_accessor customer_id: String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader next_page: String?

      def next_page=: (String) -> String

      attr_reader at: Time?

      def at=: (Time) -> Time

      attr_reader selectors: ::Array[Metronome::Models::ContractRetrieveRateScheduleParams::Selector]?

      def selectors=: (
        ::Array[Metronome::Models::ContractRetrieveRateScheduleParams::Selector]
      ) -> ::Array[Metronome::Models::ContractRetrieveRateScheduleParams::Selector]

      def initialize:
        (
          contract_id: String,
          customer_id: String,
          limit: Integer,
          next_page: String,
          at: Time,
          selectors: ::Array[Metronome::Models::ContractRetrieveRateScheduleParams::Selector],
          request_options: Metronome::request_opts
        ) -> void
        | (
          ?Metronome::Models::contract_retrieve_rate_schedule_params
          | Metronome::BaseModel data
        ) -> void

      def to_hash: -> Metronome::Models::contract_retrieve_rate_schedule_params

      type selector =
        {
          partial_pricing_group_values: ::Hash[Symbol, String],
          pricing_group_values: ::Hash[Symbol, String],
          product_id: String,
          product_tags: ::Array[String]
        }

      class Selector < Metronome::BaseModel
        attr_reader partial_pricing_group_values: ::Hash[Symbol, String]?

        def partial_pricing_group_values=: (
          ::Hash[Symbol, String]
        ) -> ::Hash[Symbol, String]

        attr_reader pricing_group_values: ::Hash[Symbol, String]?

        def pricing_group_values=: (
          ::Hash[Symbol, String]
        ) -> ::Hash[Symbol, String]

        attr_reader product_id: String?

        def product_id=: (String) -> String

        attr_reader product_tags: ::Array[String]?

        def product_tags=: (::Array[String]) -> ::Array[String]

        def initialize:
          (
            partial_pricing_group_values: ::Hash[Symbol, String],
            pricing_group_values: ::Hash[Symbol, String],
            product_id: String,
            product_tags: ::Array[String]
          ) -> void
          | (
            ?Metronome::Models::ContractRetrieveRateScheduleParams::selector
            | Metronome::BaseModel data
          ) -> void

        def to_hash: -> Metronome::Models::ContractRetrieveRateScheduleParams::selector
      end
    end
  end
end
