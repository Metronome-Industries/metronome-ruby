module Metronome
  module Models
    module Contracts
      type rate_card_create_params =
        {
          name: String,
          aliases: Array[Metronome::Models::Contracts::RateCardCreateParams::Alias],
          credit_type_conversions: Array[Metronome::Models::Contracts::RateCardCreateParams::CreditTypeConversion],
          custom_fields: Hash[Symbol, String],
          description: String,
          fiat_credit_type_id: String
        }
        & Metronome::request_parameters

      class RateCardCreateParams < Metronome::BaseModel
        extend Metronome::RequestParameters::Converter
        include Metronome::RequestParameters

        attr_accessor name: String

        attr_reader aliases: Array[Metronome::Models::Contracts::RateCardCreateParams::Alias]?

        def aliases=: (
          Array[Metronome::Models::Contracts::RateCardCreateParams::Alias]
        ) -> void

        attr_reader credit_type_conversions: Array[Metronome::Models::Contracts::RateCardCreateParams::CreditTypeConversion]?

        def credit_type_conversions=: (
          Array[Metronome::Models::Contracts::RateCardCreateParams::CreditTypeConversion]
        ) -> void

        attr_reader custom_fields: Hash[Symbol, String]?

        def custom_fields=: (Hash[Symbol, String]) -> void

        attr_reader description: String?

        def description=: (String) -> void

        attr_reader fiat_credit_type_id: String?

        def fiat_credit_type_id=: (String) -> void

        def initialize:
          (
            name: String,
            aliases: Array[Metronome::Models::Contracts::RateCardCreateParams::Alias],
            credit_type_conversions: Array[Metronome::Models::Contracts::RateCardCreateParams::CreditTypeConversion],
            custom_fields: Hash[Symbol, String],
            description: String,
            fiat_credit_type_id: String,
            request_options: Metronome::request_opts
          ) -> void
          | (
            ?Metronome::Models::Contracts::rate_card_create_params
            | Metronome::BaseModel data
          ) -> void

        def to_hash: -> Metronome::Models::Contracts::rate_card_create_params

        type alias_ = { name: String, ending_before: Time, starting_at: Time }

        class Alias < Metronome::BaseModel
          attr_accessor name: String

          attr_reader ending_before: Time?

          def ending_before=: (Time) -> void

          attr_reader starting_at: Time?

          def starting_at=: (Time) -> void

          def initialize:
            (name: String, ending_before: Time, starting_at: Time) -> void
            | (
              ?Metronome::Models::Contracts::RateCardCreateParams::alias_
              | Metronome::BaseModel data
            ) -> void

          def to_hash: -> Metronome::Models::Contracts::RateCardCreateParams::alias_
        end

        type credit_type_conversion =
          { custom_credit_type_id: String, fiat_per_custom_credit: Float }

        class CreditTypeConversion < Metronome::BaseModel
          attr_accessor custom_credit_type_id: String

          attr_accessor fiat_per_custom_credit: Float

          def initialize:
            (
              custom_credit_type_id: String,
              fiat_per_custom_credit: Float
            ) -> void
            | (
              ?Metronome::Models::Contracts::RateCardCreateParams::credit_type_conversion
              | Metronome::BaseModel data
            ) -> void

          def to_hash: -> Metronome::Models::Contracts::RateCardCreateParams::credit_type_conversion
        end
      end
    end
  end
end
