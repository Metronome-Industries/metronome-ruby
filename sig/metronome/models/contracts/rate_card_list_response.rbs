module Metronome
  module Models
    module Contracts
      type rate_card_list_response =
        {
          id: String,
          created_at: Time,
          created_by: String,
          name: String,
          aliases: Array[Metronome::Models::Contracts::RateCardListResponse::Alias],
          credit_type_conversions: Array[Metronome::Models::Contracts::RateCardListResponse::CreditTypeConversion],
          custom_fields: Hash[Symbol, String],
          description: String,
          fiat_credit_type: Metronome::Models::CreditTypeData
        }

      class RateCardListResponse < Metronome::BaseModel
        attr_accessor id: String

        attr_accessor created_at: Time

        attr_accessor created_by: String

        attr_accessor name: String

        attr_reader aliases: Array[Metronome::Models::Contracts::RateCardListResponse::Alias]?

        def aliases=: (
          Array[Metronome::Models::Contracts::RateCardListResponse::Alias]
        ) -> void

        attr_reader credit_type_conversions: Array[Metronome::Models::Contracts::RateCardListResponse::CreditTypeConversion]?

        def credit_type_conversions=: (
          Array[Metronome::Models::Contracts::RateCardListResponse::CreditTypeConversion]
        ) -> void

        attr_reader custom_fields: Hash[Symbol, String]?

        def custom_fields=: (Hash[Symbol, String]) -> void

        attr_reader description: String?

        def description=: (String) -> void

        attr_reader fiat_credit_type: Metronome::Models::CreditTypeData?

        def fiat_credit_type=: (Metronome::Models::CreditTypeData) -> void

        def initialize:
          (
            id: String,
            created_at: Time,
            created_by: String,
            name: String,
            aliases: Array[Metronome::Models::Contracts::RateCardListResponse::Alias],
            credit_type_conversions: Array[Metronome::Models::Contracts::RateCardListResponse::CreditTypeConversion],
            custom_fields: Hash[Symbol, String],
            description: String,
            fiat_credit_type: Metronome::Models::CreditTypeData
          ) -> void
          | (
            ?Metronome::Models::Contracts::rate_card_list_response
            | Metronome::BaseModel data
          ) -> void

        def to_hash: -> Metronome::Models::Contracts::rate_card_list_response

        type alias_ = { name: String, ending_before: Time, starting_at: Time }

        class Alias < Metronome::BaseModel
          attr_accessor name: String

          attr_reader ending_before: Time?

          def ending_before=: (Time) -> void

          attr_reader starting_at: Time?

          def starting_at=: (Time) -> void

          def initialize:
            (name: String, ending_before: Time, starting_at: Time) -> void
            | (
              ?Metronome::Models::Contracts::RateCardListResponse::alias_
              | Metronome::BaseModel data
            ) -> void

          def to_hash: -> Metronome::Models::Contracts::RateCardListResponse::alias_
        end

        type credit_type_conversion =
          {
            custom_credit_type: Metronome::Models::CreditTypeData,
            fiat_per_custom_credit: String
          }

        class CreditTypeConversion < Metronome::BaseModel
          attr_accessor custom_credit_type: Metronome::Models::CreditTypeData

          attr_accessor fiat_per_custom_credit: String

          def initialize:
            (
              custom_credit_type: Metronome::Models::CreditTypeData,
              fiat_per_custom_credit: String
            ) -> void
            | (
              ?Metronome::Models::Contracts::RateCardListResponse::credit_type_conversion
              | Metronome::BaseModel data
            ) -> void

          def to_hash: -> Metronome::Models::Contracts::RateCardListResponse::credit_type_conversion
        end
      end
    end
  end
end
