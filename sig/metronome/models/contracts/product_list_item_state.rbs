module Metronome
  module Models
    module Contracts
      type product_list_item_state =
        {
          created_at: Time,
          created_by: String,
          name: String,
          billable_metric_id: String,
          composite_product_ids: Array[String],
          composite_tags: Array[String],
          exclude_free_usage: bool,
          is_refundable: bool,
          netsuite_internal_item_id: String,
          netsuite_overage_item_id: String,
          presentation_group_key: Array[String],
          pricing_group_key: Array[String],
          quantity_conversion: Metronome::Models::Contracts::QuantityConversion?,
          quantity_rounding: Metronome::Models::Contracts::QuantityRounding?,
          starting_at: Time,
          tags: Array[String]
        }

      class ProductListItemState < Metronome::BaseModel
        attr_accessor created_at: Time

        attr_accessor created_by: String

        attr_accessor name: String

        attr_reader billable_metric_id: String?

        def billable_metric_id=: (String) -> void

        attr_reader composite_product_ids: Array[String]?

        def composite_product_ids=: (Array[String]) -> void

        attr_reader composite_tags: Array[String]?

        def composite_tags=: (Array[String]) -> void

        attr_reader exclude_free_usage: bool?

        def exclude_free_usage=: (bool) -> void

        attr_reader is_refundable: bool?

        def is_refundable=: (bool) -> void

        attr_reader netsuite_internal_item_id: String?

        def netsuite_internal_item_id=: (String) -> void

        attr_reader netsuite_overage_item_id: String?

        def netsuite_overage_item_id=: (String) -> void

        attr_reader presentation_group_key: Array[String]?

        def presentation_group_key=: (Array[String]) -> void

        attr_reader pricing_group_key: Array[String]?

        def pricing_group_key=: (Array[String]) -> void

        attr_accessor quantity_conversion: Metronome::Models::Contracts::QuantityConversion?

        attr_accessor quantity_rounding: Metronome::Models::Contracts::QuantityRounding?

        attr_reader starting_at: Time?

        def starting_at=: (Time) -> void

        attr_reader tags: Array[String]?

        def tags=: (Array[String]) -> void

        def initialize:
          (
            created_at: Time,
            created_by: String,
            name: String,
            billable_metric_id: String,
            composite_product_ids: Array[String],
            composite_tags: Array[String],
            exclude_free_usage: bool,
            is_refundable: bool,
            netsuite_internal_item_id: String,
            netsuite_overage_item_id: String,
            presentation_group_key: Array[String],
            pricing_group_key: Array[String],
            quantity_conversion: Metronome::Models::Contracts::QuantityConversion?,
            quantity_rounding: Metronome::Models::Contracts::QuantityRounding?,
            starting_at: Time,
            tags: Array[String]
          ) -> void
          | (
            ?Metronome::Models::Contracts::product_list_item_state
            | Metronome::BaseModel data
          ) -> void

        def to_h: -> Metronome::Models::Contracts::product_list_item_state
      end
    end
  end
end
