module Metronome
  module Models
    module Contracts
      module RateCards
        type rate_list_params =
          {
            at: Time,
            rate_card_id: String,
            limit: Integer,
            next_page: String,
            selectors: ::Array[Metronome::Models::Contracts::RateCards::RateListParams::Selector]
          }
          & Metronome::request_parameters

        class RateListParams < Metronome::BaseModel
          extend Metronome::RequestParameters::Converter
          include Metronome::RequestParameters

          attr_accessor at: Time

          attr_accessor rate_card_id: String

          attr_reader limit: Integer?

          def limit=: (Integer) -> void

          attr_reader next_page: String?

          def next_page=: (String) -> void

          attr_reader selectors: ::Array[Metronome::Models::Contracts::RateCards::RateListParams::Selector]?

          def selectors=: (
            ::Array[Metronome::Models::Contracts::RateCards::RateListParams::Selector]
          ) -> void

          def initialize:
            (
              at: Time,
              rate_card_id: String,
              limit: Integer,
              next_page: String,
              selectors: ::Array[Metronome::Models::Contracts::RateCards::RateListParams::Selector],
              request_options: Metronome::request_opts
            ) -> void
            | (
              ?Metronome::Models::Contracts::RateCards::rate_list_params
              | Metronome::BaseModel data
            ) -> void

          def to_hash: -> Metronome::Models::Contracts::RateCards::rate_list_params

          type selector =
            {
              partial_pricing_group_values: ::Hash[Symbol, String],
              pricing_group_values: ::Hash[Symbol, String],
              product_id: String,
              product_tags: ::Array[String]
            }

          class Selector < Metronome::BaseModel
            attr_reader partial_pricing_group_values: ::Hash[Symbol, String]?

            def partial_pricing_group_values=: (::Hash[Symbol, String]) -> void

            attr_reader pricing_group_values: ::Hash[Symbol, String]?

            def pricing_group_values=: (::Hash[Symbol, String]) -> void

            attr_reader product_id: String?

            def product_id=: (String) -> void

            attr_reader product_tags: ::Array[String]?

            def product_tags=: (::Array[String]) -> void

            def initialize:
              (
                partial_pricing_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String]
              ) -> void
              | (
                ?Metronome::Models::Contracts::RateCards::RateListParams::selector
                | Metronome::BaseModel data
              ) -> void

            def to_hash: -> Metronome::Models::Contracts::RateCards::RateListParams::selector
          end
        end
      end
    end
  end
end
