module Metronome
  module Models
    module Contracts
      module RateCards
        type product_order_update_params =
          {
            product_moves: Array[Metronome::Models::Contracts::RateCards::ProductOrderUpdateParams::ProductMove],
            rate_card_id: String
          }
          & Metronome::request_parameters

        class ProductOrderUpdateParams < Metronome::BaseModel
          extend Metronome::RequestParameters::Converter
          include Metronome::RequestParameters

          attr_accessor product_moves: Array[Metronome::Models::Contracts::RateCards::ProductOrderUpdateParams::ProductMove]

          attr_accessor rate_card_id: String

          def initialize:
            (
              product_moves: Array[Metronome::Models::Contracts::RateCards::ProductOrderUpdateParams::ProductMove],
              rate_card_id: String,
              request_options: Metronome::request_opts
            ) -> void
            | (
              ?Metronome::Models::Contracts::RateCards::product_order_update_params
              | Metronome::BaseModel data
            ) -> void

          def to_hash: -> Metronome::Models::Contracts::RateCards::product_order_update_params

          type product_move = { position: Float, product_id: String }

          class ProductMove < Metronome::BaseModel
            attr_accessor position: Float

            attr_accessor product_id: String

            def initialize:
              (position: Float, product_id: String) -> void
              | (
                ?Metronome::Models::Contracts::RateCards::ProductOrderUpdateParams::product_move
                | Metronome::BaseModel data
              ) -> void

            def to_hash: -> Metronome::Models::Contracts::RateCards::ProductOrderUpdateParams::product_move
          end
        end
      end
    end
  end
end
