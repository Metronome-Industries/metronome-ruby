module Metronome
  module Models
    module Customers
      type invoice_list_params =
        {
          customer_id: String,
          credit_type_id: String,
          ending_before: Time,
          limit: Integer,
          next_page: String,
          skip_zero_qty_line_items: bool,
          sort: Metronome::Models::Customers::InvoiceListParams::sort,
          starting_on: Time,
          status: String
        }
        & Metronome::request_parameters

      class InvoiceListParams < Metronome::BaseModel
        extend Metronome::RequestParameters::Converter
        include Metronome::RequestParameters

        attr_accessor customer_id: String

        attr_reader credit_type_id: String?

        def credit_type_id=: (String) -> String

        attr_reader ending_before: Time?

        def ending_before=: (Time) -> Time

        attr_reader limit: Integer?

        def limit=: (Integer) -> Integer

        attr_reader next_page: String?

        def next_page=: (String) -> String

        attr_reader skip_zero_qty_line_items: bool?

        def skip_zero_qty_line_items=: (bool) -> bool

        attr_reader sort: Metronome::Models::Customers::InvoiceListParams::sort?

        def sort=: (
          Metronome::Models::Customers::InvoiceListParams::sort
        ) -> Metronome::Models::Customers::InvoiceListParams::sort

        attr_reader starting_on: Time?

        def starting_on=: (Time) -> Time

        attr_reader status: String?

        def status=: (String) -> String

        def initialize:
          (
            customer_id: String,
            credit_type_id: String,
            ending_before: Time,
            limit: Integer,
            next_page: String,
            skip_zero_qty_line_items: bool,
            sort: Metronome::Models::Customers::InvoiceListParams::sort,
            starting_on: Time,
            status: String,
            request_options: Metronome::request_opts
          ) -> void
          | (
            ?Metronome::Models::Customers::invoice_list_params
            | Metronome::BaseModel data
          ) -> void

        def to_hash: -> Metronome::Models::Customers::invoice_list_params

        type sort = :date_asc | :date_desc

        class Sort < Metronome::Enum
          DATE_ASC: :date_asc
          DATE_DESC: :date_desc

          def self.values: -> ::Array[Metronome::Models::Customers::InvoiceListParams::sort]
        end
      end
    end
  end
end
