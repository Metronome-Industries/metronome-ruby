module Metronome
  module Models
    module Customers
      type alert_list_params =
        {
          customer_id: String,
          next_page: String,
          alert_statuses: Array[Metronome::Models::Customers::AlertListParams::alert_status]
        }
        & Metronome::request_parameters

      class AlertListParams < Metronome::BaseModel
        extend Metronome::RequestParameters::Converter
        include Metronome::RequestParameters

        attr_accessor customer_id: String

        attr_reader next_page: String?

        def next_page=: (String) -> void

        attr_reader alert_statuses: Array[Metronome::Models::Customers::AlertListParams::alert_status]

        def alert_statuses=: (
          Array[Metronome::Models::Customers::AlertListParams::alert_status]
        ) -> void

        def initialize:
          (
            customer_id: String,
            next_page: String,
            alert_statuses: Array[Metronome::Models::Customers::AlertListParams::alert_status],
            request_options: Metronome::request_opts
          ) -> void
          | (
            ?Metronome::Models::Customers::alert_list_params
            | Metronome::BaseModel data
          ) -> void

        def to_h: -> Metronome::Models::Customers::alert_list_params

        type alert_status = :ENABLED | :DISABLED | :ARCHIVED

        class AlertStatus < Metronome::Enum
          ENABLED: :ENABLED
          DISABLED: :DISABLED
          ARCHIVED: :ARCHIVED

          def self.values: -> Array[Metronome::Models::Customers::AlertListParams::alert_status]
        end
      end
    end
  end
end
