module Metronome
  module Resources
    class Contracts
      class Products
        def create:
          (
            Metronome::Models::Contracts::ProductCreateParams
            | ::Hash[Symbol, top] params
          ) -> Metronome::Models::Contracts::ProductCreateResponse
          | (
            name: String,
            type: Metronome::Models::Contracts::ProductCreateParams::type_,
            billable_metric_id: String,
            composite_product_ids: ::Array[String],
            composite_tags: ::Array[String],
            exclude_free_usage: bool,
            is_refundable: bool,
            netsuite_internal_item_id: String,
            netsuite_overage_item_id: String,
            presentation_group_key: ::Array[String],
            pricing_group_key: ::Array[String],
            quantity_conversion: Metronome::Models::Contracts::QuantityConversion?,
            quantity_rounding: Metronome::Models::Contracts::QuantityRounding?,
            tags: ::Array[String],
            request_options: Metronome::request_opts
          ) -> Metronome::Models::Contracts::ProductCreateResponse

        def retrieve:
          (
            Metronome::Models::Contracts::ProductRetrieveParams
            | ::Hash[Symbol, top] params
          ) -> Metronome::Models::Contracts::ProductRetrieveResponse
          | (
            id: String,
            request_options: Metronome::request_opts
          ) -> Metronome::Models::Contracts::ProductRetrieveResponse

        def update:
          (
            Metronome::Models::Contracts::ProductUpdateParams
            | ::Hash[Symbol, top] params
          ) -> Metronome::Models::Contracts::ProductUpdateResponse
          | (
            product_id: String,
            starting_at: Time,
            billable_metric_id: String,
            composite_product_ids: ::Array[String],
            composite_tags: ::Array[String],
            exclude_free_usage: bool,
            is_refundable: bool,
            name: String,
            netsuite_internal_item_id: String,
            netsuite_overage_item_id: String,
            presentation_group_key: ::Array[String],
            pricing_group_key: ::Array[String],
            quantity_conversion: Metronome::Models::Contracts::QuantityConversion?,
            quantity_rounding: Metronome::Models::Contracts::QuantityRounding?,
            tags: ::Array[String],
            request_options: Metronome::request_opts
          ) -> Metronome::Models::Contracts::ProductUpdateResponse

        def list:
          (
            ?Metronome::Models::Contracts::ProductListParams
            | ::Hash[Symbol, top] params
          ) -> Metronome::CursorPage[Metronome::Models::Contracts::ProductListResponse]
          | (
            limit: Integer,
            next_page: String,
            archive_filter: Metronome::Models::Contracts::ProductListParams::archive_filter,
            request_options: Metronome::request_opts
          ) -> Metronome::CursorPage[Metronome::Models::Contracts::ProductListResponse]

        def archive:
          (
            Metronome::Models::Contracts::ProductArchiveParams
            | ::Hash[Symbol, top] params
          ) -> Metronome::Models::Contracts::ProductArchiveResponse
          | (
            product_id: String,
            request_options: Metronome::request_opts
          ) -> Metronome::Models::Contracts::ProductArchiveResponse

        def initialize: (client: Metronome::Client) -> void
      end
    end
  end
end
