module MetronomeSDK
  module Models
    module V2
      type contract_edit_params =
        {
          contract_id: String,
          customer_id: String,
          add_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit],
          add_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCredit],
          add_discounts: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount],
          add_overrides: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride],
          add_professional_services: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddProfessionalService],
          add_recurring_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit],
          add_recurring_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit],
          add_reseller_royalties: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty],
          add_scheduled_charges: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge],
          add_spend_threshold_configuration: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration,
          archive_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCommit],
          archive_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCredit],
          archive_scheduled_charges: ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveScheduledCharge],
          remove_overrides: ::Array[MetronomeSDK::Models::V2::ContractEditParams::RemoveOverride],
          update_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit],
          update_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit],
          update_scheduled_charges: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge],
          update_spend_threshold_configuration: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration
        }
        & MetronomeSDK::request_parameters

      class ContractEditParams < MetronomeSDK::BaseModel
        extend MetronomeSDK::RequestParameters::Converter
        include MetronomeSDK::RequestParameters

        attr_accessor contract_id: String

        attr_accessor customer_id: String

        attr_reader add_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit]?

        def add_commits=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit]

        attr_reader add_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCredit]?

        def add_credits=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCredit]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCredit]

        attr_reader add_discounts: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount]?

        def add_discounts=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount]

        attr_reader add_overrides: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride]?

        def add_overrides=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride]

        attr_reader add_professional_services: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddProfessionalService]?

        def add_professional_services=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddProfessionalService]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddProfessionalService]

        attr_reader add_recurring_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit]?

        def add_recurring_commits=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit]

        attr_reader add_recurring_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit]?

        def add_recurring_credits=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit]

        attr_reader add_reseller_royalties: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty]?

        def add_reseller_royalties=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty]

        attr_reader add_scheduled_charges: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge]?

        def add_scheduled_charges=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge]

        attr_reader add_spend_threshold_configuration: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration?

        def add_spend_threshold_configuration=: (
          MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration
        ) -> MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration

        attr_reader archive_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCommit]?

        def archive_commits=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCommit]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCommit]

        attr_reader archive_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCredit]?

        def archive_credits=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCredit]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCredit]

        attr_reader archive_scheduled_charges: ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveScheduledCharge]?

        def archive_scheduled_charges=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveScheduledCharge]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveScheduledCharge]

        attr_reader remove_overrides: ::Array[MetronomeSDK::Models::V2::ContractEditParams::RemoveOverride]?

        def remove_overrides=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::RemoveOverride]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::RemoveOverride]

        attr_reader update_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit]?

        def update_commits=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit]

        attr_reader update_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit]?

        def update_credits=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit]

        attr_reader update_scheduled_charges: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge]?

        def update_scheduled_charges=: (
          ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge]
        ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge]

        attr_reader update_spend_threshold_configuration: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration?

        def update_spend_threshold_configuration=: (
          MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration
        ) -> MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration

        def initialize:
          (
            contract_id: String,
            customer_id: String,
            add_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit],
            add_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCredit],
            add_discounts: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount],
            add_overrides: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride],
            add_professional_services: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddProfessionalService],
            add_recurring_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit],
            add_recurring_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit],
            add_reseller_royalties: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty],
            add_scheduled_charges: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge],
            add_spend_threshold_configuration: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration,
            archive_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCommit],
            archive_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveCredit],
            archive_scheduled_charges: ::Array[MetronomeSDK::Models::V2::ContractEditParams::ArchiveScheduledCharge],
            remove_overrides: ::Array[MetronomeSDK::Models::V2::ContractEditParams::RemoveOverride],
            update_commits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit],
            update_credits: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit],
            update_scheduled_charges: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge],
            update_spend_threshold_configuration: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration,
            request_options: MetronomeSDK::request_opts
          ) -> void
          | (
            ?MetronomeSDK::Models::V2::contract_edit_params
            | MetronomeSDK::BaseModel data
          ) -> void

        def to_hash: -> MetronomeSDK::Models::V2::contract_edit_params

        type add_commit =
          {
            product_id: String,
            type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::type_,
            access_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule,
            amount: Float,
            applicable_product_ids: ::Array[String],
            applicable_product_tags: ::Array[String],
            custom_fields: ::Hash[Symbol, String],
            description: String,
            invoice_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule,
            name: String,
            netsuite_sales_order_id: String,
            payment_gate_config: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig,
            priority: Float,
            rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::rate_type,
            rollover_fraction: Float,
            temporary_id: String
          }

        class AddCommit < MetronomeSDK::BaseModel
          attr_accessor product_id: String

          attr_accessor type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::type_

          attr_reader access_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule?

          def access_schedule=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule

          attr_reader amount: Float?

          def amount=: (Float) -> Float

          attr_reader applicable_product_ids: ::Array[String]?

          def applicable_product_ids=: (::Array[String]) -> ::Array[String]

          attr_reader applicable_product_tags: ::Array[String]?

          def applicable_product_tags=: (::Array[String]) -> ::Array[String]

          attr_reader custom_fields: ::Hash[Symbol, String]?

          def custom_fields=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader description: String?

          def description=: (String) -> String

          attr_reader invoice_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule?

          def invoice_schedule=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader netsuite_sales_order_id: String?

          def netsuite_sales_order_id=: (String) -> String

          attr_reader payment_gate_config: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig?

          def payment_gate_config=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig

          attr_reader priority: Float?

          def priority=: (Float) -> Float

          attr_reader rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::rate_type?

          def rate_type=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddCommit::rate_type
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::rate_type

          attr_reader rollover_fraction: Float?

          def rollover_fraction=: (Float) -> Float

          attr_reader temporary_id: String?

          def temporary_id=: (String) -> String

          def initialize:
            (
              product_id: String,
              type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::type_,
              access_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule,
              amount: Float,
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              custom_fields: ::Hash[Symbol, String],
              description: String,
              invoice_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule,
              name: String,
              netsuite_sales_order_id: String,
              payment_gate_config: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig,
              priority: Float,
              rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::rate_type,
              rollover_fraction: Float,
              temporary_id: String
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_commit
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_commit

          type type_ = :PREPAID | :POSTPAID

          class Type < MetronomeSDK::Enum
            PREPAID: :PREPAID
            POSTPAID: :POSTPAID

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::type_]
          end

          type access_schedule =
            {
              schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule::ScheduleItem],
              credit_type_id: String
            }

          class AccessSchedule < MetronomeSDK::BaseModel
            attr_accessor schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule::ScheduleItem]

            attr_reader credit_type_id: String?

            def credit_type_id=: (String) -> String

            def initialize:
              (
                schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule::ScheduleItem],
                credit_type_id: String
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddCommit::access_schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::access_schedule

            type schedule_item =
              { amount: Float, ending_before: Time, starting_at: Time }

            class ScheduleItem < MetronomeSDK::BaseModel
              attr_accessor amount: Float

              attr_accessor ending_before: Time

              attr_accessor starting_at: Time

              def initialize:
                (amount: Float, ending_before: Time, starting_at: Time) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule::schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::AccessSchedule::schedule_item
            end
          end

          type invoice_schedule =
            {
              credit_type_id: String,
              recurring_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule,
              schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::ScheduleItem]
            }

          class InvoiceSchedule < MetronomeSDK::BaseModel
            attr_reader credit_type_id: String?

            def credit_type_id=: (String) -> String

            attr_reader recurring_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule?

            def recurring_schedule=: (
              MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule
            ) -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule

            attr_reader schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::ScheduleItem]?

            def schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::ScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::ScheduleItem]

            def initialize:
              (
                credit_type_id: String,
                recurring_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule,
                schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::ScheduleItem]
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddCommit::invoice_schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::invoice_schedule

            type recurring_schedule =
              {
                amount_distribution: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule::amount_distribution,
                ending_before: Time,
                frequency: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule::frequency,
                starting_at: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class RecurringSchedule < MetronomeSDK::BaseModel
              attr_accessor amount_distribution: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule::amount_distribution

              attr_accessor ending_before: Time

              attr_accessor frequency: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule::frequency

              attr_accessor starting_at: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  amount_distribution: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule::amount_distribution,
                  ending_before: Time,
                  frequency: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule::frequency,
                  starting_at: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::recurring_schedule
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::recurring_schedule

              type amount_distribution = :DIVIDED | :DIVIDED_ROUNDED | :EACH

              class AmountDistribution < MetronomeSDK::Enum
                DIVIDED: :DIVIDED
                DIVIDED_ROUNDED: :DIVIDED_ROUNDED
                EACH: :EACH

                def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule::amount_distribution]
              end

              type frequency =
                :MONTHLY | :QUARTERLY | :SEMI_ANNUAL | :ANNUAL | :WEEKLY

              class Frequency < MetronomeSDK::Enum
                MONTHLY: :MONTHLY
                QUARTERLY: :QUARTERLY
                SEMI_ANNUAL: :SEMI_ANNUAL
                ANNUAL: :ANNUAL
                WEEKLY: :WEEKLY

                def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::RecurringSchedule::frequency]
              end
            end

            type schedule_item =
              {
                timestamp: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class ScheduleItem < MetronomeSDK::BaseModel
              attr_accessor timestamp: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  timestamp: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::InvoiceSchedule::schedule_item
            end
          end

          type payment_gate_config =
            {
              payment_gate_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::payment_gate_type,
              stripe_config: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::StripeConfig,
              tax_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::tax_type
            }

          class PaymentGateConfig < MetronomeSDK::BaseModel
            attr_accessor payment_gate_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::payment_gate_type

            attr_reader stripe_config: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::StripeConfig?

            def stripe_config=: (
              MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::StripeConfig
            ) -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::StripeConfig

            attr_reader tax_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::tax_type?

            def tax_type=: (
              MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::tax_type
            ) -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::tax_type

            def initialize:
              (
                payment_gate_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::payment_gate_type,
                stripe_config: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::tax_type
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddCommit::payment_gate_config
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::payment_gate_config

            type payment_gate_type = :NONE | :STRIPE | :EXTERNAL

            class PaymentGateType < MetronomeSDK::Enum
              NONE: :NONE
              STRIPE: :STRIPE
              EXTERNAL: :EXTERNAL

              def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::payment_gate_type]
            end

            type stripe_config =
              {
                payment_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::StripeConfig::payment_type
              }

            class StripeConfig < MetronomeSDK::BaseModel
              attr_accessor payment_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::StripeConfig::payment_type

              def initialize:
                (
                  payment_type: MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::StripeConfig::payment_type
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::stripe_config
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::stripe_config

              type payment_type = :INVOICE | :PAYMENT_INTENT

              class PaymentType < MetronomeSDK::Enum
                INVOICE: :INVOICE
                PAYMENT_INTENT: :PAYMENT_INTENT

                def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::StripeConfig::payment_type]
              end
            end

            type tax_type = :NONE | :STRIPE

            class TaxType < MetronomeSDK::Enum
              NONE: :NONE
              STRIPE: :STRIPE

              def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::PaymentGateConfig::tax_type]
            end
          end

          type rate_type = :COMMIT_RATE | :LIST_RATE

          class RateType < MetronomeSDK::Enum
            COMMIT_RATE: :COMMIT_RATE
            LIST_RATE: :LIST_RATE

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCommit::rate_type]
          end
        end

        type add_credit =
          {
            access_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCredit::AccessSchedule,
            product_id: String,
            applicable_product_ids: ::Array[String],
            applicable_product_tags: ::Array[String],
            custom_fields: ::Hash[Symbol, String],
            description: String,
            name: String,
            netsuite_sales_order_id: String,
            priority: Float,
            rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddCredit::rate_type
          }

        class AddCredit < MetronomeSDK::BaseModel
          attr_accessor access_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCredit::AccessSchedule

          attr_accessor product_id: String

          attr_reader applicable_product_ids: ::Array[String]?

          def applicable_product_ids=: (::Array[String]) -> ::Array[String]

          attr_reader applicable_product_tags: ::Array[String]?

          def applicable_product_tags=: (::Array[String]) -> ::Array[String]

          attr_reader custom_fields: ::Hash[Symbol, String]?

          def custom_fields=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader description: String?

          def description=: (String) -> String

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader netsuite_sales_order_id: String?

          def netsuite_sales_order_id=: (String) -> String

          attr_reader priority: Float?

          def priority=: (Float) -> Float

          attr_reader rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddCredit::rate_type?

          def rate_type=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddCredit::rate_type
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddCredit::rate_type

          def initialize:
            (
              access_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddCredit::AccessSchedule,
              product_id: String,
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              custom_fields: ::Hash[Symbol, String],
              description: String,
              name: String,
              netsuite_sales_order_id: String,
              priority: Float,
              rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddCredit::rate_type
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_credit
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_credit

          type access_schedule =
            {
              schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCredit::AccessSchedule::ScheduleItem],
              credit_type_id: String
            }

          class AccessSchedule < MetronomeSDK::BaseModel
            attr_accessor schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCredit::AccessSchedule::ScheduleItem]

            attr_reader credit_type_id: String?

            def credit_type_id=: (String) -> String

            def initialize:
              (
                schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCredit::AccessSchedule::ScheduleItem],
                credit_type_id: String
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddCredit::access_schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddCredit::access_schedule

            type schedule_item =
              { amount: Float, ending_before: Time, starting_at: Time }

            class ScheduleItem < MetronomeSDK::BaseModel
              attr_accessor amount: Float

              attr_accessor ending_before: Time

              attr_accessor starting_at: Time

              def initialize:
                (amount: Float, ending_before: Time, starting_at: Time) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddCredit::AccessSchedule::schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddCredit::AccessSchedule::schedule_item
            end
          end

          type rate_type = :COMMIT_RATE | :LIST_RATE

          class RateType < MetronomeSDK::Enum
            COMMIT_RATE: :COMMIT_RATE
            LIST_RATE: :LIST_RATE

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddCredit::rate_type]
          end
        end

        type add_discount =
          {
            product_id: String,
            schedule: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule,
            custom_fields: ::Hash[Symbol, String],
            name: String,
            netsuite_sales_order_id: String
          }

        class AddDiscount < MetronomeSDK::BaseModel
          attr_accessor product_id: String

          attr_accessor schedule: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule

          attr_reader custom_fields: ::Hash[Symbol, String]?

          def custom_fields=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader netsuite_sales_order_id: String?

          def netsuite_sales_order_id=: (String) -> String

          def initialize:
            (
              product_id: String,
              schedule: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule,
              custom_fields: ::Hash[Symbol, String],
              name: String,
              netsuite_sales_order_id: String
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_discount
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_discount

          type schedule =
            {
              credit_type_id: String,
              recurring_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule,
              schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::ScheduleItem]
            }

          class Schedule < MetronomeSDK::BaseModel
            attr_reader credit_type_id: String?

            def credit_type_id=: (String) -> String

            attr_reader recurring_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule?

            def recurring_schedule=: (
              MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule
            ) -> MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule

            attr_reader schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::ScheduleItem]?

            def schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::ScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::ScheduleItem]

            def initialize:
              (
                credit_type_id: String,
                recurring_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule,
                schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::ScheduleItem]
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::schedule

            type recurring_schedule =
              {
                amount_distribution: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule::amount_distribution,
                ending_before: Time,
                frequency: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule::frequency,
                starting_at: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class RecurringSchedule < MetronomeSDK::BaseModel
              attr_accessor amount_distribution: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule::amount_distribution

              attr_accessor ending_before: Time

              attr_accessor frequency: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule::frequency

              attr_accessor starting_at: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  amount_distribution: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule::amount_distribution,
                  ending_before: Time,
                  frequency: MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule::frequency,
                  starting_at: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::recurring_schedule
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::recurring_schedule

              type amount_distribution = :DIVIDED | :DIVIDED_ROUNDED | :EACH

              class AmountDistribution < MetronomeSDK::Enum
                DIVIDED: :DIVIDED
                DIVIDED_ROUNDED: :DIVIDED_ROUNDED
                EACH: :EACH

                def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule::amount_distribution]
              end

              type frequency =
                :MONTHLY | :QUARTERLY | :SEMI_ANNUAL | :ANNUAL | :WEEKLY

              class Frequency < MetronomeSDK::Enum
                MONTHLY: :MONTHLY
                QUARTERLY: :QUARTERLY
                SEMI_ANNUAL: :SEMI_ANNUAL
                ANNUAL: :ANNUAL
                WEEKLY: :WEEKLY

                def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::RecurringSchedule::frequency]
              end
            end

            type schedule_item =
              {
                timestamp: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class ScheduleItem < MetronomeSDK::BaseModel
              attr_accessor timestamp: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  timestamp: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddDiscount::Schedule::schedule_item
            end
          end
        end

        type add_override =
          {
            starting_at: Time,
            applicable_product_tags: ::Array[String],
            ending_before: Time,
            entitled: bool,
            is_commit_specific: bool,
            multiplier: Float,
            override_specifiers: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverrideSpecifier],
            overwrite_rate: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverwriteRate,
            priority: Float,
            product_id: String,
            target: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::target,
            tiers: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::Tier],
            type: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::type_
          }

        class AddOverride < MetronomeSDK::BaseModel
          attr_accessor starting_at: Time

          attr_reader applicable_product_tags: ::Array[String]?

          def applicable_product_tags=: (::Array[String]) -> ::Array[String]

          attr_reader ending_before: Time?

          def ending_before=: (Time) -> Time

          attr_reader entitled: bool?

          def entitled=: (bool) -> bool

          attr_reader is_commit_specific: bool?

          def is_commit_specific=: (bool) -> bool

          attr_reader multiplier: Float?

          def multiplier=: (Float) -> Float

          attr_reader override_specifiers: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverrideSpecifier]?

          def override_specifiers=: (
            ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverrideSpecifier]
          ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverrideSpecifier]

          attr_reader overwrite_rate: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverwriteRate?

          def overwrite_rate=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverwriteRate
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverwriteRate

          attr_reader priority: Float?

          def priority=: (Float) -> Float

          attr_reader product_id: String?

          def product_id=: (String) -> String

          attr_reader target: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::target?

          def target=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddOverride::target
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddOverride::target

          attr_reader tiers: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::Tier]?

          def tiers=: (
            ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::Tier]
          ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::Tier]

          attr_reader type: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::type_?

          def type=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddOverride::type_
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddOverride::type_

          def initialize:
            (
              starting_at: Time,
              applicable_product_tags: ::Array[String],
              ending_before: Time,
              entitled: bool,
              is_commit_specific: bool,
              multiplier: Float,
              override_specifiers: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverrideSpecifier],
              overwrite_rate: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverwriteRate,
              priority: Float,
              product_id: String,
              target: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::target,
              tiers: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::Tier],
              type: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::type_
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_override
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_override

          type override_specifier =
            {
              commit_ids: ::Array[String],
              presentation_group_values: ::Hash[Symbol, String],
              pricing_group_values: ::Hash[Symbol, String],
              product_id: String,
              product_tags: ::Array[String],
              recurring_commit_ids: ::Array[String],
              recurring_credit_ids: ::Array[String]
            }

          class OverrideSpecifier < MetronomeSDK::BaseModel
            attr_reader commit_ids: ::Array[String]?

            def commit_ids=: (::Array[String]) -> ::Array[String]

            attr_reader presentation_group_values: ::Hash[Symbol, String]?

            def presentation_group_values=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader pricing_group_values: ::Hash[Symbol, String]?

            def pricing_group_values=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader product_id: String?

            def product_id=: (String) -> String

            attr_reader product_tags: ::Array[String]?

            def product_tags=: (::Array[String]) -> ::Array[String]

            attr_reader recurring_commit_ids: ::Array[String]?

            def recurring_commit_ids=: (::Array[String]) -> ::Array[String]

            attr_reader recurring_credit_ids: ::Array[String]?

            def recurring_credit_ids=: (::Array[String]) -> ::Array[String]

            def initialize:
              (
                commit_ids: ::Array[String],
                presentation_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String],
                recurring_commit_ids: ::Array[String],
                recurring_credit_ids: ::Array[String]
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddOverride::override_specifier
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddOverride::override_specifier
          end

          type overwrite_rate =
            {
              rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverwriteRate::rate_type,
              credit_type_id: String,
              custom_rate: ::Hash[Symbol, top],
              is_prorated: bool,
              price: Float,
              quantity: Float,
              tiers: ::Array[MetronomeSDK::Models::Tier]
            }

          class OverwriteRate < MetronomeSDK::BaseModel
            attr_accessor rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverwriteRate::rate_type

            attr_reader credit_type_id: String?

            def credit_type_id=: (String) -> String

            attr_reader custom_rate: ::Hash[Symbol, top]?

            def custom_rate=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

            attr_reader is_prorated: bool?

            def is_prorated=: (bool) -> bool

            attr_reader price: Float?

            def price=: (Float) -> Float

            attr_reader quantity: Float?

            def quantity=: (Float) -> Float

            attr_reader tiers: ::Array[MetronomeSDK::Models::Tier]?

            def tiers=: (
              ::Array[MetronomeSDK::Models::Tier]
            ) -> ::Array[MetronomeSDK::Models::Tier]

            def initialize:
              (
                rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverwriteRate::rate_type,
                credit_type_id: String,
                custom_rate: ::Hash[Symbol, top],
                is_prorated: bool,
                price: Float,
                quantity: Float,
                tiers: ::Array[MetronomeSDK::Models::Tier]
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddOverride::overwrite_rate
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddOverride::overwrite_rate

            type rate_type =
              :FLAT | :PERCENTAGE | :SUBSCRIPTION | :TIERED | :CUSTOM

            class RateType < MetronomeSDK::Enum
              FLAT: :FLAT
              PERCENTAGE: :PERCENTAGE
              SUBSCRIPTION: :SUBSCRIPTION
              TIERED: :TIERED
              CUSTOM: :CUSTOM

              def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::OverwriteRate::rate_type]
            end
          end

          type target = :COMMIT_RATE | :LIST_RATE

          class Target < MetronomeSDK::Enum
            COMMIT_RATE: :COMMIT_RATE
            LIST_RATE: :LIST_RATE

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::target]
          end

          type tier = { multiplier: Float, size: Float }

          class Tier < MetronomeSDK::BaseModel
            attr_accessor multiplier: Float

            attr_reader size: Float?

            def size=: (Float) -> Float

            def initialize:
              (multiplier: Float, size: Float) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddOverride::tier
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddOverride::tier
          end

          type type_ = :OVERWRITE | :MULTIPLIER | :TIERED

          class Type < MetronomeSDK::Enum
            OVERWRITE: :OVERWRITE
            MULTIPLIER: :MULTIPLIER
            TIERED: :TIERED

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddOverride::type_]
          end
        end

        type add_professional_service =
          {
            max_amount: Float,
            product_id: String,
            quantity: Float,
            unit_price: Float,
            custom_fields: ::Hash[Symbol, String],
            description: String,
            netsuite_sales_order_id: String
          }

        class AddProfessionalService < MetronomeSDK::BaseModel
          attr_accessor max_amount: Float

          attr_accessor product_id: String

          attr_accessor quantity: Float

          attr_accessor unit_price: Float

          attr_reader custom_fields: ::Hash[Symbol, String]?

          def custom_fields=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader description: String?

          def description=: (String) -> String

          attr_reader netsuite_sales_order_id: String?

          def netsuite_sales_order_id=: (String) -> String

          def initialize:
            (
              max_amount: Float,
              product_id: String,
              quantity: Float,
              unit_price: Float,
              custom_fields: ::Hash[Symbol, String],
              description: String,
              netsuite_sales_order_id: String
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_professional_service
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_professional_service
        end

        type add_recurring_commit =
          {
            access_amount: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::AccessAmount,
            commit_duration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::CommitDuration,
            priority: Float,
            product_id: String,
            starting_at: Time,
            applicable_product_ids: ::Array[String],
            applicable_product_tags: ::Array[String],
            description: String,
            ending_before: Time,
            invoice_amount: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::InvoiceAmount,
            name: String,
            netsuite_sales_order_id: String,
            proration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::proration,
            rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::rate_type,
            recurrence_frequency: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::recurrence_frequency,
            rollover_fraction: Float,
            temporary_id: String
          }

        class AddRecurringCommit < MetronomeSDK::BaseModel
          attr_accessor access_amount: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::AccessAmount

          attr_accessor commit_duration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::CommitDuration

          attr_accessor priority: Float

          attr_accessor product_id: String

          attr_accessor starting_at: Time

          attr_reader applicable_product_ids: ::Array[String]?

          def applicable_product_ids=: (::Array[String]) -> ::Array[String]

          attr_reader applicable_product_tags: ::Array[String]?

          def applicable_product_tags=: (::Array[String]) -> ::Array[String]

          attr_reader description: String?

          def description=: (String) -> String

          attr_reader ending_before: Time?

          def ending_before=: (Time) -> Time

          attr_reader invoice_amount: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::InvoiceAmount?

          def invoice_amount=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::InvoiceAmount
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::InvoiceAmount

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader netsuite_sales_order_id: String?

          def netsuite_sales_order_id=: (String) -> String

          attr_reader proration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::proration?

          def proration=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::proration
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::proration

          attr_reader rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::rate_type?

          def rate_type=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::rate_type
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::rate_type

          attr_reader recurrence_frequency: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::recurrence_frequency?

          def recurrence_frequency=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::recurrence_frequency
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::recurrence_frequency

          attr_reader rollover_fraction: Float?

          def rollover_fraction=: (Float) -> Float

          attr_reader temporary_id: String?

          def temporary_id=: (String) -> String

          def initialize:
            (
              access_amount: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::AccessAmount,
              commit_duration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::CommitDuration,
              priority: Float,
              product_id: String,
              starting_at: Time,
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              description: String,
              ending_before: Time,
              invoice_amount: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::InvoiceAmount,
              name: String,
              netsuite_sales_order_id: String,
              proration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::proration,
              rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::rate_type,
              recurrence_frequency: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::recurrence_frequency,
              rollover_fraction: Float,
              temporary_id: String
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_recurring_commit
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_recurring_commit

          type access_amount =
            { credit_type_id: String, quantity: Float, unit_price: Float }

          class AccessAmount < MetronomeSDK::BaseModel
            attr_accessor credit_type_id: String

            attr_accessor quantity: Float

            attr_accessor unit_price: Float

            def initialize:
              (
                credit_type_id: String,
                quantity: Float,
                unit_price: Float
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::access_amount
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::access_amount
          end

          type commit_duration =
            {
              unit: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::CommitDuration::unit,
              value: Float
            }

          class CommitDuration < MetronomeSDK::BaseModel
            attr_accessor unit: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::CommitDuration::unit

            attr_accessor value: Float

            def initialize:
              (
                unit: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::CommitDuration::unit,
                value: Float
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::commit_duration
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::commit_duration

            type unit = :PERIODS

            class Unit < MetronomeSDK::Enum
              PERIODS: :PERIODS

              def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::CommitDuration::unit]
            end
          end

          type invoice_amount =
            { credit_type_id: String, quantity: Float, unit_price: Float }

          class InvoiceAmount < MetronomeSDK::BaseModel
            attr_accessor credit_type_id: String

            attr_accessor quantity: Float

            attr_accessor unit_price: Float

            def initialize:
              (
                credit_type_id: String,
                quantity: Float,
                unit_price: Float
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::invoice_amount
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::invoice_amount
          end

          type proration = :NONE | :FIRST | :LAST | :FIRST_AND_LAST

          class Proration < MetronomeSDK::Enum
            NONE: :NONE
            FIRST: :FIRST
            LAST: :LAST
            FIRST_AND_LAST: :FIRST_AND_LAST

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::proration]
          end

          type rate_type = :COMMIT_RATE | :LIST_RATE

          class RateType < MetronomeSDK::Enum
            COMMIT_RATE: :COMMIT_RATE
            LIST_RATE: :LIST_RATE

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::rate_type]
          end

          type recurrence_frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

          class RecurrenceFrequency < MetronomeSDK::Enum
            MONTHLY: :MONTHLY
            QUARTERLY: :QUARTERLY
            ANNUAL: :ANNUAL
            WEEKLY: :WEEKLY

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCommit::recurrence_frequency]
          end
        end

        type add_recurring_credit =
          {
            access_amount: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::AccessAmount,
            commit_duration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::CommitDuration,
            priority: Float,
            product_id: String,
            starting_at: Time,
            applicable_product_ids: ::Array[String],
            applicable_product_tags: ::Array[String],
            description: String,
            ending_before: Time,
            name: String,
            netsuite_sales_order_id: String,
            proration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::proration,
            rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::rate_type,
            recurrence_frequency: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::recurrence_frequency,
            rollover_fraction: Float,
            temporary_id: String
          }

        class AddRecurringCredit < MetronomeSDK::BaseModel
          attr_accessor access_amount: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::AccessAmount

          attr_accessor commit_duration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::CommitDuration

          attr_accessor priority: Float

          attr_accessor product_id: String

          attr_accessor starting_at: Time

          attr_reader applicable_product_ids: ::Array[String]?

          def applicable_product_ids=: (::Array[String]) -> ::Array[String]

          attr_reader applicable_product_tags: ::Array[String]?

          def applicable_product_tags=: (::Array[String]) -> ::Array[String]

          attr_reader description: String?

          def description=: (String) -> String

          attr_reader ending_before: Time?

          def ending_before=: (Time) -> Time

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader netsuite_sales_order_id: String?

          def netsuite_sales_order_id=: (String) -> String

          attr_reader proration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::proration?

          def proration=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::proration
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::proration

          attr_reader rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::rate_type?

          def rate_type=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::rate_type
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::rate_type

          attr_reader recurrence_frequency: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::recurrence_frequency?

          def recurrence_frequency=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::recurrence_frequency
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::recurrence_frequency

          attr_reader rollover_fraction: Float?

          def rollover_fraction=: (Float) -> Float

          attr_reader temporary_id: String?

          def temporary_id=: (String) -> String

          def initialize:
            (
              access_amount: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::AccessAmount,
              commit_duration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::CommitDuration,
              priority: Float,
              product_id: String,
              starting_at: Time,
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              description: String,
              ending_before: Time,
              name: String,
              netsuite_sales_order_id: String,
              proration: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::proration,
              rate_type: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::rate_type,
              recurrence_frequency: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::recurrence_frequency,
              rollover_fraction: Float,
              temporary_id: String
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_recurring_credit
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_recurring_credit

          type access_amount =
            { credit_type_id: String, quantity: Float, unit_price: Float }

          class AccessAmount < MetronomeSDK::BaseModel
            attr_accessor credit_type_id: String

            attr_accessor quantity: Float

            attr_accessor unit_price: Float

            def initialize:
              (
                credit_type_id: String,
                quantity: Float,
                unit_price: Float
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::access_amount
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::access_amount
          end

          type commit_duration =
            {
              unit: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::CommitDuration::unit,
              value: Float
            }

          class CommitDuration < MetronomeSDK::BaseModel
            attr_accessor unit: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::CommitDuration::unit

            attr_accessor value: Float

            def initialize:
              (
                unit: MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::CommitDuration::unit,
                value: Float
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::commit_duration
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::commit_duration

            type unit = :PERIODS

            class Unit < MetronomeSDK::Enum
              PERIODS: :PERIODS

              def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::CommitDuration::unit]
            end
          end

          type proration = :NONE | :FIRST | :LAST | :FIRST_AND_LAST

          class Proration < MetronomeSDK::Enum
            NONE: :NONE
            FIRST: :FIRST
            LAST: :LAST
            FIRST_AND_LAST: :FIRST_AND_LAST

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::proration]
          end

          type rate_type = :COMMIT_RATE | :LIST_RATE

          class RateType < MetronomeSDK::Enum
            COMMIT_RATE: :COMMIT_RATE
            LIST_RATE: :LIST_RATE

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::rate_type]
          end

          type recurrence_frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

          class RecurrenceFrequency < MetronomeSDK::Enum
            MONTHLY: :MONTHLY
            QUARTERLY: :QUARTERLY
            ANNUAL: :ANNUAL
            WEEKLY: :WEEKLY

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddRecurringCredit::recurrence_frequency]
          end
        end

        type add_reseller_royalty =
          {
            reseller_type: MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::reseller_type,
            applicable_product_ids: ::Array[String],
            applicable_product_tags: ::Array[String],
            aws_options: MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::AwsOptions,
            ending_before: Time?,
            fraction: Float,
            gcp_options: MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::GcpOptions,
            netsuite_reseller_id: String,
            reseller_contract_value: Float,
            starting_at: Time
          }

        class AddResellerRoyalty < MetronomeSDK::BaseModel
          attr_accessor reseller_type: MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::reseller_type

          attr_reader applicable_product_ids: ::Array[String]?

          def applicable_product_ids=: (::Array[String]) -> ::Array[String]

          attr_reader applicable_product_tags: ::Array[String]?

          def applicable_product_tags=: (::Array[String]) -> ::Array[String]

          attr_reader aws_options: MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::AwsOptions?

          def aws_options=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::AwsOptions
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::AwsOptions

          attr_accessor ending_before: Time?

          attr_reader fraction: Float?

          def fraction=: (Float) -> Float

          attr_reader gcp_options: MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::GcpOptions?

          def gcp_options=: (
            MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::GcpOptions
          ) -> MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::GcpOptions

          attr_reader netsuite_reseller_id: String?

          def netsuite_reseller_id=: (String) -> String

          attr_reader reseller_contract_value: Float?

          def reseller_contract_value=: (Float) -> Float

          attr_reader starting_at: Time?

          def starting_at=: (Time) -> Time

          def initialize:
            (
              reseller_type: MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::reseller_type,
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              aws_options: MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::AwsOptions,
              ending_before: Time?,
              fraction: Float,
              gcp_options: MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::GcpOptions,
              netsuite_reseller_id: String,
              reseller_contract_value: Float,
              starting_at: Time
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_reseller_royalty
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_reseller_royalty

          type reseller_type = :AWS | :AWS_PRO_SERVICE | :GCP | :GCP_PRO_SERVICE

          class ResellerType < MetronomeSDK::Enum
            AWS: :AWS
            AWS_PRO_SERVICE: :AWS_PRO_SERVICE
            GCP: :GCP
            GCP_PRO_SERVICE: :GCP_PRO_SERVICE

            def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::reseller_type]
          end

          type aws_options =
            {
              aws_account_number: String,
              aws_offer_id: String,
              aws_payer_reference_id: String
            }

          class AwsOptions < MetronomeSDK::BaseModel
            attr_reader aws_account_number: String?

            def aws_account_number=: (String) -> String

            attr_reader aws_offer_id: String?

            def aws_offer_id=: (String) -> String

            attr_reader aws_payer_reference_id: String?

            def aws_payer_reference_id=: (String) -> String

            def initialize:
              (
                aws_account_number: String,
                aws_offer_id: String,
                aws_payer_reference_id: String
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::aws_options
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::aws_options
          end

          type gcp_options = { gcp_account_id: String, gcp_offer_id: String }

          class GcpOptions < MetronomeSDK::BaseModel
            attr_reader gcp_account_id: String?

            def gcp_account_id=: (String) -> String

            attr_reader gcp_offer_id: String?

            def gcp_offer_id=: (String) -> String

            def initialize:
              (gcp_account_id: String, gcp_offer_id: String) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::gcp_options
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddResellerRoyalty::gcp_options
          end
        end

        type add_scheduled_charge =
          {
            product_id: String,
            schedule: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule,
            name: String,
            netsuite_sales_order_id: String
          }

        class AddScheduledCharge < MetronomeSDK::BaseModel
          attr_accessor product_id: String

          attr_accessor schedule: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader netsuite_sales_order_id: String?

          def netsuite_sales_order_id=: (String) -> String

          def initialize:
            (
              product_id: String,
              schedule: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule,
              name: String,
              netsuite_sales_order_id: String
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_scheduled_charge
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_scheduled_charge

          type schedule =
            {
              credit_type_id: String,
              recurring_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule,
              schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::ScheduleItem]
            }

          class Schedule < MetronomeSDK::BaseModel
            attr_reader credit_type_id: String?

            def credit_type_id=: (String) -> String

            attr_reader recurring_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule?

            def recurring_schedule=: (
              MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule
            ) -> MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule

            attr_reader schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::ScheduleItem]?

            def schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::ScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::ScheduleItem]

            def initialize:
              (
                credit_type_id: String,
                recurring_schedule: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule,
                schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::ScheduleItem]
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::schedule

            type recurring_schedule =
              {
                amount_distribution: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule::amount_distribution,
                ending_before: Time,
                frequency: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule::frequency,
                starting_at: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class RecurringSchedule < MetronomeSDK::BaseModel
              attr_accessor amount_distribution: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule::amount_distribution

              attr_accessor ending_before: Time

              attr_accessor frequency: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule::frequency

              attr_accessor starting_at: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  amount_distribution: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule::amount_distribution,
                  ending_before: Time,
                  frequency: MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule::frequency,
                  starting_at: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::recurring_schedule
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::recurring_schedule

              type amount_distribution = :DIVIDED | :DIVIDED_ROUNDED | :EACH

              class AmountDistribution < MetronomeSDK::Enum
                DIVIDED: :DIVIDED
                DIVIDED_ROUNDED: :DIVIDED_ROUNDED
                EACH: :EACH

                def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule::amount_distribution]
              end

              type frequency =
                :MONTHLY | :QUARTERLY | :SEMI_ANNUAL | :ANNUAL | :WEEKLY

              class Frequency < MetronomeSDK::Enum
                MONTHLY: :MONTHLY
                QUARTERLY: :QUARTERLY
                SEMI_ANNUAL: :SEMI_ANNUAL
                ANNUAL: :ANNUAL
                WEEKLY: :WEEKLY

                def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::RecurringSchedule::frequency]
              end
            end

            type schedule_item =
              {
                timestamp: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class ScheduleItem < MetronomeSDK::BaseModel
              attr_accessor timestamp: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  timestamp: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddScheduledCharge::Schedule::schedule_item
            end
          end
        end

        type add_spend_threshold_configuration =
          {
            commit: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::Commit,
            is_enabled: bool,
            payment_gate_config: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig,
            threshold_amount: Float
          }

        class AddSpendThresholdConfiguration < MetronomeSDK::BaseModel
          attr_accessor commit: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::Commit

          attr_accessor is_enabled: bool

          attr_accessor payment_gate_config: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig

          attr_accessor threshold_amount: Float

          def initialize:
            (
              commit: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig,
              threshold_amount: Float
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::add_spend_threshold_configuration
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::add_spend_threshold_configuration

          type commit =
            { product_id: String, description: String, name: String }

          class Commit < MetronomeSDK::BaseModel
            attr_accessor product_id: String

            attr_reader description: String?

            def description=: (String) -> String

            attr_reader name: String?

            def name=: (String) -> String

            def initialize:
              (product_id: String, description: String, name: String) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::commit
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::commit
          end

          type payment_gate_config =
            {
              payment_gate_type: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
              stripe_config: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
              tax_type: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::tax_type
            }

          class PaymentGateConfig < MetronomeSDK::BaseModel
            attr_accessor payment_gate_type: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::payment_gate_type

            attr_reader stripe_config: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::StripeConfig?

            def stripe_config=: (
              MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::StripeConfig
            ) -> MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::StripeConfig

            attr_reader tax_type: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::tax_type?

            def tax_type=: (
              MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::tax_type
            ) -> MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::tax_type

            def initialize:
              (
                payment_gate_type: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                stripe_config: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::payment_gate_config
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::payment_gate_config

            type payment_gate_type = :NONE | :STRIPE | :EXTERNAL

            class PaymentGateType < MetronomeSDK::Enum
              NONE: :NONE
              STRIPE: :STRIPE
              EXTERNAL: :EXTERNAL

              def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::payment_gate_type]
            end

            type stripe_config =
              {
                payment_type: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
              }

            class StripeConfig < MetronomeSDK::BaseModel
              attr_accessor payment_type: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type

              def initialize:
                (
                  payment_type: MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::stripe_config
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::stripe_config

              type payment_type = :INVOICE | :PAYMENT_INTENT

              class PaymentType < MetronomeSDK::Enum
                INVOICE: :INVOICE
                PAYMENT_INTENT: :PAYMENT_INTENT

                def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type]
              end
            end

            type tax_type = :NONE | :STRIPE

            class TaxType < MetronomeSDK::Enum
              NONE: :NONE
              STRIPE: :STRIPE

              def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::AddSpendThresholdConfiguration::PaymentGateConfig::tax_type]
            end
          end
        end

        type archive_commit = { id: String }

        class ArchiveCommit < MetronomeSDK::BaseModel
          attr_accessor id: String

          def initialize:
            (id: String) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::archive_commit
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::archive_commit
        end

        type archive_credit = { id: String }

        class ArchiveCredit < MetronomeSDK::BaseModel
          attr_accessor id: String

          def initialize:
            (id: String) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::archive_credit
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::archive_credit
        end

        type archive_scheduled_charge = { id: String }

        class ArchiveScheduledCharge < MetronomeSDK::BaseModel
          attr_accessor id: String

          def initialize:
            (id: String) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::archive_scheduled_charge
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::archive_scheduled_charge
        end

        type remove_override = { id: String }

        class RemoveOverride < MetronomeSDK::BaseModel
          attr_accessor id: String

          def initialize:
            (id: String) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::remove_override
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::remove_override
        end

        type update_commit =
          {
            commit_id: String,
            access_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule,
            applicable_product_ids: ::Array[String]?,
            applicable_product_tags: ::Array[String]?,
            invoice_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule,
            netsuite_sales_order_id: String?,
            product_id: String,
            rollover_fraction: Float?
          }

        class UpdateCommit < MetronomeSDK::BaseModel
          attr_accessor commit_id: String

          attr_reader access_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule?

          def access_schedule=: (
            MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule
          ) -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule

          attr_accessor applicable_product_ids: ::Array[String]?

          attr_accessor applicable_product_tags: ::Array[String]?

          attr_reader invoice_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule?

          def invoice_schedule=: (
            MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule
          ) -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule

          attr_accessor netsuite_sales_order_id: String?

          attr_reader product_id: String?

          def product_id=: (String) -> String

          attr_accessor rollover_fraction: Float?

          def initialize:
            (
              commit_id: String,
              access_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule,
              applicable_product_ids: ::Array[String]?,
              applicable_product_tags: ::Array[String]?,
              invoice_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule,
              netsuite_sales_order_id: String?,
              product_id: String,
              rollover_fraction: Float?
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::update_commit
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::update_commit

          type access_schedule =
            {
              add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::AddScheduleItem],
              remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::RemoveScheduleItem],
              update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::UpdateScheduleItem]
            }

          class AccessSchedule < MetronomeSDK::BaseModel
            attr_reader add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::AddScheduleItem]?

            def add_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::AddScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::AddScheduleItem]

            attr_reader remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::RemoveScheduleItem]?

            def remove_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::RemoveScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::RemoveScheduleItem]

            attr_reader update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::UpdateScheduleItem]?

            def update_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::UpdateScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::UpdateScheduleItem]

            def initialize:
              (
                add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::AddScheduleItem],
                remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::RemoveScheduleItem],
                update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::UpdateScheduleItem]
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::access_schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::access_schedule

            type add_schedule_item =
              { amount: Float, ending_before: Time, starting_at: Time }

            class AddScheduleItem < MetronomeSDK::BaseModel
              attr_accessor amount: Float

              attr_accessor ending_before: Time

              attr_accessor starting_at: Time

              def initialize:
                (amount: Float, ending_before: Time, starting_at: Time) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::add_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::add_schedule_item
            end

            type remove_schedule_item = { id: String }

            class RemoveScheduleItem < MetronomeSDK::BaseModel
              attr_accessor id: String

              def initialize:
                (id: String) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::remove_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::remove_schedule_item
            end

            type update_schedule_item =
              {
                id: String,
                amount: Float,
                ending_before: Time,
                starting_at: Time
              }

            class UpdateScheduleItem < MetronomeSDK::BaseModel
              attr_accessor id: String

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader ending_before: Time?

              def ending_before=: (Time) -> Time

              attr_reader starting_at: Time?

              def starting_at=: (Time) -> Time

              def initialize:
                (
                  id: String,
                  amount: Float,
                  ending_before: Time,
                  starting_at: Time
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::update_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::AccessSchedule::update_schedule_item
            end
          end

          type invoice_schedule =
            {
              add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::AddScheduleItem],
              remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::RemoveScheduleItem],
              update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::UpdateScheduleItem]
            }

          class InvoiceSchedule < MetronomeSDK::BaseModel
            attr_reader add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::AddScheduleItem]?

            def add_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::AddScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::AddScheduleItem]

            attr_reader remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::RemoveScheduleItem]?

            def remove_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::RemoveScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::RemoveScheduleItem]

            attr_reader update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::UpdateScheduleItem]?

            def update_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::UpdateScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::UpdateScheduleItem]

            def initialize:
              (
                add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::AddScheduleItem],
                remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::RemoveScheduleItem],
                update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::UpdateScheduleItem]
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::invoice_schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::invoice_schedule

            type add_schedule_item =
              {
                timestamp: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class AddScheduleItem < MetronomeSDK::BaseModel
              attr_accessor timestamp: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  timestamp: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::add_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::add_schedule_item
            end

            type remove_schedule_item = { id: String }

            class RemoveScheduleItem < MetronomeSDK::BaseModel
              attr_accessor id: String

              def initialize:
                (id: String) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::remove_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::remove_schedule_item
            end

            type update_schedule_item =
              {
                id: String,
                amount: Float,
                quantity: Float,
                timestamp: Time,
                unit_price: Float
              }

            class UpdateScheduleItem < MetronomeSDK::BaseModel
              attr_accessor id: String

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader timestamp: Time?

              def timestamp=: (Time) -> Time

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  id: String,
                  amount: Float,
                  quantity: Float,
                  timestamp: Time,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::update_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCommit::InvoiceSchedule::update_schedule_item
            end
          end
        end

        type update_credit =
          {
            credit_id: String,
            access_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule,
            applicable_product_ids: ::Array[String]?,
            applicable_product_tags: ::Array[String]?,
            netsuite_sales_order_id: String?,
            product_id: String
          }

        class UpdateCredit < MetronomeSDK::BaseModel
          attr_accessor credit_id: String

          attr_reader access_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule?

          def access_schedule=: (
            MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule
          ) -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule

          attr_accessor applicable_product_ids: ::Array[String]?

          attr_accessor applicable_product_tags: ::Array[String]?

          attr_accessor netsuite_sales_order_id: String?

          attr_reader product_id: String?

          def product_id=: (String) -> String

          def initialize:
            (
              credit_id: String,
              access_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule,
              applicable_product_ids: ::Array[String]?,
              applicable_product_tags: ::Array[String]?,
              netsuite_sales_order_id: String?,
              product_id: String
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::update_credit
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::update_credit

          type access_schedule =
            {
              add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::AddScheduleItem],
              remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::RemoveScheduleItem],
              update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::UpdateScheduleItem]
            }

          class AccessSchedule < MetronomeSDK::BaseModel
            attr_reader add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::AddScheduleItem]?

            def add_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::AddScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::AddScheduleItem]

            attr_reader remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::RemoveScheduleItem]?

            def remove_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::RemoveScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::RemoveScheduleItem]

            attr_reader update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::UpdateScheduleItem]?

            def update_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::UpdateScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::UpdateScheduleItem]

            def initialize:
              (
                add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::AddScheduleItem],
                remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::RemoveScheduleItem],
                update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::UpdateScheduleItem]
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::access_schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::access_schedule

            type add_schedule_item =
              { amount: Float, ending_before: Time, starting_at: Time }

            class AddScheduleItem < MetronomeSDK::BaseModel
              attr_accessor amount: Float

              attr_accessor ending_before: Time

              attr_accessor starting_at: Time

              def initialize:
                (amount: Float, ending_before: Time, starting_at: Time) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::add_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::add_schedule_item
            end

            type remove_schedule_item = { id: String }

            class RemoveScheduleItem < MetronomeSDK::BaseModel
              attr_accessor id: String

              def initialize:
                (id: String) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::remove_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::remove_schedule_item
            end

            type update_schedule_item =
              {
                id: String,
                amount: Float,
                ending_before: Time,
                starting_at: Time
              }

            class UpdateScheduleItem < MetronomeSDK::BaseModel
              attr_accessor id: String

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader ending_before: Time?

              def ending_before=: (Time) -> Time

              attr_reader starting_at: Time?

              def starting_at=: (Time) -> Time

              def initialize:
                (
                  id: String,
                  amount: Float,
                  ending_before: Time,
                  starting_at: Time
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::update_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateCredit::AccessSchedule::update_schedule_item
            end
          end
        end

        type update_scheduled_charge =
          {
            scheduled_charge_id: String,
            invoice_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule,
            netsuite_sales_order_id: String?
          }

        class UpdateScheduledCharge < MetronomeSDK::BaseModel
          attr_accessor scheduled_charge_id: String

          attr_reader invoice_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule?

          def invoice_schedule=: (
            MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule
          ) -> MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule

          attr_accessor netsuite_sales_order_id: String?

          def initialize:
            (
              scheduled_charge_id: String,
              invoice_schedule: MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule,
              netsuite_sales_order_id: String?
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::update_scheduled_charge
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::update_scheduled_charge

          type invoice_schedule =
            {
              add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::AddScheduleItem],
              remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::RemoveScheduleItem],
              update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::UpdateScheduleItem]
            }

          class InvoiceSchedule < MetronomeSDK::BaseModel
            attr_reader add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::AddScheduleItem]?

            def add_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::AddScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::AddScheduleItem]

            attr_reader remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::RemoveScheduleItem]?

            def remove_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::RemoveScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::RemoveScheduleItem]

            attr_reader update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::UpdateScheduleItem]?

            def update_schedule_items=: (
              ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::UpdateScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::UpdateScheduleItem]

            def initialize:
              (
                add_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::AddScheduleItem],
                remove_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::RemoveScheduleItem],
                update_schedule_items: ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::UpdateScheduleItem]
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::invoice_schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::invoice_schedule

            type add_schedule_item =
              {
                timestamp: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class AddScheduleItem < MetronomeSDK::BaseModel
              attr_accessor timestamp: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  timestamp: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::add_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::add_schedule_item
            end

            type remove_schedule_item = { id: String }

            class RemoveScheduleItem < MetronomeSDK::BaseModel
              attr_accessor id: String

              def initialize:
                (id: String) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::remove_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::remove_schedule_item
            end

            type update_schedule_item =
              {
                id: String,
                amount: Float,
                quantity: Float,
                timestamp: Time,
                unit_price: Float
              }

            class UpdateScheduleItem < MetronomeSDK::BaseModel
              attr_accessor id: String

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader timestamp: Time?

              def timestamp=: (Time) -> Time

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  id: String,
                  amount: Float,
                  quantity: Float,
                  timestamp: Time,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::update_schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateScheduledCharge::InvoiceSchedule::update_schedule_item
            end
          end
        end

        type update_spend_threshold_configuration =
          {
            commit: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::Commit,
            is_enabled: bool,
            payment_gate_config: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig,
            threshold_amount: Float
          }

        class UpdateSpendThresholdConfiguration < MetronomeSDK::BaseModel
          attr_reader commit: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::Commit?

          def commit=: (
            MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::Commit
          ) -> MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::Commit

          attr_reader is_enabled: bool?

          def is_enabled=: (bool) -> bool

          attr_reader payment_gate_config: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig?

          def payment_gate_config=: (
            MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig
          ) -> MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig

          attr_reader threshold_amount: Float?

          def threshold_amount=: (Float) -> Float

          def initialize:
            (
              commit: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig,
              threshold_amount: Float
            ) -> void
            | (
              ?MetronomeSDK::Models::V2::ContractEditParams::update_spend_threshold_configuration
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::update_spend_threshold_configuration

          type commit =
            { description: String?, name: String?, product_id: String }

          class Commit < MetronomeSDK::BaseModel
            attr_accessor description: String?

            attr_accessor name: String?

            attr_reader product_id: String?

            def product_id=: (String) -> String

            def initialize:
              (description: String?, name: String?, product_id: String) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::commit
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::commit
          end

          type payment_gate_config =
            {
              payment_gate_type: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
              stripe_config: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
              tax_type: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::tax_type
            }

          class PaymentGateConfig < MetronomeSDK::BaseModel
            attr_accessor payment_gate_type: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::payment_gate_type

            attr_reader stripe_config: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::StripeConfig?

            def stripe_config=: (
              MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::StripeConfig
            ) -> MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::StripeConfig

            attr_reader tax_type: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::tax_type?

            def tax_type=: (
              MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::tax_type
            ) -> MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::tax_type

            def initialize:
              (
                payment_gate_type: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                stripe_config: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> void
              | (
                ?MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::payment_gate_config
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::payment_gate_config

            type payment_gate_type = :NONE | :STRIPE | :EXTERNAL

            class PaymentGateType < MetronomeSDK::Enum
              NONE: :NONE
              STRIPE: :STRIPE
              EXTERNAL: :EXTERNAL

              def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::payment_gate_type]
            end

            type stripe_config =
              {
                payment_type: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
              }

            class StripeConfig < MetronomeSDK::BaseModel
              attr_accessor payment_type: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type

              def initialize:
                (
                  payment_type: MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
                ) -> void
                | (
                  ?MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::stripe_config
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::stripe_config

              type payment_type = :INVOICE | :PAYMENT_INTENT

              class PaymentType < MetronomeSDK::Enum
                INVOICE: :INVOICE
                PAYMENT_INTENT: :PAYMENT_INTENT

                def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type]
              end
            end

            type tax_type = :NONE | :STRIPE

            class TaxType < MetronomeSDK::Enum
              NONE: :NONE
              STRIPE: :STRIPE

              def self.values: -> ::Array[MetronomeSDK::Models::V2::ContractEditParams::UpdateSpendThresholdConfiguration::PaymentGateConfig::tax_type]
            end
          end
        end
      end
    end
  end
end
