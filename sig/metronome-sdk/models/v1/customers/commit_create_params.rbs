module MetronomeSDK
  module Models
    module V1
      module Customers
        type commit_create_params =
          {
            access_schedule: MetronomeSDK::Models::V1::Customers::CommitCreateParams::AccessSchedule,
            customer_id: String,
            priority: Float,
            product_id: String,
            type: MetronomeSDK::Models::V1::Customers::CommitCreateParams::type_,
            applicable_contract_ids: ::Array[String],
            applicable_product_ids: ::Array[String],
            applicable_product_tags: ::Array[String],
            custom_fields: ::Hash[Symbol, String],
            description: String,
            invoice_contract_id: String,
            invoice_schedule: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule,
            name: String,
            netsuite_sales_order_id: String,
            rate_type: MetronomeSDK::Models::V1::Customers::CommitCreateParams::rate_type,
            salesforce_opportunity_id: String,
            uniqueness_key: String
          }
          & MetronomeSDK::request_parameters

        class CommitCreateParams < MetronomeSDK::BaseModel
          extend MetronomeSDK::RequestParameters::Converter
          include MetronomeSDK::RequestParameters

          attr_accessor access_schedule: MetronomeSDK::Models::V1::Customers::CommitCreateParams::AccessSchedule

          attr_accessor customer_id: String

          attr_accessor priority: Float

          attr_accessor product_id: String

          attr_accessor type: MetronomeSDK::Models::V1::Customers::CommitCreateParams::type_

          attr_reader applicable_contract_ids: ::Array[String]?

          def applicable_contract_ids=: (::Array[String]) -> ::Array[String]

          attr_reader applicable_product_ids: ::Array[String]?

          def applicable_product_ids=: (::Array[String]) -> ::Array[String]

          attr_reader applicable_product_tags: ::Array[String]?

          def applicable_product_tags=: (::Array[String]) -> ::Array[String]

          attr_reader custom_fields: ::Hash[Symbol, String]?

          def custom_fields=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader description: String?

          def description=: (String) -> String

          attr_reader invoice_contract_id: String?

          def invoice_contract_id=: (String) -> String

          attr_reader invoice_schedule: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule?

          def invoice_schedule=: (
            MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule
          ) -> MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader netsuite_sales_order_id: String?

          def netsuite_sales_order_id=: (String) -> String

          attr_reader rate_type: MetronomeSDK::Models::V1::Customers::CommitCreateParams::rate_type?

          def rate_type=: (
            MetronomeSDK::Models::V1::Customers::CommitCreateParams::rate_type
          ) -> MetronomeSDK::Models::V1::Customers::CommitCreateParams::rate_type

          attr_reader salesforce_opportunity_id: String?

          def salesforce_opportunity_id=: (String) -> String

          attr_reader uniqueness_key: String?

          def uniqueness_key=: (String) -> String

          def initialize:
            (
              access_schedule: MetronomeSDK::Models::V1::Customers::CommitCreateParams::AccessSchedule,
              customer_id: String,
              priority: Float,
              product_id: String,
              type: MetronomeSDK::Models::V1::Customers::CommitCreateParams::type_,
              applicable_contract_ids: ::Array[String],
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              custom_fields: ::Hash[Symbol, String],
              description: String,
              invoice_contract_id: String,
              invoice_schedule: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule,
              name: String,
              netsuite_sales_order_id: String,
              rate_type: MetronomeSDK::Models::V1::Customers::CommitCreateParams::rate_type,
              salesforce_opportunity_id: String,
              uniqueness_key: String,
              request_options: MetronomeSDK::request_opts
            ) -> void
            | (
              ?MetronomeSDK::Models::V1::Customers::commit_create_params
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V1::Customers::commit_create_params

          type access_schedule =
            {
              schedule_items: ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::AccessSchedule::ScheduleItem],
              credit_type_id: String
            }

          class AccessSchedule < MetronomeSDK::BaseModel
            attr_accessor schedule_items: ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::AccessSchedule::ScheduleItem]

            attr_reader credit_type_id: String?

            def credit_type_id=: (String) -> String

            def initialize:
              (
                schedule_items: ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::AccessSchedule::ScheduleItem],
                credit_type_id: String
              ) -> void
              | (
                ?MetronomeSDK::Models::V1::Customers::CommitCreateParams::access_schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V1::Customers::CommitCreateParams::access_schedule

            type schedule_item =
              { amount: Float, ending_before: Time, starting_at: Time }

            class ScheduleItem < MetronomeSDK::BaseModel
              attr_accessor amount: Float

              attr_accessor ending_before: Time

              attr_accessor starting_at: Time

              def initialize:
                (amount: Float, ending_before: Time, starting_at: Time) -> void
                | (
                  ?MetronomeSDK::Models::V1::Customers::CommitCreateParams::AccessSchedule::schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V1::Customers::CommitCreateParams::AccessSchedule::schedule_item
            end
          end

          type type_ = :PREPAID | :POSTPAID

          class Type < MetronomeSDK::Enum
            PREPAID: :PREPAID
            POSTPAID: :POSTPAID

            def self.values: -> ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::type_]
          end

          type invoice_schedule =
            {
              credit_type_id: String,
              recurring_schedule: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule,
              schedule_items: ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::ScheduleItem]
            }

          class InvoiceSchedule < MetronomeSDK::BaseModel
            attr_reader credit_type_id: String?

            def credit_type_id=: (String) -> String

            attr_reader recurring_schedule: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule?

            def recurring_schedule=: (
              MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule
            ) -> MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule

            attr_reader schedule_items: ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::ScheduleItem]?

            def schedule_items=: (
              ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::ScheduleItem]
            ) -> ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::ScheduleItem]

            def initialize:
              (
                credit_type_id: String,
                recurring_schedule: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule,
                schedule_items: ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::ScheduleItem]
              ) -> void
              | (
                ?MetronomeSDK::Models::V1::Customers::CommitCreateParams::invoice_schedule
                | MetronomeSDK::BaseModel data
              ) -> void

            def to_hash: -> MetronomeSDK::Models::V1::Customers::CommitCreateParams::invoice_schedule

            type recurring_schedule =
              {
                amount_distribution: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule::amount_distribution,
                ending_before: Time,
                frequency: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule::frequency,
                starting_at: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class RecurringSchedule < MetronomeSDK::BaseModel
              attr_accessor amount_distribution: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule::amount_distribution

              attr_accessor ending_before: Time

              attr_accessor frequency: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule::frequency

              attr_accessor starting_at: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  amount_distribution: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule::amount_distribution,
                  ending_before: Time,
                  frequency: MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule::frequency,
                  starting_at: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::recurring_schedule
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::recurring_schedule

              type amount_distribution = :DIVIDED | :DIVIDED_ROUNDED | :EACH

              class AmountDistribution < MetronomeSDK::Enum
                DIVIDED: :DIVIDED
                DIVIDED_ROUNDED: :DIVIDED_ROUNDED
                EACH: :EACH

                def self.values: -> ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule::amount_distribution]
              end

              type frequency = :MONTHLY | :QUARTERLY | :SEMI_ANNUAL | :ANNUAL

              class Frequency < MetronomeSDK::Enum
                MONTHLY: :MONTHLY
                QUARTERLY: :QUARTERLY
                SEMI_ANNUAL: :SEMI_ANNUAL
                ANNUAL: :ANNUAL

                def self.values: -> ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::RecurringSchedule::frequency]
              end
            end

            type schedule_item =
              {
                timestamp: Time,
                amount: Float,
                quantity: Float,
                unit_price: Float
              }

            class ScheduleItem < MetronomeSDK::BaseModel
              attr_accessor timestamp: Time

              attr_reader amount: Float?

              def amount=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader unit_price: Float?

              def unit_price=: (Float) -> Float

              def initialize:
                (
                  timestamp: Time,
                  amount: Float,
                  quantity: Float,
                  unit_price: Float
                ) -> void
                | (
                  ?MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::schedule_item
                  | MetronomeSDK::BaseModel data
                ) -> void

              def to_hash: -> MetronomeSDK::Models::V1::Customers::CommitCreateParams::InvoiceSchedule::schedule_item
            end
          end

          type rate_type = :COMMIT_RATE | :LIST_RATE

          class RateType < MetronomeSDK::Enum
            COMMIT_RATE: :COMMIT_RATE
            LIST_RATE: :LIST_RATE

            def self.values: -> ::Array[MetronomeSDK::Models::V1::Customers::CommitCreateParams::rate_type]
          end
        end
      end
    end
  end
end
