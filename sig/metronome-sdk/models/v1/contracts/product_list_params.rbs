module MetronomeSDK
  module Models
    module V1
      module Contracts
        type product_list_params =
          {
            limit: Integer,
            next_page: String,
            archive_filter: MetronomeSDK::Models::V1::Contracts::ProductListParams::archive_filter
          }
          & MetronomeSDK::request_parameters

        class ProductListParams < MetronomeSDK::BaseModel
          extend MetronomeSDK::RequestParameters::Converter
          include MetronomeSDK::RequestParameters

          attr_reader limit: Integer?

          def limit=: (Integer) -> Integer

          attr_reader next_page: String?

          def next_page=: (String) -> String

          attr_reader archive_filter: MetronomeSDK::Models::V1::Contracts::ProductListParams::archive_filter?

          def archive_filter=: (
            MetronomeSDK::Models::V1::Contracts::ProductListParams::archive_filter
          ) -> MetronomeSDK::Models::V1::Contracts::ProductListParams::archive_filter

          def initialize:
            (
              limit: Integer,
              next_page: String,
              archive_filter: MetronomeSDK::Models::V1::Contracts::ProductListParams::archive_filter,
              request_options: MetronomeSDK::request_opts
            ) -> void
            | (
              ?MetronomeSDK::Models::V1::Contracts::product_list_params
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V1::Contracts::product_list_params

          type archive_filter = :ARCHIVED | :NOT_ARCHIVED | :ALL

          class ArchiveFilter < MetronomeSDK::Enum
            ARCHIVED: :ARCHIVED
            NOT_ARCHIVED: :NOT_ARCHIVED
            ALL: :ALL

            def self.values: -> ::Array[MetronomeSDK::Models::V1::Contracts::ProductListParams::archive_filter]
          end
        end
      end
    end
  end
end
