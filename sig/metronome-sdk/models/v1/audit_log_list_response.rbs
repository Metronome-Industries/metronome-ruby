module MetronomeSDK
  module Models
    module V1
      type audit_log_list_response =
        {
          id: String,
          request: MetronomeSDK::Models::V1::AuditLogListResponse::Request,
          timestamp: Time,
          action: String,
          actor: MetronomeSDK::Models::V1::AuditLogListResponse::Actor,
          description: String,
          resource_id: String,
          resource_type: String,
          status: MetronomeSDK::Models::V1::AuditLogListResponse::status
        }

      class AuditLogListResponse < MetronomeSDK::BaseModel
        attr_accessor id: String

        attr_accessor request: MetronomeSDK::Models::V1::AuditLogListResponse::Request

        attr_accessor timestamp: Time

        attr_reader action: String?

        def action=: (String) -> String

        attr_reader actor: MetronomeSDK::Models::V1::AuditLogListResponse::Actor?

        def actor=: (
          MetronomeSDK::Models::V1::AuditLogListResponse::Actor
        ) -> MetronomeSDK::Models::V1::AuditLogListResponse::Actor

        attr_reader description: String?

        def description=: (String) -> String

        attr_reader resource_id: String?

        def resource_id=: (String) -> String

        attr_reader resource_type: String?

        def resource_type=: (String) -> String

        attr_reader status: MetronomeSDK::Models::V1::AuditLogListResponse::status?

        def status=: (
          MetronomeSDK::Models::V1::AuditLogListResponse::status
        ) -> MetronomeSDK::Models::V1::AuditLogListResponse::status

        def initialize:
          (
            id: String,
            request: MetronomeSDK::Models::V1::AuditLogListResponse::Request,
            timestamp: Time,
            action: String,
            actor: MetronomeSDK::Models::V1::AuditLogListResponse::Actor,
            description: String,
            resource_id: String,
            resource_type: String,
            status: MetronomeSDK::Models::V1::AuditLogListResponse::status
          ) -> void
          | (
            ?MetronomeSDK::Models::V1::audit_log_list_response
            | MetronomeSDK::BaseModel data
          ) -> void

        def to_hash: -> MetronomeSDK::Models::V1::audit_log_list_response

        type request = { id: String, ip: String, user_agent: String }

        class Request < MetronomeSDK::BaseModel
          attr_accessor id: String

          attr_reader ip: String?

          def ip=: (String) -> String

          attr_reader user_agent: String?

          def user_agent=: (String) -> String

          def initialize:
            (id: String, ip: String, user_agent: String) -> void
            | (
              ?MetronomeSDK::Models::V1::AuditLogListResponse::request
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V1::AuditLogListResponse::request
        end

        type actor = { id: String, name: String, email: String }

        class Actor < MetronomeSDK::BaseModel
          attr_accessor id: String

          attr_accessor name: String

          attr_reader email: String?

          def email=: (String) -> String

          def initialize:
            (id: String, name: String, email: String) -> void
            | (
              ?MetronomeSDK::Models::V1::AuditLogListResponse::actor
              | MetronomeSDK::BaseModel data
            ) -> void

          def to_hash: -> MetronomeSDK::Models::V1::AuditLogListResponse::actor
        end

        type status = :success | :failure | :pending

        class Status < MetronomeSDK::Enum
          SUCCESS: :success
          FAILURE: :failure
          PENDING: :pending

          def self.values: -> ::Array[MetronomeSDK::Models::V1::AuditLogListResponse::status]
        end
      end
    end
  end
end
