module MetronomeSDK
  module Resources
    class V1
      class Contracts
        class Products
          def create:
            (
              MetronomeSDK::Models::V1::Contracts::ProductCreateParams
              | ::Hash[Symbol, top] params
            ) -> MetronomeSDK::Models::V1::Contracts::ProductCreateResponse
            | (
              name: String,
              type: MetronomeSDK::Models::V1::Contracts::ProductCreateParams::type_,
              billable_metric_id: String,
              composite_product_ids: ::Array[String],
              composite_tags: ::Array[String],
              exclude_free_usage: bool,
              is_refundable: bool,
              netsuite_internal_item_id: String,
              netsuite_overage_item_id: String,
              presentation_group_key: ::Array[String],
              pricing_group_key: ::Array[String],
              quantity_conversion: MetronomeSDK::Models::V1::Contracts::QuantityConversion?,
              quantity_rounding: MetronomeSDK::Models::V1::Contracts::QuantityRounding?,
              tags: ::Array[String],
              request_options: MetronomeSDK::request_opts
            ) -> MetronomeSDK::Models::V1::Contracts::ProductCreateResponse

          def retrieve:
            (
              MetronomeSDK::Models::V1::Contracts::ProductRetrieveParams
              | ::Hash[Symbol, top] params
            ) -> MetronomeSDK::Models::V1::Contracts::ProductRetrieveResponse
            | (
              id: String,
              request_options: MetronomeSDK::request_opts
            ) -> MetronomeSDK::Models::V1::Contracts::ProductRetrieveResponse

          def update:
            (
              MetronomeSDK::Models::V1::Contracts::ProductUpdateParams
              | ::Hash[Symbol, top] params
            ) -> MetronomeSDK::Models::V1::Contracts::ProductUpdateResponse
            | (
              product_id: String,
              starting_at: Time,
              billable_metric_id: String,
              composite_product_ids: ::Array[String],
              composite_tags: ::Array[String],
              exclude_free_usage: bool,
              is_refundable: bool,
              name: String,
              netsuite_internal_item_id: String,
              netsuite_overage_item_id: String,
              presentation_group_key: ::Array[String],
              pricing_group_key: ::Array[String],
              quantity_conversion: MetronomeSDK::Models::V1::Contracts::QuantityConversion?,
              quantity_rounding: MetronomeSDK::Models::V1::Contracts::QuantityRounding?,
              tags: ::Array[String],
              request_options: MetronomeSDK::request_opts
            ) -> MetronomeSDK::Models::V1::Contracts::ProductUpdateResponse

          def list:
            (
              ?MetronomeSDK::Models::V1::Contracts::ProductListParams
              | ::Hash[Symbol, top] params
            ) -> MetronomeSDK::CursorPage[MetronomeSDK::Models::V1::Contracts::ProductListResponse]
            | (
              limit: Integer,
              next_page: String,
              archive_filter: MetronomeSDK::Models::V1::Contracts::ProductListParams::archive_filter,
              request_options: MetronomeSDK::request_opts
            ) -> MetronomeSDK::CursorPage[MetronomeSDK::Models::V1::Contracts::ProductListResponse]

          def archive:
            (
              MetronomeSDK::Models::V1::Contracts::ProductArchiveParams
              | ::Hash[Symbol, top] params
            ) -> MetronomeSDK::Models::V1::Contracts::ProductArchiveResponse
            | (
              product_id: String,
              request_options: MetronomeSDK::request_opts
            ) -> MetronomeSDK::Models::V1::Contracts::ProductArchiveResponse

          def initialize: (client: MetronomeSDK::Client) -> void
        end
      end
    end
  end
end
