module MetronomeSDK
  module Models
    module V2
      type contract_retrieve_response =
        { data: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data }

      class ContractRetrieveResponse < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor data: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data

        def initialize: (
          data: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data
        ) -> void

        def to_hash: -> {
          data: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data
        }

        type data =
          {
            id: String,
            commits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit],
            created_at: Time,
            created_by: String,
            customer_id: String,
            overrides: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override],
            scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge],
            starting_at: Time,
            transitions: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Transition],
            usage_filter: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageFilter],
            usage_statement_schedule: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageStatementSchedule,
            archived_at: Time,
            credits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit],
            custom_fields: ::Hash[Symbol, String],
            customer_billing_provider_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration,
            discounts: ::Array[MetronomeSDK::Discount],
            ending_before: Time,
            has_more: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HasMore,
            hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::hierarchy_configuration,
            multiplier_override_prioritization: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::multiplier_override_prioritization,
            name: String,
            net_payment_terms_days: Float,
            netsuite_sales_order_id: String,
            prepaid_balance_threshold_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration,
            priority: Float,
            professional_services: ::Array[MetronomeSDK::ProService],
            rate_card_id: String,
            recurring_commits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit],
            recurring_credits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit],
            reseller_royalties: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty],
            salesforce_opportunity_id: String,
            scheduled_charges_on_usage_invoices: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices,
            spend_threshold_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration,
            subscriptions: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription],
            total_contract_value: Float,
            uniqueness_key: String
          }

        class Data < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor commits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit]

          attr_accessor created_at: Time

          attr_accessor created_by: String

          attr_accessor customer_id: String

          attr_accessor overrides: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override]

          attr_accessor scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge]

          attr_accessor starting_at: Time

          attr_accessor transitions: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Transition]

          attr_accessor usage_filter: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageFilter]

          attr_accessor usage_statement_schedule: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageStatementSchedule

          attr_reader archived_at: Time?

          def archived_at=: (Time) -> Time

          attr_reader credits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit]?

          def credits=: (
            ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit]
          ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit]

          attr_reader custom_fields: ::Hash[Symbol, String]?

          def custom_fields=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader customer_billing_provider_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration?

          def customer_billing_provider_configuration=: (
            MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration
          ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration

          attr_reader discounts: ::Array[MetronomeSDK::Discount]?

          def discounts=: (
            ::Array[MetronomeSDK::Discount]
          ) -> ::Array[MetronomeSDK::Discount]

          attr_reader ending_before: Time?

          def ending_before=: (Time) -> Time

          attr_reader has_more: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HasMore?

          def has_more=: (
            MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HasMore
          ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HasMore

          attr_reader hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::hierarchy_configuration?

          def hierarchy_configuration=: (
            MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::hierarchy_configuration
          ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::hierarchy_configuration

          attr_reader multiplier_override_prioritization: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::multiplier_override_prioritization?

          def multiplier_override_prioritization=: (
            MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::multiplier_override_prioritization
          ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::multiplier_override_prioritization

          attr_reader name: String?

          def name=: (String) -> String

          attr_reader net_payment_terms_days: Float?

          def net_payment_terms_days=: (Float) -> Float

          attr_reader netsuite_sales_order_id: String?

          def netsuite_sales_order_id=: (String) -> String

          attr_reader prepaid_balance_threshold_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration?

          def prepaid_balance_threshold_configuration=: (
            MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration
          ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration

          attr_reader priority: Float?

          def priority=: (Float) -> Float

          attr_reader professional_services: ::Array[MetronomeSDK::ProService]?

          def professional_services=: (
            ::Array[MetronomeSDK::ProService]
          ) -> ::Array[MetronomeSDK::ProService]

          attr_reader rate_card_id: String?

          def rate_card_id=: (String) -> String

          attr_reader recurring_commits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit]?

          def recurring_commits=: (
            ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit]
          ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit]

          attr_reader recurring_credits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit]?

          def recurring_credits=: (
            ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit]
          ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit]

          attr_reader reseller_royalties: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty]?

          def reseller_royalties=: (
            ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty]
          ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty]

          attr_reader salesforce_opportunity_id: String?

          def salesforce_opportunity_id=: (String) -> String

          attr_reader scheduled_charges_on_usage_invoices: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices?

          def scheduled_charges_on_usage_invoices=: (
            MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices
          ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices

          attr_reader spend_threshold_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration?

          def spend_threshold_configuration=: (
            MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration
          ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration

          attr_reader subscriptions: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription]?

          def subscriptions=: (
            ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription]
          ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription]

          attr_reader total_contract_value: Float?

          def total_contract_value=: (Float) -> Float

          attr_reader uniqueness_key: String?

          def uniqueness_key=: (String) -> String

          def initialize: (
            id: String,
            commits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit],
            created_at: Time,
            created_by: String,
            customer_id: String,
            overrides: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override],
            scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge],
            starting_at: Time,
            transitions: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Transition],
            usage_filter: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageFilter],
            usage_statement_schedule: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageStatementSchedule,
            ?archived_at: Time,
            ?credits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit],
            ?custom_fields: ::Hash[Symbol, String],
            ?customer_billing_provider_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration,
            ?discounts: ::Array[MetronomeSDK::Discount],
            ?ending_before: Time,
            ?has_more: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HasMore,
            ?hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::hierarchy_configuration,
            ?multiplier_override_prioritization: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::multiplier_override_prioritization,
            ?name: String,
            ?net_payment_terms_days: Float,
            ?netsuite_sales_order_id: String,
            ?prepaid_balance_threshold_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration,
            ?priority: Float,
            ?professional_services: ::Array[MetronomeSDK::ProService],
            ?rate_card_id: String,
            ?recurring_commits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit],
            ?recurring_credits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit],
            ?reseller_royalties: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty],
            ?salesforce_opportunity_id: String,
            ?scheduled_charges_on_usage_invoices: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices,
            ?spend_threshold_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration,
            ?subscriptions: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription],
            ?total_contract_value: Float,
            ?uniqueness_key: String
          ) -> void

          def to_hash: -> {
            id: String,
            commits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit],
            created_at: Time,
            created_by: String,
            customer_id: String,
            overrides: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override],
            scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge],
            starting_at: Time,
            transitions: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Transition],
            usage_filter: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageFilter],
            usage_statement_schedule: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageStatementSchedule,
            archived_at: Time,
            credits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit],
            custom_fields: ::Hash[Symbol, String],
            customer_billing_provider_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration,
            discounts: ::Array[MetronomeSDK::Discount],
            ending_before: Time,
            has_more: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HasMore,
            hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::hierarchy_configuration,
            multiplier_override_prioritization: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::multiplier_override_prioritization,
            name: String,
            net_payment_terms_days: Float,
            netsuite_sales_order_id: String,
            prepaid_balance_threshold_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration,
            priority: Float,
            professional_services: ::Array[MetronomeSDK::ProService],
            rate_card_id: String,
            recurring_commits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit],
            recurring_credits: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit],
            reseller_royalties: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty],
            salesforce_opportunity_id: String,
            scheduled_charges_on_usage_invoices: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices,
            spend_threshold_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration,
            subscriptions: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription],
            total_contract_value: Float,
            uniqueness_key: String
          }

          type commit =
            {
              id: String,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Product,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::type_,
              access_schedule: MetronomeSDK::ScheduleDuration,
              applicable_contract_ids: ::Array[String],
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              archived_at: Time,
              balance: Float,
              contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Contract,
              custom_fields: ::Hash[Symbol, String],
              description: String,
              hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration,
              invoice_contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::InvoiceContract,
              invoice_schedule: MetronomeSDK::SchedulePointInTime,
              ledger: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::ledger],
              name: String,
              netsuite_sales_order_id: String,
              priority: Float,
              rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::rate_type,
              rolled_over_from: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::RolledOverFrom,
              rollover_fraction: Float,
              salesforce_opportunity_id: String,
              specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Specifier]
            }

          class Commit < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor id: String

            attr_accessor product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Product

            attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::type_

            attr_reader access_schedule: MetronomeSDK::ScheduleDuration?

            def access_schedule=: (
              MetronomeSDK::ScheduleDuration
            ) -> MetronomeSDK::ScheduleDuration

            attr_reader applicable_contract_ids: ::Array[String]?

            def applicable_contract_ids=: (::Array[String]) -> ::Array[String]

            attr_reader applicable_product_ids: ::Array[String]?

            def applicable_product_ids=: (::Array[String]) -> ::Array[String]

            attr_reader applicable_product_tags: ::Array[String]?

            def applicable_product_tags=: (::Array[String]) -> ::Array[String]

            attr_reader archived_at: Time?

            def archived_at=: (Time) -> Time

            attr_reader balance: Float?

            def balance=: (Float) -> Float

            attr_reader contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Contract?

            def contract=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Contract
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Contract

            attr_reader custom_fields: ::Hash[Symbol, String]?

            def custom_fields=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader description: String?

            def description=: (String) -> String

            attr_reader hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration?

            def hierarchy_configuration=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration

            attr_reader invoice_contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::InvoiceContract?

            def invoice_contract=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::InvoiceContract
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::InvoiceContract

            attr_reader invoice_schedule: MetronomeSDK::SchedulePointInTime?

            def invoice_schedule=: (
              MetronomeSDK::SchedulePointInTime
            ) -> MetronomeSDK::SchedulePointInTime

            attr_reader ledger: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::ledger]?

            def ledger=: (
              ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::ledger]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::ledger]

            attr_reader name: String?

            def name=: (String) -> String

            attr_reader netsuite_sales_order_id: String?

            def netsuite_sales_order_id=: (String) -> String

            attr_reader priority: Float?

            def priority=: (Float) -> Float

            attr_reader rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::rate_type?

            def rate_type=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::rate_type
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::rate_type

            attr_reader rolled_over_from: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::RolledOverFrom?

            def rolled_over_from=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::RolledOverFrom
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::RolledOverFrom

            attr_reader rollover_fraction: Float?

            def rollover_fraction=: (Float) -> Float

            attr_reader salesforce_opportunity_id: String?

            def salesforce_opportunity_id=: (String) -> String

            attr_reader specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Specifier]?

            def specifiers=: (
              ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Specifier]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Specifier]

            def initialize: (
              id: String,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Product,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::type_,
              ?access_schedule: MetronomeSDK::ScheduleDuration,
              ?applicable_contract_ids: ::Array[String],
              ?applicable_product_ids: ::Array[String],
              ?applicable_product_tags: ::Array[String],
              ?archived_at: Time,
              ?balance: Float,
              ?contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Contract,
              ?custom_fields: ::Hash[Symbol, String],
              ?description: String,
              ?hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration,
              ?invoice_contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::InvoiceContract,
              ?invoice_schedule: MetronomeSDK::SchedulePointInTime,
              ?ledger: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::ledger],
              ?name: String,
              ?netsuite_sales_order_id: String,
              ?priority: Float,
              ?rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::rate_type,
              ?rolled_over_from: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::RolledOverFrom,
              ?rollover_fraction: Float,
              ?salesforce_opportunity_id: String,
              ?specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Specifier]
            ) -> void

            def to_hash: -> {
              id: String,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Product,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::type_,
              access_schedule: MetronomeSDK::ScheduleDuration,
              applicable_contract_ids: ::Array[String],
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              archived_at: Time,
              balance: Float,
              contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Contract,
              custom_fields: ::Hash[Symbol, String],
              description: String,
              hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration,
              invoice_contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::InvoiceContract,
              invoice_schedule: MetronomeSDK::SchedulePointInTime,
              ledger: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::ledger],
              name: String,
              netsuite_sales_order_id: String,
              priority: Float,
              rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::rate_type,
              rolled_over_from: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::RolledOverFrom,
              rollover_fraction: Float,
              salesforce_opportunity_id: String,
              specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Specifier]
            }

            type product = { id: String, name: String }

            class Product < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              attr_accessor name: String

              def initialize: (id: String, name: String) -> void

              def to_hash: -> { id: String, name: String }
            end

            type type_ = :PREPAID | :POSTPAID

            module Type
              extend MetronomeSDK::Internal::Type::Enum

              PREPAID: :PREPAID
              POSTPAID: :POSTPAID

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::type_]
            end

            type contract = { id: String }

            class Contract < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              def initialize: (id: String) -> void

              def to_hash: -> { id: String }
            end

            type hierarchy_configuration =
              {
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::child_access
              }

            class HierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::child_access

              def initialize: (
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::child_access
              ) -> void

              def to_hash: -> {
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::child_access
              }

              type child_access =
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll
                | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone
                | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs

              module ChildAccess
                extend MetronomeSDK::Internal::Type::Union

                type commit_hierarchy_child_access_all =
                  {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  }

                class CommitHierarchyChildAccessAll < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_

                  def initialize: (
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  ) -> void

                  def to_hash: -> {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  }

                  type type_ = :ALL

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    ALL: :ALL

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_]
                  end
                end

                type commit_hierarchy_child_access_none =
                  {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  }

                class CommitHierarchyChildAccessNone < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_

                  def initialize: (
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  ) -> void

                  def to_hash: -> {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  }

                  type type_ = :NONE

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    NONE: :NONE

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_]
                  end
                end

                type commit_hierarchy_child_access_contract_ids =
                  {
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  }

                class CommitHierarchyChildAccessContractIDs < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor contract_ids: ::Array[String]

                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_

                  def initialize: (
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  ) -> void

                  def to_hash: -> {
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  }

                  type type_ = :CONTRACT_IDS

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    CONTRACT_IDS: :CONTRACT_IDS

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_]
                  end
                end

                def self?.variants: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::HierarchyConfiguration::child_access]
              end
            end

            type invoice_contract = { id: String }

            class InvoiceContract < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              def initialize: (id: String) -> void

              def to_hash: -> { id: String }
            end

            type ledger =
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSegmentStartLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitAutomatedInvoiceDeductionLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitRolloverLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitExpirationLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCanceledLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCreditedLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSeatBasedAdjustmentLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitInitialBalanceLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitAutomatedInvoiceDeductionLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitRolloverLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitTrueupLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitManualLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitManualLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitExpirationLedgerEntry

            module Ledger
              extend MetronomeSDK::Internal::Type::Union

              type prepaid_commit_segment_start_ledger_entry =
                {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSegmentStartLedgerEntry::type_
                }

              class PrepaidCommitSegmentStartLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSegmentStartLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSegmentStartLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSegmentStartLedgerEntry::type_
                }

                type type_ = :PREPAID_COMMIT_SEGMENT_START

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  PREPAID_COMMIT_SEGMENT_START: :PREPAID_COMMIT_SEGMENT_START

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSegmentStartLedgerEntry::type_]
                end
              end

              type prepaid_commit_automated_invoice_deduction_ledger_entry =
                {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitAutomatedInvoiceDeductionLedgerEntry::type_
                }

              class PrepaidCommitAutomatedInvoiceDeductionLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor invoice_id: String

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitAutomatedInvoiceDeductionLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitAutomatedInvoiceDeductionLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitAutomatedInvoiceDeductionLedgerEntry::type_
                }

                type type_ = :PREPAID_COMMIT_AUTOMATED_INVOICE_DEDUCTION

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  PREPAID_COMMIT_AUTOMATED_INVOICE_DEDUCTION: :PREPAID_COMMIT_AUTOMATED_INVOICE_DEDUCTION

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitAutomatedInvoiceDeductionLedgerEntry::type_]
                end
              end

              type prepaid_commit_rollover_ledger_entry =
                {
                  amount: Float,
                  new_contract_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitRolloverLedgerEntry::type_
                }

              class PrepaidCommitRolloverLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor new_contract_id: String

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitRolloverLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  new_contract_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitRolloverLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  new_contract_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitRolloverLedgerEntry::type_
                }

                type type_ = :PREPAID_COMMIT_ROLLOVER

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  PREPAID_COMMIT_ROLLOVER: :PREPAID_COMMIT_ROLLOVER

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitRolloverLedgerEntry::type_]
                end
              end

              type prepaid_commit_expiration_ledger_entry =
                {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitExpirationLedgerEntry::type_
                }

              class PrepaidCommitExpirationLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitExpirationLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitExpirationLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitExpirationLedgerEntry::type_
                }

                type type_ = :PREPAID_COMMIT_EXPIRATION

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  PREPAID_COMMIT_EXPIRATION: :PREPAID_COMMIT_EXPIRATION

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitExpirationLedgerEntry::type_]
                end
              end

              type prepaid_commit_canceled_ledger_entry =
                {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCanceledLedgerEntry::type_
                }

              class PrepaidCommitCanceledLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor invoice_id: String

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCanceledLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCanceledLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCanceledLedgerEntry::type_
                }

                type type_ = :PREPAID_COMMIT_CANCELED

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  PREPAID_COMMIT_CANCELED: :PREPAID_COMMIT_CANCELED

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCanceledLedgerEntry::type_]
                end
              end

              type prepaid_commit_credited_ledger_entry =
                {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCreditedLedgerEntry::type_
                }

              class PrepaidCommitCreditedLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor invoice_id: String

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCreditedLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCreditedLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCreditedLedgerEntry::type_
                }

                type type_ = :PREPAID_COMMIT_CREDITED

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  PREPAID_COMMIT_CREDITED: :PREPAID_COMMIT_CREDITED

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitCreditedLedgerEntry::type_]
                end
              end

              type prepaid_commit_seat_based_adjustment_ledger_entry =
                {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSeatBasedAdjustmentLedgerEntry::type_
                }

              class PrepaidCommitSeatBasedAdjustmentLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSeatBasedAdjustmentLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSeatBasedAdjustmentLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSeatBasedAdjustmentLedgerEntry::type_
                }

                type type_ = :PREPAID_COMMIT_SEAT_BASED_ADJUSTMENT

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  PREPAID_COMMIT_SEAT_BASED_ADJUSTMENT: :PREPAID_COMMIT_SEAT_BASED_ADJUSTMENT

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitSeatBasedAdjustmentLedgerEntry::type_]
                end
              end

              type postpaid_commit_initial_balance_ledger_entry =
                {
                  amount: Float,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitInitialBalanceLedgerEntry::type_
                }

              class PostpaidCommitInitialBalanceLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitInitialBalanceLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitInitialBalanceLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitInitialBalanceLedgerEntry::type_
                }

                type type_ = :POSTPAID_COMMIT_INITIAL_BALANCE

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  POSTPAID_COMMIT_INITIAL_BALANCE: :POSTPAID_COMMIT_INITIAL_BALANCE

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitInitialBalanceLedgerEntry::type_]
                end
              end

              type postpaid_commit_automated_invoice_deduction_ledger_entry =
                {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitAutomatedInvoiceDeductionLedgerEntry::type_
                }

              class PostpaidCommitAutomatedInvoiceDeductionLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor invoice_id: String

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitAutomatedInvoiceDeductionLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitAutomatedInvoiceDeductionLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitAutomatedInvoiceDeductionLedgerEntry::type_
                }

                type type_ = :POSTPAID_COMMIT_AUTOMATED_INVOICE_DEDUCTION

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  POSTPAID_COMMIT_AUTOMATED_INVOICE_DEDUCTION: :POSTPAID_COMMIT_AUTOMATED_INVOICE_DEDUCTION

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitAutomatedInvoiceDeductionLedgerEntry::type_]
                end
              end

              type postpaid_commit_rollover_ledger_entry =
                {
                  amount: Float,
                  new_contract_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitRolloverLedgerEntry::type_
                }

              class PostpaidCommitRolloverLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor new_contract_id: String

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitRolloverLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  new_contract_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitRolloverLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  new_contract_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitRolloverLedgerEntry::type_
                }

                type type_ = :POSTPAID_COMMIT_ROLLOVER

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  POSTPAID_COMMIT_ROLLOVER: :POSTPAID_COMMIT_ROLLOVER

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitRolloverLedgerEntry::type_]
                end
              end

              type postpaid_commit_trueup_ledger_entry =
                {
                  amount: Float,
                  invoice_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitTrueupLedgerEntry::type_
                }

              class PostpaidCommitTrueupLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor invoice_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitTrueupLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  invoice_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitTrueupLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  invoice_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitTrueupLedgerEntry::type_
                }

                type type_ = :POSTPAID_COMMIT_TRUEUP

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  POSTPAID_COMMIT_TRUEUP: :POSTPAID_COMMIT_TRUEUP

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitTrueupLedgerEntry::type_]
                end
              end

              type prepaid_commit_manual_ledger_entry =
                {
                  amount: Float,
                  reason: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitManualLedgerEntry::type_
                }

              class PrepaidCommitManualLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor reason: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitManualLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  reason: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitManualLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  reason: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitManualLedgerEntry::type_
                }

                type type_ = :PREPAID_COMMIT_MANUAL

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  PREPAID_COMMIT_MANUAL: :PREPAID_COMMIT_MANUAL

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PrepaidCommitManualLedgerEntry::type_]
                end
              end

              type postpaid_commit_manual_ledger_entry =
                {
                  amount: Float,
                  reason: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitManualLedgerEntry::type_
                }

              class PostpaidCommitManualLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor reason: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitManualLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  reason: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitManualLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  reason: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitManualLedgerEntry::type_
                }

                type type_ = :POSTPAID_COMMIT_MANUAL

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  POSTPAID_COMMIT_MANUAL: :POSTPAID_COMMIT_MANUAL

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitManualLedgerEntry::type_]
                end
              end

              type postpaid_commit_expiration_ledger_entry =
                {
                  amount: Float,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitExpirationLedgerEntry::type_
                }

              class PostpaidCommitExpirationLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitExpirationLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitExpirationLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitExpirationLedgerEntry::type_
                }

                type type_ = :POSTPAID_COMMIT_EXPIRATION

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  POSTPAID_COMMIT_EXPIRATION: :POSTPAID_COMMIT_EXPIRATION

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::Ledger::PostpaidCommitExpirationLedgerEntry::type_]
                end
              end

              def self?.variants: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::ledger]
            end

            type rate_type = :COMMIT_RATE | :LIST_RATE

            module RateType
              extend MetronomeSDK::Internal::Type::Enum

              COMMIT_RATE: :COMMIT_RATE
              LIST_RATE: :LIST_RATE

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Commit::rate_type]
            end

            type rolled_over_from = { commit_id: String, contract_id: String }

            class RolledOverFrom < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor commit_id: String

              attr_accessor contract_id: String

              def initialize: (commit_id: String, contract_id: String) -> void

              def to_hash: -> { commit_id: String, contract_id: String }
            end

            type specifier =
              {
                presentation_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String]
              }

            class Specifier < MetronomeSDK::Internal::Type::BaseModel
              attr_reader presentation_group_values: ::Hash[Symbol, String]?

              def presentation_group_values=: (
                ::Hash[Symbol, String]
              ) -> ::Hash[Symbol, String]

              attr_reader pricing_group_values: ::Hash[Symbol, String]?

              def pricing_group_values=: (
                ::Hash[Symbol, String]
              ) -> ::Hash[Symbol, String]

              attr_reader product_id: String?

              def product_id=: (String) -> String

              attr_reader product_tags: ::Array[String]?

              def product_tags=: (::Array[String]) -> ::Array[String]

              def initialize: (
                ?presentation_group_values: ::Hash[Symbol, String],
                ?pricing_group_values: ::Hash[Symbol, String],
                ?product_id: String,
                ?product_tags: ::Array[String]
              ) -> void

              def to_hash: -> {
                presentation_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String]
              }
            end
          end

          type override =
            {
              id: String,
              starting_at: Time,
              applicable_product_tags: ::Array[String],
              ending_before: Time,
              entitled: bool,
              is_commit_specific: bool,
              multiplier: Float,
              override_specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier],
              override_tiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideTier],
              overwrite_rate: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate,
              priority: Float,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::Product,
              target: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::target,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::type_
            }

          class Override < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor id: String

            attr_accessor starting_at: Time

            attr_reader applicable_product_tags: ::Array[String]?

            def applicable_product_tags=: (::Array[String]) -> ::Array[String]

            attr_reader ending_before: Time?

            def ending_before=: (Time) -> Time

            attr_reader entitled: bool?

            def entitled=: (bool) -> bool

            attr_reader is_commit_specific: bool?

            def is_commit_specific=: (bool) -> bool

            attr_reader multiplier: Float?

            def multiplier=: (Float) -> Float

            attr_reader override_specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier]?

            def override_specifiers=: (
              ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier]

            attr_reader override_tiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideTier]?

            def override_tiers=: (
              ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideTier]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideTier]

            attr_reader overwrite_rate: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate?

            def overwrite_rate=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate

            attr_reader priority: Float?

            def priority=: (Float) -> Float

            attr_reader product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::Product?

            def product=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::Product
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::Product

            attr_reader target: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::target?

            def target=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::target
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::target

            attr_reader type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::type_?

            def type=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::type_
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::type_

            def initialize: (
              id: String,
              starting_at: Time,
              ?applicable_product_tags: ::Array[String],
              ?ending_before: Time,
              ?entitled: bool,
              ?is_commit_specific: bool,
              ?multiplier: Float,
              ?override_specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier],
              ?override_tiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideTier],
              ?overwrite_rate: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate,
              ?priority: Float,
              ?product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::Product,
              ?target: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::target,
              ?type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::type_
            ) -> void

            def to_hash: -> {
              id: String,
              starting_at: Time,
              applicable_product_tags: ::Array[String],
              ending_before: Time,
              entitled: bool,
              is_commit_specific: bool,
              multiplier: Float,
              override_specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier],
              override_tiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideTier],
              overwrite_rate: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate,
              priority: Float,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::Product,
              target: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::target,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::type_
            }

            type override_specifier =
              {
                billing_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier::billing_frequency,
                commit_ids: ::Array[String],
                presentation_group_values: ::Hash[Symbol, String?],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String],
                recurring_commit_ids: ::Array[String],
                recurring_credit_ids: ::Array[String]
              }

            class OverrideSpecifier < MetronomeSDK::Internal::Type::BaseModel
              attr_reader billing_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier::billing_frequency?

              def billing_frequency=: (
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier::billing_frequency
              ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier::billing_frequency

              attr_reader commit_ids: ::Array[String]?

              def commit_ids=: (::Array[String]) -> ::Array[String]

              attr_reader presentation_group_values: ::Hash[Symbol, String?]?

              def presentation_group_values=: (
                ::Hash[Symbol, String?]
              ) -> ::Hash[Symbol, String?]

              attr_reader pricing_group_values: ::Hash[Symbol, String]?

              def pricing_group_values=: (
                ::Hash[Symbol, String]
              ) -> ::Hash[Symbol, String]

              attr_reader product_id: String?

              def product_id=: (String) -> String

              attr_reader product_tags: ::Array[String]?

              def product_tags=: (::Array[String]) -> ::Array[String]

              attr_reader recurring_commit_ids: ::Array[String]?

              def recurring_commit_ids=: (::Array[String]) -> ::Array[String]

              attr_reader recurring_credit_ids: ::Array[String]?

              def recurring_credit_ids=: (::Array[String]) -> ::Array[String]

              def initialize: (
                ?billing_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier::billing_frequency,
                ?commit_ids: ::Array[String],
                ?presentation_group_values: ::Hash[Symbol, String?],
                ?pricing_group_values: ::Hash[Symbol, String],
                ?product_id: String,
                ?product_tags: ::Array[String],
                ?recurring_commit_ids: ::Array[String],
                ?recurring_credit_ids: ::Array[String]
              ) -> void

              def to_hash: -> {
                billing_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier::billing_frequency,
                commit_ids: ::Array[String],
                presentation_group_values: ::Hash[Symbol, String?],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String],
                recurring_commit_ids: ::Array[String],
                recurring_credit_ids: ::Array[String]
              }

              type billing_frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

              module BillingFrequency
                extend MetronomeSDK::Internal::Type::Enum

                MONTHLY: :MONTHLY
                QUARTERLY: :QUARTERLY
                ANNUAL: :ANNUAL
                WEEKLY: :WEEKLY

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverrideSpecifier::billing_frequency]
              end
            end

            type override_tier = { multiplier: Float, size: Float }

            class OverrideTier < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor multiplier: Float

              attr_reader size: Float?

              def size=: (Float) -> Float

              def initialize: (multiplier: Float, ?size: Float) -> void

              def to_hash: -> { multiplier: Float, size: Float }
            end

            type overwrite_rate =
              {
                rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate::rate_type,
                credit_type: MetronomeSDK::CreditTypeData,
                custom_rate: ::Hash[Symbol, top],
                is_prorated: bool,
                price: Float,
                quantity: Float,
                tiers: ::Array[MetronomeSDK::Tier]
              }

            class OverwriteRate < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate::rate_type

              attr_reader credit_type: MetronomeSDK::CreditTypeData?

              def credit_type=: (
                MetronomeSDK::CreditTypeData
              ) -> MetronomeSDK::CreditTypeData

              attr_reader custom_rate: ::Hash[Symbol, top]?

              def custom_rate=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

              attr_reader is_prorated: bool?

              def is_prorated=: (bool) -> bool

              attr_reader price: Float?

              def price=: (Float) -> Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              attr_reader tiers: ::Array[MetronomeSDK::Tier]?

              def tiers=: (
                ::Array[MetronomeSDK::Tier]
              ) -> ::Array[MetronomeSDK::Tier]

              def initialize: (
                rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate::rate_type,
                ?credit_type: MetronomeSDK::CreditTypeData,
                ?custom_rate: ::Hash[Symbol, top],
                ?is_prorated: bool,
                ?price: Float,
                ?quantity: Float,
                ?tiers: ::Array[MetronomeSDK::Tier]
              ) -> void

              def to_hash: -> {
                rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate::rate_type,
                credit_type: MetronomeSDK::CreditTypeData,
                custom_rate: ::Hash[Symbol, top],
                is_prorated: bool,
                price: Float,
                quantity: Float,
                tiers: ::Array[MetronomeSDK::Tier]
              }

              type rate_type =
                :FLAT | :PERCENTAGE | :SUBSCRIPTION | :TIERED | :CUSTOM

              module RateType
                extend MetronomeSDK::Internal::Type::Enum

                FLAT: :FLAT
                PERCENTAGE: :PERCENTAGE
                SUBSCRIPTION: :SUBSCRIPTION
                TIERED: :TIERED
                CUSTOM: :CUSTOM

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::OverwriteRate::rate_type]
              end
            end

            type product = { id: String, name: String }

            class Product < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              attr_accessor name: String

              def initialize: (id: String, name: String) -> void

              def to_hash: -> { id: String, name: String }
            end

            type target = :COMMIT_RATE | :LIST_RATE

            module Target
              extend MetronomeSDK::Internal::Type::Enum

              COMMIT_RATE: :COMMIT_RATE
              LIST_RATE: :LIST_RATE

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::target]
            end

            type type_ = :OVERWRITE | :MULTIPLIER | :TIERED

            module Type
              extend MetronomeSDK::Internal::Type::Enum

              OVERWRITE: :OVERWRITE
              MULTIPLIER: :MULTIPLIER
              TIERED: :TIERED

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Override::type_]
            end
          end

          type transition =
            {
              from_contract_id: String,
              to_contract_id: String,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Transition::type_
            }

          class Transition < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor from_contract_id: String

            attr_accessor to_contract_id: String

            attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Transition::type_

            def initialize: (
              from_contract_id: String,
              to_contract_id: String,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Transition::type_
            ) -> void

            def to_hash: -> {
              from_contract_id: String,
              to_contract_id: String,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Transition::type_
            }

            type type_ = :SUPERSEDE | :RENEWAL

            module Type
              extend MetronomeSDK::Internal::Type::Enum

              SUPERSEDE: :SUPERSEDE
              RENEWAL: :RENEWAL

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Transition::type_]
            end
          end

          type usage_filter =
            {
              group_key: String,
              group_values: ::Array[String],
              starting_at: Time,
              ending_before: Time
            }

          class UsageFilter < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor group_key: String

            attr_accessor group_values: ::Array[String]

            attr_accessor starting_at: Time

            attr_reader ending_before: Time?

            def ending_before=: (Time) -> Time

            def initialize: (
              group_key: String,
              group_values: ::Array[String],
              starting_at: Time,
              ?ending_before: Time
            ) -> void

            def to_hash: -> {
              group_key: String,
              group_values: ::Array[String],
              starting_at: Time,
              ending_before: Time
            }
          end

          type usage_statement_schedule =
            {
              billing_anchor_date: Time,
              frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageStatementSchedule::frequency
            }

          class UsageStatementSchedule < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor billing_anchor_date: Time

            attr_accessor frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageStatementSchedule::frequency

            def initialize: (
              billing_anchor_date: Time,
              frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageStatementSchedule::frequency
            ) -> void

            def to_hash: -> {
              billing_anchor_date: Time,
              frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageStatementSchedule::frequency
            }

            type frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

            module Frequency
              extend MetronomeSDK::Internal::Type::Enum

              MONTHLY: :MONTHLY
              QUARTERLY: :QUARTERLY
              ANNUAL: :ANNUAL
              WEEKLY: :WEEKLY

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::UsageStatementSchedule::frequency]
            end
          end

          type credit =
            {
              id: String,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Product,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::type_,
              access_schedule: MetronomeSDK::ScheduleDuration,
              applicable_contract_ids: ::Array[String],
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              balance: Float,
              contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Contract,
              custom_fields: ::Hash[Symbol, String],
              description: String,
              hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration,
              ledger: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::ledger],
              name: String,
              netsuite_sales_order_id: String,
              priority: Float,
              salesforce_opportunity_id: String,
              specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Specifier]
            }

          class Credit < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor id: String

            attr_accessor product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Product

            attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::type_

            attr_reader access_schedule: MetronomeSDK::ScheduleDuration?

            def access_schedule=: (
              MetronomeSDK::ScheduleDuration
            ) -> MetronomeSDK::ScheduleDuration

            attr_reader applicable_contract_ids: ::Array[String]?

            def applicable_contract_ids=: (::Array[String]) -> ::Array[String]

            attr_reader applicable_product_ids: ::Array[String]?

            def applicable_product_ids=: (::Array[String]) -> ::Array[String]

            attr_reader applicable_product_tags: ::Array[String]?

            def applicable_product_tags=: (::Array[String]) -> ::Array[String]

            attr_reader balance: Float?

            def balance=: (Float) -> Float

            attr_reader contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Contract?

            def contract=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Contract
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Contract

            attr_reader custom_fields: ::Hash[Symbol, String]?

            def custom_fields=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader description: String?

            def description=: (String) -> String

            attr_reader hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration?

            def hierarchy_configuration=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration

            attr_reader ledger: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::ledger]?

            def ledger=: (
              ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::ledger]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::ledger]

            attr_reader name: String?

            def name=: (String) -> String

            attr_reader netsuite_sales_order_id: String?

            def netsuite_sales_order_id=: (String) -> String

            attr_reader priority: Float?

            def priority=: (Float) -> Float

            attr_reader salesforce_opportunity_id: String?

            def salesforce_opportunity_id=: (String) -> String

            attr_reader specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Specifier]?

            def specifiers=: (
              ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Specifier]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Specifier]

            def initialize: (
              id: String,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Product,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::type_,
              ?access_schedule: MetronomeSDK::ScheduleDuration,
              ?applicable_contract_ids: ::Array[String],
              ?applicable_product_ids: ::Array[String],
              ?applicable_product_tags: ::Array[String],
              ?balance: Float,
              ?contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Contract,
              ?custom_fields: ::Hash[Symbol, String],
              ?description: String,
              ?hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration,
              ?ledger: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::ledger],
              ?name: String,
              ?netsuite_sales_order_id: String,
              ?priority: Float,
              ?salesforce_opportunity_id: String,
              ?specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Specifier]
            ) -> void

            def to_hash: -> {
              id: String,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Product,
              type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::type_,
              access_schedule: MetronomeSDK::ScheduleDuration,
              applicable_contract_ids: ::Array[String],
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              balance: Float,
              contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Contract,
              custom_fields: ::Hash[Symbol, String],
              description: String,
              hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration,
              ledger: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::ledger],
              name: String,
              netsuite_sales_order_id: String,
              priority: Float,
              salesforce_opportunity_id: String,
              specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Specifier]
            }

            type product = { id: String, name: String }

            class Product < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              attr_accessor name: String

              def initialize: (id: String, name: String) -> void

              def to_hash: -> { id: String, name: String }
            end

            type type_ = :CREDIT

            module Type
              extend MetronomeSDK::Internal::Type::Enum

              CREDIT: :CREDIT

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::type_]
            end

            type contract = { id: String }

            class Contract < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              def initialize: (id: String) -> void

              def to_hash: -> { id: String }
            end

            type hierarchy_configuration =
              {
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::child_access
              }

            class HierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::child_access

              def initialize: (
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::child_access
              ) -> void

              def to_hash: -> {
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::child_access
              }

              type child_access =
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll
                | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone
                | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs

              module ChildAccess
                extend MetronomeSDK::Internal::Type::Union

                type commit_hierarchy_child_access_all =
                  {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  }

                class CommitHierarchyChildAccessAll < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_

                  def initialize: (
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  ) -> void

                  def to_hash: -> {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  }

                  type type_ = :ALL

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    ALL: :ALL

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_]
                  end
                end

                type commit_hierarchy_child_access_none =
                  {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  }

                class CommitHierarchyChildAccessNone < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_

                  def initialize: (
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  ) -> void

                  def to_hash: -> {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  }

                  type type_ = :NONE

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    NONE: :NONE

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_]
                  end
                end

                type commit_hierarchy_child_access_contract_ids =
                  {
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  }

                class CommitHierarchyChildAccessContractIDs < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor contract_ids: ::Array[String]

                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_

                  def initialize: (
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  ) -> void

                  def to_hash: -> {
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  }

                  type type_ = :CONTRACT_IDS

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    CONTRACT_IDS: :CONTRACT_IDS

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_]
                  end
                end

                def self?.variants: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::HierarchyConfiguration::child_access]
              end
            end

            type ledger =
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSegmentStartLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditAutomatedInvoiceDeductionLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditExpirationLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCanceledLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCreditedLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditManualLedgerEntry
              | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSeatBasedAdjustmentLedgerEntry

            module Ledger
              extend MetronomeSDK::Internal::Type::Union

              type credit_segment_start_ledger_entry =
                {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSegmentStartLedgerEntry::type_
                }

              class CreditSegmentStartLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSegmentStartLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSegmentStartLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSegmentStartLedgerEntry::type_
                }

                type type_ = :CREDIT_SEGMENT_START

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  CREDIT_SEGMENT_START: :CREDIT_SEGMENT_START

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSegmentStartLedgerEntry::type_]
                end
              end

              type credit_automated_invoice_deduction_ledger_entry =
                {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditAutomatedInvoiceDeductionLedgerEntry::type_
                }

              class CreditAutomatedInvoiceDeductionLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor invoice_id: String

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditAutomatedInvoiceDeductionLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditAutomatedInvoiceDeductionLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditAutomatedInvoiceDeductionLedgerEntry::type_
                }

                type type_ = :CREDIT_AUTOMATED_INVOICE_DEDUCTION

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  CREDIT_AUTOMATED_INVOICE_DEDUCTION: :CREDIT_AUTOMATED_INVOICE_DEDUCTION

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditAutomatedInvoiceDeductionLedgerEntry::type_]
                end
              end

              type credit_expiration_ledger_entry =
                {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditExpirationLedgerEntry::type_
                }

              class CreditExpirationLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditExpirationLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditExpirationLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditExpirationLedgerEntry::type_
                }

                type type_ = :CREDIT_EXPIRATION

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  CREDIT_EXPIRATION: :CREDIT_EXPIRATION

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditExpirationLedgerEntry::type_]
                end
              end

              type credit_canceled_ledger_entry =
                {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCanceledLedgerEntry::type_
                }

              class CreditCanceledLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor invoice_id: String

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCanceledLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCanceledLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCanceledLedgerEntry::type_
                }

                type type_ = :CREDIT_CANCELED

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  CREDIT_CANCELED: :CREDIT_CANCELED

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCanceledLedgerEntry::type_]
                end
              end

              type credit_credited_ledger_entry =
                {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCreditedLedgerEntry::type_
                }

              class CreditCreditedLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor invoice_id: String

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCreditedLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCreditedLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  invoice_id: String,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCreditedLedgerEntry::type_
                }

                type type_ = :CREDIT_CREDITED

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  CREDIT_CREDITED: :CREDIT_CREDITED

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditCreditedLedgerEntry::type_]
                end
              end

              type credit_manual_ledger_entry =
                {
                  amount: Float,
                  reason: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditManualLedgerEntry::type_
                }

              class CreditManualLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor reason: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditManualLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  reason: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditManualLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  reason: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditManualLedgerEntry::type_
                }

                type type_ = :CREDIT_MANUAL

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  CREDIT_MANUAL: :CREDIT_MANUAL

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditManualLedgerEntry::type_]
                end
              end

              type credit_seat_based_adjustment_ledger_entry =
                {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSeatBasedAdjustmentLedgerEntry::type_
                }

              class CreditSeatBasedAdjustmentLedgerEntry < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor amount: Float

                attr_accessor segment_id: String

                attr_accessor timestamp: Time

                attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSeatBasedAdjustmentLedgerEntry::type_

                def initialize: (
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSeatBasedAdjustmentLedgerEntry::type_
                ) -> void

                def to_hash: -> {
                  amount: Float,
                  segment_id: String,
                  timestamp: Time,
                  type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSeatBasedAdjustmentLedgerEntry::type_
                }

                type type_ = :CREDIT_SEAT_BASED_ADJUSTMENT

                module Type
                  extend MetronomeSDK::Internal::Type::Enum

                  CREDIT_SEAT_BASED_ADJUSTMENT: :CREDIT_SEAT_BASED_ADJUSTMENT

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::Ledger::CreditSeatBasedAdjustmentLedgerEntry::type_]
                end
              end

              def self?.variants: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Credit::ledger]
            end

            type specifier =
              {
                presentation_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String]
              }

            class Specifier < MetronomeSDK::Internal::Type::BaseModel
              attr_reader presentation_group_values: ::Hash[Symbol, String]?

              def presentation_group_values=: (
                ::Hash[Symbol, String]
              ) -> ::Hash[Symbol, String]

              attr_reader pricing_group_values: ::Hash[Symbol, String]?

              def pricing_group_values=: (
                ::Hash[Symbol, String]
              ) -> ::Hash[Symbol, String]

              attr_reader product_id: String?

              def product_id=: (String) -> String

              attr_reader product_tags: ::Array[String]?

              def product_tags=: (::Array[String]) -> ::Array[String]

              def initialize: (
                ?presentation_group_values: ::Hash[Symbol, String],
                ?pricing_group_values: ::Hash[Symbol, String],
                ?product_id: String,
                ?product_tags: ::Array[String]
              ) -> void

              def to_hash: -> {
                presentation_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String]
              }
            end
          end

          type customer_billing_provider_configuration =
            {
              id: String,
              billing_provider: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider,
              delivery_method: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method
            }

          class CustomerBillingProviderConfiguration < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor id: String

            attr_accessor billing_provider: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider

            attr_accessor delivery_method: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method

            def initialize: (
              id: String,
              billing_provider: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider,
              delivery_method: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method
            ) -> void

            def to_hash: -> {
              id: String,
              billing_provider: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider,
              delivery_method: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method
            }

            type billing_provider =
              :aws_marketplace
              | :stripe
              | :netsuite
              | :custom
              | :azure_marketplace
              | :quickbooks_online
              | :workday
              | :gcp_marketplace

            module BillingProvider
              extend MetronomeSDK::Internal::Type::Enum

              AWS_MARKETPLACE: :aws_marketplace
              STRIPE: :stripe
              NETSUITE: :netsuite
              CUSTOM: :custom
              AZURE_MARKETPLACE: :azure_marketplace
              QUICKBOOKS_ONLINE: :quickbooks_online
              WORKDAY: :workday
              GCP_MARKETPLACE: :gcp_marketplace

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider]
            end

            type delivery_method =
              :direct_to_billing_provider | :aws_sqs | :tackle | :aws_sns

            module DeliveryMethod
              extend MetronomeSDK::Internal::Type::Enum

              DIRECT_TO_BILLING_PROVIDER: :direct_to_billing_provider
              AWS_SQS: :aws_sqs
              TACKLE: :tackle
              AWS_SNS: :aws_sns

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method]
            end
          end

          type has_more = { commits: bool, credits: bool }

          class HasMore < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor commits: bool

            attr_accessor credits: bool

            def initialize: (commits: bool, credits: bool) -> void

            def to_hash: -> { commits: bool, credits: bool }
          end

          type hierarchy_configuration =
            MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ParentHierarchyConfiguration
            | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ChildHierarchyConfiguration

          module HierarchyConfiguration
            extend MetronomeSDK::Internal::Type::Union

            type parent_hierarchy_configuration =
              {
                children: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ParentHierarchyConfiguration::Child]
              }

            class ParentHierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor children: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ParentHierarchyConfiguration::Child]

              def initialize: (
                children: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ParentHierarchyConfiguration::Child]
              ) -> void

              def to_hash: -> {
                children: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ParentHierarchyConfiguration::Child]
              }

              type child = { contract_id: String, customer_id: String }

              class Child < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor contract_id: String

                attr_accessor customer_id: String

                def initialize: (
                  contract_id: String,
                  customer_id: String
                ) -> void

                def to_hash: -> { contract_id: String, customer_id: String }
              end
            end

            type child_hierarchy_configuration =
              {
                parent: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ChildHierarchyConfiguration::Parent
              }

            class ChildHierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor parent: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ChildHierarchyConfiguration::Parent

              def initialize: (
                parent: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ChildHierarchyConfiguration::Parent
              ) -> void

              def to_hash: -> {
                parent: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::HierarchyConfiguration::ChildHierarchyConfiguration::Parent
              }

              type parent = { contract_id: String, customer_id: String }

              class Parent < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor contract_id: String

                attr_accessor customer_id: String

                def initialize: (
                  contract_id: String,
                  customer_id: String
                ) -> void

                def to_hash: -> { contract_id: String, customer_id: String }
              end
            end

            def self?.variants: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::hierarchy_configuration]
          end

          type multiplier_override_prioritization =
            :LOWEST_MULTIPLIER | :EXPLICIT

          module MultiplierOverridePrioritization
            extend MetronomeSDK::Internal::Type::Enum

            LOWEST_MULTIPLIER: :LOWEST_MULTIPLIER
            EXPLICIT: :EXPLICIT

            def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::multiplier_override_prioritization]
          end

          type prepaid_balance_threshold_configuration =
            {
              commit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig,
              recharge_to_amount: Float,
              threshold_amount: Float,
              custom_credit_type_id: String
            }

          class PrepaidBalanceThresholdConfiguration < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor commit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit

            attr_accessor is_enabled: bool

            attr_accessor payment_gate_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig

            attr_accessor recharge_to_amount: Float

            attr_accessor threshold_amount: Float

            attr_reader custom_credit_type_id: String?

            def custom_credit_type_id=: (String) -> String

            def initialize: (
              commit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig,
              recharge_to_amount: Float,
              threshold_amount: Float,
              ?custom_credit_type_id: String
            ) -> void

            def to_hash: -> {
              commit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig,
              recharge_to_amount: Float,
              threshold_amount: Float,
              custom_credit_type_id: String
            }

            type commit =
              {
                product_id: String,
                applicable_product_ids: ::Array[String],
                applicable_product_tags: ::Array[String],
                description: String,
                name: String,
                specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]
              }

            class Commit < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor product_id: String

              attr_reader applicable_product_ids: ::Array[String]?

              def applicable_product_ids=: (::Array[String]) -> ::Array[String]

              attr_reader applicable_product_tags: ::Array[String]?

              def applicable_product_tags=: (::Array[String]) -> ::Array[String]

              attr_reader description: String?

              def description=: (String) -> String

              attr_reader name: String?

              def name=: (String) -> String

              attr_reader specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]?

              def specifiers=: (
                ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]
              ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]

              def initialize: (
                product_id: String,
                ?applicable_product_ids: ::Array[String],
                ?applicable_product_tags: ::Array[String],
                ?description: String,
                ?name: String,
                ?specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]
              ) -> void

              def to_hash: -> {
                product_id: String,
                applicable_product_ids: ::Array[String],
                applicable_product_tags: ::Array[String],
                description: String,
                name: String,
                specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]
              }

              type specifier =
                {
                  presentation_group_values: ::Hash[Symbol, String],
                  pricing_group_values: ::Hash[Symbol, String],
                  product_id: String,
                  product_tags: ::Array[String]
                }

              class Specifier < MetronomeSDK::Internal::Type::BaseModel
                attr_reader presentation_group_values: ::Hash[Symbol, String]?

                def presentation_group_values=: (
                  ::Hash[Symbol, String]
                ) -> ::Hash[Symbol, String]

                attr_reader pricing_group_values: ::Hash[Symbol, String]?

                def pricing_group_values=: (
                  ::Hash[Symbol, String]
                ) -> ::Hash[Symbol, String]

                attr_reader product_id: String?

                def product_id=: (String) -> String

                attr_reader product_tags: ::Array[String]?

                def product_tags=: (::Array[String]) -> ::Array[String]

                def initialize: (
                  ?presentation_group_values: ::Hash[Symbol, String],
                  ?pricing_group_values: ::Hash[Symbol, String],
                  ?product_id: String,
                  ?product_tags: ::Array[String]
                ) -> void

                def to_hash: -> {
                  presentation_group_values: ::Hash[Symbol, String],
                  pricing_group_values: ::Hash[Symbol, String],
                  product_id: String,
                  product_tags: ::Array[String]
                }
              end
            end

            type payment_gate_config =
              {
                payment_gate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                precalculated_tax_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig,
                stripe_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type
              }

            class PaymentGateConfig < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor payment_gate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type

              attr_reader precalculated_tax_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig?

              def precalculated_tax_config=: (
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig
              ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig

              attr_reader stripe_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig?

              def stripe_config=: (
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig
              ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig

              attr_reader tax_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type?

              def tax_type=: (
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type

              def initialize: (
                payment_gate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                ?precalculated_tax_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig,
                ?stripe_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig,
                ?tax_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> void

              def to_hash: -> {
                payment_gate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                precalculated_tax_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig,
                stripe_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type
              }

              type payment_gate_type = :NONE | :STRIPE | :EXTERNAL

              module PaymentGateType
                extend MetronomeSDK::Internal::Type::Enum

                NONE: :NONE
                STRIPE: :STRIPE
                EXTERNAL: :EXTERNAL

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type]
              end

              type precalculated_tax_config =
                { tax_amount: Float, tax_name: String }

              class PrecalculatedTaxConfig < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor tax_amount: Float

                attr_reader tax_name: String?

                def tax_name=: (String) -> String

                def initialize: (tax_amount: Float, ?tax_name: String) -> void

                def to_hash: -> { tax_amount: Float, tax_name: String }
              end

              type stripe_config =
                {
                  payment_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type,
                  invoice_metadata: ::Hash[Symbol, String]
                }

              class StripeConfig < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor payment_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type

                attr_reader invoice_metadata: ::Hash[Symbol, String]?

                def invoice_metadata=: (
                  ::Hash[Symbol, String]
                ) -> ::Hash[Symbol, String]

                def initialize: (
                  payment_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type,
                  ?invoice_metadata: ::Hash[Symbol, String]
                ) -> void

                def to_hash: -> {
                  payment_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type,
                  invoice_metadata: ::Hash[Symbol, String]
                }

                type payment_type = :INVOICE | :PAYMENT_INTENT

                module PaymentType
                  extend MetronomeSDK::Internal::Type::Enum

                  INVOICE: :INVOICE
                  PAYMENT_INTENT: :PAYMENT_INTENT

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type]
                end
              end

              type tax_type = :NONE | :STRIPE | :ANROK | :PRECALCULATED

              module TaxType
                extend MetronomeSDK::Internal::Type::Enum

                NONE: :NONE
                STRIPE: :STRIPE
                ANROK: :ANROK
                PRECALCULATED: :PRECALCULATED

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type]
              end
            end
          end

          type recurring_commit =
            {
              id: String,
              access_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::AccessAmount,
              commit_duration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration,
              priority: Float,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Product,
              rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::rate_type,
              starting_at: Time,
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Contract,
              description: String,
              ending_before: Time,
              hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration,
              invoice_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::InvoiceAmount,
              name: String,
              netsuite_sales_order_id: String,
              proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::proration,
              recurrence_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::recurrence_frequency,
              rollover_fraction: Float,
              specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Specifier]
            }

          class RecurringCommit < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor id: String

            attr_accessor access_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::AccessAmount

            attr_accessor commit_duration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration

            attr_accessor priority: Float

            attr_accessor product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Product

            attr_accessor rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::rate_type

            attr_accessor starting_at: Time

            attr_reader applicable_product_ids: ::Array[String]?

            def applicable_product_ids=: (::Array[String]) -> ::Array[String]

            attr_reader applicable_product_tags: ::Array[String]?

            def applicable_product_tags=: (::Array[String]) -> ::Array[String]

            attr_reader contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Contract?

            def contract=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Contract
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Contract

            attr_reader description: String?

            def description=: (String) -> String

            attr_reader ending_before: Time?

            def ending_before=: (Time) -> Time

            attr_reader hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration?

            def hierarchy_configuration=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration

            attr_reader invoice_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::InvoiceAmount?

            def invoice_amount=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::InvoiceAmount
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::InvoiceAmount

            attr_reader name: String?

            def name=: (String) -> String

            attr_reader netsuite_sales_order_id: String?

            def netsuite_sales_order_id=: (String) -> String

            attr_reader proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::proration?

            def proration=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::proration
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::proration

            attr_reader recurrence_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::recurrence_frequency?

            def recurrence_frequency=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::recurrence_frequency
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::recurrence_frequency

            attr_reader rollover_fraction: Float?

            def rollover_fraction=: (Float) -> Float

            attr_reader specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Specifier]?

            def specifiers=: (
              ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Specifier]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Specifier]

            def initialize: (
              id: String,
              access_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::AccessAmount,
              commit_duration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration,
              priority: Float,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Product,
              rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::rate_type,
              starting_at: Time,
              ?applicable_product_ids: ::Array[String],
              ?applicable_product_tags: ::Array[String],
              ?contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Contract,
              ?description: String,
              ?ending_before: Time,
              ?hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration,
              ?invoice_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::InvoiceAmount,
              ?name: String,
              ?netsuite_sales_order_id: String,
              ?proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::proration,
              ?recurrence_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::recurrence_frequency,
              ?rollover_fraction: Float,
              ?specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Specifier]
            ) -> void

            def to_hash: -> {
              id: String,
              access_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::AccessAmount,
              commit_duration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration,
              priority: Float,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Product,
              rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::rate_type,
              starting_at: Time,
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Contract,
              description: String,
              ending_before: Time,
              hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration,
              invoice_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::InvoiceAmount,
              name: String,
              netsuite_sales_order_id: String,
              proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::proration,
              recurrence_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::recurrence_frequency,
              rollover_fraction: Float,
              specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::Specifier]
            }

            type access_amount =
              { credit_type_id: String, unit_price: Float, quantity: Float }

            class AccessAmount < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor credit_type_id: String

              attr_accessor unit_price: Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              def initialize: (
                credit_type_id: String,
                unit_price: Float,
                ?quantity: Float
              ) -> void

              def to_hash: -> {
                credit_type_id: String,
                unit_price: Float,
                quantity: Float
              }
            end

            type commit_duration =
              {
                value: Float,
                unit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration::unit
              }

            class CommitDuration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor value: Float

              attr_reader unit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration::unit?

              def unit=: (
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration::unit
              ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration::unit

              def initialize: (
                value: Float,
                ?unit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration::unit
              ) -> void

              def to_hash: -> {
                value: Float,
                unit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration::unit
              }

              type unit = :PERIODS

              module Unit
                extend MetronomeSDK::Internal::Type::Enum

                PERIODS: :PERIODS

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::CommitDuration::unit]
              end
            end

            type product = { id: String, name: String }

            class Product < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              attr_accessor name: String

              def initialize: (id: String, name: String) -> void

              def to_hash: -> { id: String, name: String }
            end

            type rate_type = :COMMIT_RATE | :LIST_RATE

            module RateType
              extend MetronomeSDK::Internal::Type::Enum

              COMMIT_RATE: :COMMIT_RATE
              LIST_RATE: :LIST_RATE

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::rate_type]
            end

            type contract = { id: String }

            class Contract < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              def initialize: (id: String) -> void

              def to_hash: -> { id: String }
            end

            type hierarchy_configuration =
              {
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::child_access
              }

            class HierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::child_access

              def initialize: (
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::child_access
              ) -> void

              def to_hash: -> {
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::child_access
              }

              type child_access =
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll
                | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone
                | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs

              module ChildAccess
                extend MetronomeSDK::Internal::Type::Union

                type commit_hierarchy_child_access_all =
                  {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  }

                class CommitHierarchyChildAccessAll < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_

                  def initialize: (
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  ) -> void

                  def to_hash: -> {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  }

                  type type_ = :ALL

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    ALL: :ALL

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_]
                  end
                end

                type commit_hierarchy_child_access_none =
                  {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  }

                class CommitHierarchyChildAccessNone < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_

                  def initialize: (
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  ) -> void

                  def to_hash: -> {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  }

                  type type_ = :NONE

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    NONE: :NONE

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_]
                  end
                end

                type commit_hierarchy_child_access_contract_ids =
                  {
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  }

                class CommitHierarchyChildAccessContractIDs < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor contract_ids: ::Array[String]

                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_

                  def initialize: (
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  ) -> void

                  def to_hash: -> {
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  }

                  type type_ = :CONTRACT_IDS

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    CONTRACT_IDS: :CONTRACT_IDS

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_]
                  end
                end

                def self?.variants: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::HierarchyConfiguration::child_access]
              end
            end

            type invoice_amount =
              { credit_type_id: String, quantity: Float, unit_price: Float }

            class InvoiceAmount < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor credit_type_id: String

              attr_accessor quantity: Float

              attr_accessor unit_price: Float

              def initialize: (
                credit_type_id: String,
                quantity: Float,
                unit_price: Float
              ) -> void

              def to_hash: -> {
                credit_type_id: String,
                quantity: Float,
                unit_price: Float
              }
            end

            type proration = :NONE | :FIRST | :LAST | :FIRST_AND_LAST

            module Proration
              extend MetronomeSDK::Internal::Type::Enum

              NONE: :NONE
              FIRST: :FIRST
              LAST: :LAST
              FIRST_AND_LAST: :FIRST_AND_LAST

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::proration]
            end

            type recurrence_frequency =
              :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

            module RecurrenceFrequency
              extend MetronomeSDK::Internal::Type::Enum

              MONTHLY: :MONTHLY
              QUARTERLY: :QUARTERLY
              ANNUAL: :ANNUAL
              WEEKLY: :WEEKLY

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCommit::recurrence_frequency]
            end

            type specifier =
              {
                presentation_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String]
              }

            class Specifier < MetronomeSDK::Internal::Type::BaseModel
              attr_reader presentation_group_values: ::Hash[Symbol, String]?

              def presentation_group_values=: (
                ::Hash[Symbol, String]
              ) -> ::Hash[Symbol, String]

              attr_reader pricing_group_values: ::Hash[Symbol, String]?

              def pricing_group_values=: (
                ::Hash[Symbol, String]
              ) -> ::Hash[Symbol, String]

              attr_reader product_id: String?

              def product_id=: (String) -> String

              attr_reader product_tags: ::Array[String]?

              def product_tags=: (::Array[String]) -> ::Array[String]

              def initialize: (
                ?presentation_group_values: ::Hash[Symbol, String],
                ?pricing_group_values: ::Hash[Symbol, String],
                ?product_id: String,
                ?product_tags: ::Array[String]
              ) -> void

              def to_hash: -> {
                presentation_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String]
              }
            end
          end

          type recurring_credit =
            {
              id: String,
              access_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::AccessAmount,
              commit_duration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration,
              priority: Float,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Product,
              rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::rate_type,
              starting_at: Time,
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Contract,
              description: String,
              ending_before: Time,
              hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration,
              name: String,
              netsuite_sales_order_id: String,
              proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::proration,
              recurrence_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::recurrence_frequency,
              rollover_fraction: Float,
              specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Specifier]
            }

          class RecurringCredit < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor id: String

            attr_accessor access_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::AccessAmount

            attr_accessor commit_duration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration

            attr_accessor priority: Float

            attr_accessor product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Product

            attr_accessor rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::rate_type

            attr_accessor starting_at: Time

            attr_reader applicable_product_ids: ::Array[String]?

            def applicable_product_ids=: (::Array[String]) -> ::Array[String]

            attr_reader applicable_product_tags: ::Array[String]?

            def applicable_product_tags=: (::Array[String]) -> ::Array[String]

            attr_reader contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Contract?

            def contract=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Contract
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Contract

            attr_reader description: String?

            def description=: (String) -> String

            attr_reader ending_before: Time?

            def ending_before=: (Time) -> Time

            attr_reader hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration?

            def hierarchy_configuration=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration

            attr_reader name: String?

            def name=: (String) -> String

            attr_reader netsuite_sales_order_id: String?

            def netsuite_sales_order_id=: (String) -> String

            attr_reader proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::proration?

            def proration=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::proration
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::proration

            attr_reader recurrence_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::recurrence_frequency?

            def recurrence_frequency=: (
              MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::recurrence_frequency
            ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::recurrence_frequency

            attr_reader rollover_fraction: Float?

            def rollover_fraction=: (Float) -> Float

            attr_reader specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Specifier]?

            def specifiers=: (
              ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Specifier]
            ) -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Specifier]

            def initialize: (
              id: String,
              access_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::AccessAmount,
              commit_duration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration,
              priority: Float,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Product,
              rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::rate_type,
              starting_at: Time,
              ?applicable_product_ids: ::Array[String],
              ?applicable_product_tags: ::Array[String],
              ?contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Contract,
              ?description: String,
              ?ending_before: Time,
              ?hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration,
              ?name: String,
              ?netsuite_sales_order_id: String,
              ?proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::proration,
              ?recurrence_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::recurrence_frequency,
              ?rollover_fraction: Float,
              ?specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Specifier]
            ) -> void

            def to_hash: -> {
              id: String,
              access_amount: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::AccessAmount,
              commit_duration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration,
              priority: Float,
              product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Product,
              rate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::rate_type,
              starting_at: Time,
              applicable_product_ids: ::Array[String],
              applicable_product_tags: ::Array[String],
              contract: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Contract,
              description: String,
              ending_before: Time,
              hierarchy_configuration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration,
              name: String,
              netsuite_sales_order_id: String,
              proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::proration,
              recurrence_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::recurrence_frequency,
              rollover_fraction: Float,
              specifiers: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::Specifier]
            }

            type access_amount =
              { credit_type_id: String, unit_price: Float, quantity: Float }

            class AccessAmount < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor credit_type_id: String

              attr_accessor unit_price: Float

              attr_reader quantity: Float?

              def quantity=: (Float) -> Float

              def initialize: (
                credit_type_id: String,
                unit_price: Float,
                ?quantity: Float
              ) -> void

              def to_hash: -> {
                credit_type_id: String,
                unit_price: Float,
                quantity: Float
              }
            end

            type commit_duration =
              {
                value: Float,
                unit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration::unit
              }

            class CommitDuration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor value: Float

              attr_reader unit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration::unit?

              def unit=: (
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration::unit
              ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration::unit

              def initialize: (
                value: Float,
                ?unit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration::unit
              ) -> void

              def to_hash: -> {
                value: Float,
                unit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration::unit
              }

              type unit = :PERIODS

              module Unit
                extend MetronomeSDK::Internal::Type::Enum

                PERIODS: :PERIODS

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::CommitDuration::unit]
              end
            end

            type product = { id: String, name: String }

            class Product < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              attr_accessor name: String

              def initialize: (id: String, name: String) -> void

              def to_hash: -> { id: String, name: String }
            end

            type rate_type = :COMMIT_RATE | :LIST_RATE

            module RateType
              extend MetronomeSDK::Internal::Type::Enum

              COMMIT_RATE: :COMMIT_RATE
              LIST_RATE: :LIST_RATE

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::rate_type]
            end

            type contract = { id: String }

            class Contract < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              def initialize: (id: String) -> void

              def to_hash: -> { id: String }
            end

            type hierarchy_configuration =
              {
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::child_access
              }

            class HierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::child_access

              def initialize: (
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::child_access
              ) -> void

              def to_hash: -> {
                child_access: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::child_access
              }

              type child_access =
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll
                | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone
                | MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs

              module ChildAccess
                extend MetronomeSDK::Internal::Type::Union

                type commit_hierarchy_child_access_all =
                  {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  }

                class CommitHierarchyChildAccessAll < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_

                  def initialize: (
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  ) -> void

                  def to_hash: -> {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_
                  }

                  type type_ = :ALL

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    ALL: :ALL

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessAll::type_]
                  end
                end

                type commit_hierarchy_child_access_none =
                  {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  }

                class CommitHierarchyChildAccessNone < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_

                  def initialize: (
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  ) -> void

                  def to_hash: -> {
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_
                  }

                  type type_ = :NONE

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    NONE: :NONE

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessNone::type_]
                  end
                end

                type commit_hierarchy_child_access_contract_ids =
                  {
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  }

                class CommitHierarchyChildAccessContractIDs < MetronomeSDK::Internal::Type::BaseModel
                  attr_accessor contract_ids: ::Array[String]

                  attr_accessor type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_

                  def initialize: (
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  ) -> void

                  def to_hash: -> {
                    contract_ids: ::Array[String],
                    type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_
                  }

                  type type_ = :CONTRACT_IDS

                  module Type
                    extend MetronomeSDK::Internal::Type::Enum

                    CONTRACT_IDS: :CONTRACT_IDS

                    def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::ChildAccess::CommitHierarchyChildAccessContractIDs::type_]
                  end
                end

                def self?.variants: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::HierarchyConfiguration::child_access]
              end
            end

            type proration = :NONE | :FIRST | :LAST | :FIRST_AND_LAST

            module Proration
              extend MetronomeSDK::Internal::Type::Enum

              NONE: :NONE
              FIRST: :FIRST
              LAST: :LAST
              FIRST_AND_LAST: :FIRST_AND_LAST

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::proration]
            end

            type recurrence_frequency =
              :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

            module RecurrenceFrequency
              extend MetronomeSDK::Internal::Type::Enum

              MONTHLY: :MONTHLY
              QUARTERLY: :QUARTERLY
              ANNUAL: :ANNUAL
              WEEKLY: :WEEKLY

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::RecurringCredit::recurrence_frequency]
            end

            type specifier =
              {
                presentation_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String]
              }

            class Specifier < MetronomeSDK::Internal::Type::BaseModel
              attr_reader presentation_group_values: ::Hash[Symbol, String]?

              def presentation_group_values=: (
                ::Hash[Symbol, String]
              ) -> ::Hash[Symbol, String]

              attr_reader pricing_group_values: ::Hash[Symbol, String]?

              def pricing_group_values=: (
                ::Hash[Symbol, String]
              ) -> ::Hash[Symbol, String]

              attr_reader product_id: String?

              def product_id=: (String) -> String

              attr_reader product_tags: ::Array[String]?

              def product_tags=: (::Array[String]) -> ::Array[String]

              def initialize: (
                ?presentation_group_values: ::Hash[Symbol, String],
                ?pricing_group_values: ::Hash[Symbol, String],
                ?product_id: String,
                ?product_tags: ::Array[String]
              ) -> void

              def to_hash: -> {
                presentation_group_values: ::Hash[Symbol, String],
                pricing_group_values: ::Hash[Symbol, String],
                product_id: String,
                product_tags: ::Array[String]
              }
            end
          end

          type reseller_royalty =
            {
              reseller_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::reseller_type,
              segments: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::Segment]
            }

          class ResellerRoyalty < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor reseller_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::reseller_type

            attr_accessor segments: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::Segment]

            def initialize: (
              reseller_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::reseller_type,
              segments: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::Segment]
            ) -> void

            def to_hash: -> {
              reseller_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::reseller_type,
              segments: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::Segment]
            }

            type reseller_type =
              :AWS | :AWS_PRO_SERVICE | :GCP | :GCP_PRO_SERVICE

            module ResellerType
              extend MetronomeSDK::Internal::Type::Enum

              AWS: :AWS
              AWS_PRO_SERVICE: :AWS_PRO_SERVICE
              GCP: :GCP
              GCP_PRO_SERVICE: :GCP_PRO_SERVICE

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::reseller_type]
            end

            type segment =
              {
                fraction: Float,
                netsuite_reseller_id: String,
                reseller_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::Segment::reseller_type,
                starting_at: Time,
                applicable_product_ids: ::Array[String],
                applicable_product_tags: ::Array[String],
                aws_account_number: String,
                aws_offer_id: String,
                aws_payer_reference_id: String,
                ending_before: Time,
                gcp_account_id: String,
                gcp_offer_id: String,
                reseller_contract_value: Float
              }

            class Segment < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor fraction: Float

              attr_accessor netsuite_reseller_id: String

              attr_accessor reseller_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::Segment::reseller_type

              attr_accessor starting_at: Time

              attr_reader applicable_product_ids: ::Array[String]?

              def applicable_product_ids=: (::Array[String]) -> ::Array[String]

              attr_reader applicable_product_tags: ::Array[String]?

              def applicable_product_tags=: (::Array[String]) -> ::Array[String]

              attr_reader aws_account_number: String?

              def aws_account_number=: (String) -> String

              attr_reader aws_offer_id: String?

              def aws_offer_id=: (String) -> String

              attr_reader aws_payer_reference_id: String?

              def aws_payer_reference_id=: (String) -> String

              attr_reader ending_before: Time?

              def ending_before=: (Time) -> Time

              attr_reader gcp_account_id: String?

              def gcp_account_id=: (String) -> String

              attr_reader gcp_offer_id: String?

              def gcp_offer_id=: (String) -> String

              attr_reader reseller_contract_value: Float?

              def reseller_contract_value=: (Float) -> Float

              def initialize: (
                fraction: Float,
                netsuite_reseller_id: String,
                reseller_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::Segment::reseller_type,
                starting_at: Time,
                ?applicable_product_ids: ::Array[String],
                ?applicable_product_tags: ::Array[String],
                ?aws_account_number: String,
                ?aws_offer_id: String,
                ?aws_payer_reference_id: String,
                ?ending_before: Time,
                ?gcp_account_id: String,
                ?gcp_offer_id: String,
                ?reseller_contract_value: Float
              ) -> void

              def to_hash: -> {
                fraction: Float,
                netsuite_reseller_id: String,
                reseller_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::Segment::reseller_type,
                starting_at: Time,
                applicable_product_ids: ::Array[String],
                applicable_product_tags: ::Array[String],
                aws_account_number: String,
                aws_offer_id: String,
                aws_payer_reference_id: String,
                ending_before: Time,
                gcp_account_id: String,
                gcp_offer_id: String,
                reseller_contract_value: Float
              }

              type reseller_type =
                :AWS | :AWS_PRO_SERVICE | :GCP | :GCP_PRO_SERVICE

              module ResellerType
                extend MetronomeSDK::Internal::Type::Enum

                AWS: :AWS
                AWS_PRO_SERVICE: :AWS_PRO_SERVICE
                GCP: :GCP
                GCP_PRO_SERVICE: :GCP_PRO_SERVICE

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::ResellerRoyalty::Segment::reseller_type]
              end
            end
          end

          type scheduled_charges_on_usage_invoices = :ALL

          module ScheduledChargesOnUsageInvoices
            extend MetronomeSDK::Internal::Type::Enum

            ALL: :ALL

            def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices]
          end

          type spend_threshold_configuration =
            {
              commit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig,
              threshold_amount: Float
            }

          class SpendThresholdConfiguration < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor commit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::Commit

            attr_accessor is_enabled: bool

            attr_accessor payment_gate_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig

            attr_accessor threshold_amount: Float

            def initialize: (
              commit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig,
              threshold_amount: Float
            ) -> void

            def to_hash: -> {
              commit: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig,
              threshold_amount: Float
            }

            type commit =
              { product_id: String, description: String, name: String }

            class Commit < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor product_id: String

              attr_reader description: String?

              def description=: (String) -> String

              attr_reader name: String?

              def name=: (String) -> String

              def initialize: (
                product_id: String,
                ?description: String,
                ?name: String
              ) -> void

              def to_hash: -> {
                product_id: String,
                description: String,
                name: String
              }
            end

            type payment_gate_config =
              {
                payment_gate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                precalculated_tax_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig,
                stripe_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type
              }

            class PaymentGateConfig < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor payment_gate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type

              attr_reader precalculated_tax_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig?

              def precalculated_tax_config=: (
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig
              ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig

              attr_reader stripe_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig?

              def stripe_config=: (
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig
              ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig

              attr_reader tax_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type?

              def tax_type=: (
                MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type

              def initialize: (
                payment_gate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                ?precalculated_tax_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig,
                ?stripe_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
                ?tax_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> void

              def to_hash: -> {
                payment_gate_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                precalculated_tax_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::PrecalculatedTaxConfig,
                stripe_config: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type
              }

              type payment_gate_type = :NONE | :STRIPE | :EXTERNAL

              module PaymentGateType
                extend MetronomeSDK::Internal::Type::Enum

                NONE: :NONE
                STRIPE: :STRIPE
                EXTERNAL: :EXTERNAL

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type]
              end

              type precalculated_tax_config =
                { tax_amount: Float, tax_name: String }

              class PrecalculatedTaxConfig < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor tax_amount: Float

                attr_reader tax_name: String?

                def tax_name=: (String) -> String

                def initialize: (tax_amount: Float, ?tax_name: String) -> void

                def to_hash: -> { tax_amount: Float, tax_name: String }
              end

              type stripe_config =
                {
                  payment_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type,
                  invoice_metadata: ::Hash[Symbol, String]
                }

              class StripeConfig < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor payment_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type

                attr_reader invoice_metadata: ::Hash[Symbol, String]?

                def invoice_metadata=: (
                  ::Hash[Symbol, String]
                ) -> ::Hash[Symbol, String]

                def initialize: (
                  payment_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type,
                  ?invoice_metadata: ::Hash[Symbol, String]
                ) -> void

                def to_hash: -> {
                  payment_type: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type,
                  invoice_metadata: ::Hash[Symbol, String]
                }

                type payment_type = :INVOICE | :PAYMENT_INTENT

                module PaymentType
                  extend MetronomeSDK::Internal::Type::Enum

                  INVOICE: :INVOICE
                  PAYMENT_INTENT: :PAYMENT_INTENT

                  def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type]
                end
              end

              type tax_type = :NONE | :STRIPE | :ANROK | :PRECALCULATED

              module TaxType
                extend MetronomeSDK::Internal::Type::Enum

                NONE: :NONE
                STRIPE: :STRIPE
                ANROK: :ANROK
                PRECALCULATED: :PRECALCULATED

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type]
              end
            end
          end

          type subscription =
            {
              collection_schedule: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::collection_schedule,
              proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::Proration,
              quantity_schedule: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::QuantitySchedule],
              starting_at: Time,
              subscription_rate: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate,
              id: String,
              custom_fields: ::Hash[Symbol, String],
              description: String,
              ending_before: Time,
              fiat_credit_type_id: String,
              name: String
            }

          class Subscription < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor collection_schedule: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::collection_schedule

            attr_accessor proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::Proration

            attr_accessor quantity_schedule: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::QuantitySchedule]

            attr_accessor starting_at: Time

            attr_accessor subscription_rate: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate

            attr_reader id: String?

            def id=: (String) -> String

            attr_reader custom_fields: ::Hash[Symbol, String]?

            def custom_fields=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader description: String?

            def description=: (String) -> String

            attr_reader ending_before: Time?

            def ending_before=: (Time) -> Time

            attr_reader fiat_credit_type_id: String?

            def fiat_credit_type_id=: (String) -> String

            attr_reader name: String?

            def name=: (String) -> String

            def initialize: (
              collection_schedule: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::collection_schedule,
              proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::Proration,
              quantity_schedule: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::QuantitySchedule],
              starting_at: Time,
              subscription_rate: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate,
              ?id: String,
              ?custom_fields: ::Hash[Symbol, String],
              ?description: String,
              ?ending_before: Time,
              ?fiat_credit_type_id: String,
              ?name: String
            ) -> void

            def to_hash: -> {
              collection_schedule: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::collection_schedule,
              proration: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::Proration,
              quantity_schedule: ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::QuantitySchedule],
              starting_at: Time,
              subscription_rate: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate,
              id: String,
              custom_fields: ::Hash[Symbol, String],
              description: String,
              ending_before: Time,
              fiat_credit_type_id: String,
              name: String
            }

            type collection_schedule = :ADVANCE | :ARREARS

            module CollectionSchedule
              extend MetronomeSDK::Internal::Type::Enum

              ADVANCE: :ADVANCE
              ARREARS: :ARREARS

              def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::collection_schedule]
            end

            type proration =
              {
                invoice_behavior: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior,
                is_prorated: bool
              }

            class Proration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor invoice_behavior: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior

              attr_accessor is_prorated: bool

              def initialize: (
                invoice_behavior: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior,
                is_prorated: bool
              ) -> void

              def to_hash: -> {
                invoice_behavior: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior,
                is_prorated: bool
              }

              type invoice_behavior =
                :BILL_IMMEDIATELY | :BILL_ON_NEXT_COLLECTION_DATE

              module InvoiceBehavior
                extend MetronomeSDK::Internal::Type::Enum

                BILL_IMMEDIATELY: :BILL_IMMEDIATELY
                BILL_ON_NEXT_COLLECTION_DATE: :BILL_ON_NEXT_COLLECTION_DATE

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior]
              end
            end

            type quantity_schedule =
              { quantity: Float, starting_at: Time, ending_before: Time }

            class QuantitySchedule < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor quantity: Float

              attr_accessor starting_at: Time

              attr_reader ending_before: Time?

              def ending_before=: (Time) -> Time

              def initialize: (
                quantity: Float,
                starting_at: Time,
                ?ending_before: Time
              ) -> void

              def to_hash: -> {
                quantity: Float,
                starting_at: Time,
                ending_before: Time
              }
            end

            type subscription_rate =
              {
                billing_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency,
                product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::Product
              }

            class SubscriptionRate < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor billing_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency

              attr_accessor product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::Product

              def initialize: (
                billing_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency,
                product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::Product
              ) -> void

              def to_hash: -> {
                billing_frequency: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency,
                product: MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::Product
              }

              type billing_frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

              module BillingFrequency
                extend MetronomeSDK::Internal::Type::Enum

                MONTHLY: :MONTHLY
                QUARTERLY: :QUARTERLY
                ANNUAL: :ANNUAL
                WEEKLY: :WEEKLY

                def self?.values: -> ::Array[MetronomeSDK::Models::V2::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency]
              end

              type product = { id: String, name: String }

              class Product < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor id: String

                attr_accessor name: String

                def initialize: (id: String, name: String) -> void

                def to_hash: -> { id: String, name: String }
              end
            end
          end
        end
      end
    end
  end
end
