module MetronomeSDK
  module Models
    module V1
      type customer_detail =
        {
          id: String,
          created_at: Time,
          custom_fields: ::Hash[Symbol, String],
          customer_config: MetronomeSDK::V1::CustomerDetail::CustomerConfig,
          external_id: String,
          ingest_aliases: ::Array[String],
          name: String,
          archived_at: Time?,
          current_billable_status: MetronomeSDK::V1::CustomerDetail::CurrentBillableStatus
        }

      class CustomerDetail < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor created_at: Time

        attr_accessor custom_fields: ::Hash[Symbol, String]

        attr_accessor customer_config: MetronomeSDK::V1::CustomerDetail::CustomerConfig

        attr_accessor external_id: String

        attr_accessor ingest_aliases: ::Array[String]

        attr_accessor name: String

        attr_accessor archived_at: Time?

        attr_reader current_billable_status: MetronomeSDK::V1::CustomerDetail::CurrentBillableStatus?

        def current_billable_status=: (
          MetronomeSDK::V1::CustomerDetail::CurrentBillableStatus
        ) -> MetronomeSDK::V1::CustomerDetail::CurrentBillableStatus

        def initialize: (
          id: String,
          created_at: Time,
          custom_fields: ::Hash[Symbol, String],
          customer_config: MetronomeSDK::V1::CustomerDetail::CustomerConfig,
          external_id: String,
          ingest_aliases: ::Array[String],
          name: String,
          ?archived_at: Time?,
          ?current_billable_status: MetronomeSDK::V1::CustomerDetail::CurrentBillableStatus
        ) -> void

        type customer_config = { salesforce_account_id: String? }

        class CustomerConfig < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor salesforce_account_id: String?

          def initialize: (salesforce_account_id: String?) -> void
        end

        type current_billable_status =
          {
            value: MetronomeSDK::V1::CustomerDetail::CurrentBillableStatus::value,
            effective_at: Time?
          }

        class CurrentBillableStatus < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor value: MetronomeSDK::V1::CustomerDetail::CurrentBillableStatus::value

          attr_accessor effective_at: Time?

          def initialize: (
            value: MetronomeSDK::V1::CustomerDetail::CurrentBillableStatus::value,
            ?effective_at: Time?
          ) -> void

          type value = :billable | :unbillable

          module Value
            extend MetronomeSDK::Internal::Type::Enum

            BILLABLE: :billable
            UNBILLABLE: :unbillable

            def self?.values: -> ::Array[MetronomeSDK::V1::CustomerDetail::CurrentBillableStatus::value]
          end
        end
      end
    end
  end
end
