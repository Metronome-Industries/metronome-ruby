module MetronomeSDK
  module Models
    module V1
      module Contracts
        type quantity_rounding =
          {
            decimal_places: Float,
            rounding_method: MetronomeSDK::V1::Contracts::QuantityRounding::rounding_method
          }

        class QuantityRounding < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor decimal_places: Float

          attr_accessor rounding_method: MetronomeSDK::V1::Contracts::QuantityRounding::rounding_method

          def initialize: (
            decimal_places: Float,
            rounding_method: MetronomeSDK::V1::Contracts::QuantityRounding::rounding_method
          ) -> void

          type rounding_method = :ROUND_UP | :ROUND_DOWN | :ROUND_HALF_UP

          module RoundingMethod
            extend MetronomeSDK::Internal::Type::Enum

            ROUND_UP: :ROUND_UP
            ROUND_DOWN: :ROUND_DOWN
            ROUND_HALF_UP: :ROUND_HALF_UP

            def self?.values: -> ::Array[MetronomeSDK::V1::Contracts::QuantityRounding::rounding_method]
          end
        end
      end
    end
  end
end
