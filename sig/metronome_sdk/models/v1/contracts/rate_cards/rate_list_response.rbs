module MetronomeSDK
  module Models
    module V1
      module Contracts
        module RateCards
          type rate_list_response =
            {
              entitled: bool,
              product_custom_fields: ::Hash[Symbol, String],
              product_id: String,
              product_name: String,
              product_tags: ::Array[String],
              rate: MetronomeSDK::Rate,
              starting_at: Time,
              billing_frequency: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::billing_frequency,
              commit_rate: MetronomeSDK::CommitRate,
              ending_before: Time,
              pricing_group_values: ::Hash[Symbol, String]
            }

          class RateListResponse < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor entitled: bool

            attr_accessor product_custom_fields: ::Hash[Symbol, String]

            attr_accessor product_id: String

            attr_accessor product_name: String

            attr_accessor product_tags: ::Array[String]

            attr_accessor rate: MetronomeSDK::Rate

            attr_accessor starting_at: Time

            attr_reader billing_frequency: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::billing_frequency?

            def billing_frequency=: (
              MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::billing_frequency
            ) -> MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::billing_frequency

            attr_reader commit_rate: MetronomeSDK::CommitRate?

            def commit_rate=: (
              MetronomeSDK::CommitRate
            ) -> MetronomeSDK::CommitRate

            attr_reader ending_before: Time?

            def ending_before=: (Time) -> Time

            attr_reader pricing_group_values: ::Hash[Symbol, String]?

            def pricing_group_values=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            def initialize: (
              entitled: bool,
              product_custom_fields: ::Hash[Symbol, String],
              product_id: String,
              product_name: String,
              product_tags: ::Array[String],
              rate: MetronomeSDK::Rate,
              starting_at: Time,
              ?billing_frequency: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::billing_frequency,
              ?commit_rate: MetronomeSDK::CommitRate,
              ?ending_before: Time,
              ?pricing_group_values: ::Hash[Symbol, String]
            ) -> void

            def to_hash: -> {
              entitled: bool,
              product_custom_fields: ::Hash[Symbol, String],
              product_id: String,
              product_name: String,
              product_tags: ::Array[String],
              rate: MetronomeSDK::Rate,
              starting_at: Time,
              billing_frequency: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::billing_frequency,
              commit_rate: MetronomeSDK::CommitRate,
              ending_before: Time,
              pricing_group_values: ::Hash[Symbol, String]
            }

            type billing_frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

            module BillingFrequency
              extend MetronomeSDK::Internal::Type::Enum

              MONTHLY: :MONTHLY
              QUARTERLY: :QUARTERLY
              ANNUAL: :ANNUAL
              WEEKLY: :WEEKLY

              def self?.values: -> ::Array[MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::billing_frequency]
            end
          end
        end
      end
    end
  end
end
