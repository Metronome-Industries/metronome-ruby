module MetronomeSDK
  module Models
    module V1
      module Contracts
        module RateCards
          type rate_list_response =
            {
              entitled: bool,
              product_custom_fields: ::Hash[Symbol, String],
              product_id: String,
              product_name: String,
              product_tags: ::Array[String],
              rate: MetronomeSDK::Rate,
              starting_at: Time,
              commit_rate: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate,
              ending_before: Time,
              pricing_group_values: ::Hash[Symbol, String]
            }

          class RateListResponse < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor entitled: bool

            attr_accessor product_custom_fields: ::Hash[Symbol, String]

            attr_accessor product_id: String

            attr_accessor product_name: String

            attr_accessor product_tags: ::Array[String]

            attr_accessor rate: MetronomeSDK::Rate

            attr_accessor starting_at: Time

            attr_reader commit_rate: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate?

            def commit_rate=: (
              MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate
            ) -> MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate

            attr_reader ending_before: Time?

            def ending_before=: (Time) -> Time

            attr_reader pricing_group_values: ::Hash[Symbol, String]?

            def pricing_group_values=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            def initialize: (
              entitled: bool,
              product_custom_fields: ::Hash[Symbol, String],
              product_id: String,
              product_name: String,
              product_tags: ::Array[String],
              rate: MetronomeSDK::Rate,
              starting_at: Time,
              ?commit_rate: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate,
              ?ending_before: Time,
              ?pricing_group_values: ::Hash[Symbol, String]
            ) -> void

            def to_hash: -> {
              entitled: bool,
              product_custom_fields: ::Hash[Symbol, String],
              product_id: String,
              product_name: String,
              product_tags: ::Array[String],
              rate: MetronomeSDK::Rate,
              starting_at: Time,
              commit_rate: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate,
              ending_before: Time,
              pricing_group_values: ::Hash[Symbol, String]
            }

            type commit_rate =
              {
                rate_type: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate::rate_type,
                price: Float,
                tiers: ::Array[MetronomeSDK::Tier]
              }

            class CommitRate < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor rate_type: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate::rate_type

              attr_reader price: Float?

              def price=: (Float) -> Float

              attr_reader tiers: ::Array[MetronomeSDK::Tier]?

              def tiers=: (
                ::Array[MetronomeSDK::Tier]
              ) -> ::Array[MetronomeSDK::Tier]

              def initialize: (
                rate_type: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate::rate_type,
                ?price: Float,
                ?tiers: ::Array[MetronomeSDK::Tier]
              ) -> void

              def to_hash: -> {
                rate_type: MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate::rate_type,
                price: Float,
                tiers: ::Array[MetronomeSDK::Tier]
              }

              type rate_type =
                :FLAT | :PERCENTAGE | :SUBSCRIPTION | :TIERED | :CUSTOM

              module RateType
                extend MetronomeSDK::Internal::Type::Enum

                FLAT: :FLAT
                PERCENTAGE: :PERCENTAGE
                SUBSCRIPTION: :SUBSCRIPTION
                TIERED: :TIERED
                CUSTOM: :CUSTOM

                def self?.values: -> ::Array[MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse::CommitRate::rate_type]
              end
            end
          end
        end
      end
    end
  end
end
