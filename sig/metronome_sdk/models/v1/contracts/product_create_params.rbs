module MetronomeSDK
  module Models
    module V1
      module Contracts
        type product_create_params =
          {
            name: String,
            type: MetronomeSDK::Models::V1::Contracts::ProductCreateParams::type_,
            billable_metric_id: String,
            composite_product_ids: ::Array[String],
            composite_tags: ::Array[String],
            exclude_free_usage: bool,
            is_refundable: bool,
            netsuite_internal_item_id: String,
            netsuite_overage_item_id: String,
            presentation_group_key: ::Array[String],
            pricing_group_key: ::Array[String],
            quantity_conversion: MetronomeSDK::V1::Contracts::QuantityConversion?,
            quantity_rounding: MetronomeSDK::V1::Contracts::QuantityRounding?,
            tags: ::Array[String]
          }
          & MetronomeSDK::Internal::Type::request_parameters

        class ProductCreateParams < MetronomeSDK::Internal::Type::BaseModel
          extend MetronomeSDK::Internal::Type::RequestParameters::Converter
          include MetronomeSDK::Internal::Type::RequestParameters

          attr_accessor name: String

          attr_accessor type: MetronomeSDK::Models::V1::Contracts::ProductCreateParams::type_

          attr_reader billable_metric_id: String?

          def billable_metric_id=: (String) -> String

          attr_reader composite_product_ids: ::Array[String]?

          def composite_product_ids=: (::Array[String]) -> ::Array[String]

          attr_reader composite_tags: ::Array[String]?

          def composite_tags=: (::Array[String]) -> ::Array[String]

          attr_reader exclude_free_usage: bool?

          def exclude_free_usage=: (bool) -> bool

          attr_reader is_refundable: bool?

          def is_refundable=: (bool) -> bool

          attr_reader netsuite_internal_item_id: String?

          def netsuite_internal_item_id=: (String) -> String

          attr_reader netsuite_overage_item_id: String?

          def netsuite_overage_item_id=: (String) -> String

          attr_reader presentation_group_key: ::Array[String]?

          def presentation_group_key=: (::Array[String]) -> ::Array[String]

          attr_reader pricing_group_key: ::Array[String]?

          def pricing_group_key=: (::Array[String]) -> ::Array[String]

          attr_accessor quantity_conversion: MetronomeSDK::V1::Contracts::QuantityConversion?

          attr_accessor quantity_rounding: MetronomeSDK::V1::Contracts::QuantityRounding?

          attr_reader tags: ::Array[String]?

          def tags=: (::Array[String]) -> ::Array[String]

          def initialize: (
            name: String,
            type: MetronomeSDK::Models::V1::Contracts::ProductCreateParams::type_,
            ?billable_metric_id: String,
            ?composite_product_ids: ::Array[String],
            ?composite_tags: ::Array[String],
            ?exclude_free_usage: bool,
            ?is_refundable: bool,
            ?netsuite_internal_item_id: String,
            ?netsuite_overage_item_id: String,
            ?presentation_group_key: ::Array[String],
            ?pricing_group_key: ::Array[String],
            ?quantity_conversion: MetronomeSDK::V1::Contracts::QuantityConversion?,
            ?quantity_rounding: MetronomeSDK::V1::Contracts::QuantityRounding?,
            ?tags: ::Array[String],
            ?request_options: MetronomeSDK::request_opts
          ) -> void

          def to_hash: -> {
            name: String,
            type: MetronomeSDK::Models::V1::Contracts::ProductCreateParams::type_,
            billable_metric_id: String,
            composite_product_ids: ::Array[String],
            composite_tags: ::Array[String],
            exclude_free_usage: bool,
            is_refundable: bool,
            netsuite_internal_item_id: String,
            netsuite_overage_item_id: String,
            presentation_group_key: ::Array[String],
            pricing_group_key: ::Array[String],
            quantity_conversion: MetronomeSDK::V1::Contracts::QuantityConversion?,
            quantity_rounding: MetronomeSDK::V1::Contracts::QuantityRounding?,
            tags: ::Array[String],
            request_options: MetronomeSDK::RequestOptions
          }

          type type_ =
            :FIXED
            | :USAGE
            | :COMPOSITE
            | :SUBSCRIPTION
            | :PROFESSIONAL_SERVICE
            | :PRO_SERVICE

          module Type
            extend MetronomeSDK::Internal::Type::Enum

            FIXED: :FIXED
            USAGE: :USAGE
            COMPOSITE: :COMPOSITE
            SUBSCRIPTION: :SUBSCRIPTION
            PROFESSIONAL_SERVICE: :PROFESSIONAL_SERVICE
            PRO_SERVICE: :PRO_SERVICE

            def self?.values: -> ::Array[MetronomeSDK::Models::V1::Contracts::ProductCreateParams::type_]
          end
        end
      end
    end
  end
end
