module MetronomeSDK
  module Models
    module V1
      type credit_grant_list_entries_response =
        {
          data: ::Array[MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data],
          next_page: String?
        }

      class CreditGrantListEntriesResponse < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor data: ::Array[MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data]

        attr_accessor next_page: String?

        def initialize: (
          data: ::Array[MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data],
          next_page: String?
        ) -> void

        type data =
          {
            customer_id: String,
            ledgers: ::Array[MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data::Ledger]
          }

        class Data < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor customer_id: String

          attr_accessor ledgers: ::Array[MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data::Ledger]

          def initialize: (
            customer_id: String,
            ledgers: ::Array[MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data::Ledger]
          ) -> void

          type ledger =
            {
              credit_type: MetronomeSDK::CreditTypeData,
              ending_balance: MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data::Ledger::EndingBalance,
              entries: ::Array[MetronomeSDK::V1::CreditLedgerEntry],
              pending_entries: ::Array[MetronomeSDK::V1::CreditLedgerEntry],
              starting_balance: MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data::Ledger::StartingBalance
            }

          class Ledger < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor credit_type: MetronomeSDK::CreditTypeData

            attr_accessor ending_balance: MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data::Ledger::EndingBalance

            attr_accessor entries: ::Array[MetronomeSDK::V1::CreditLedgerEntry]

            attr_accessor pending_entries: ::Array[MetronomeSDK::V1::CreditLedgerEntry]

            attr_accessor starting_balance: MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data::Ledger::StartingBalance

            def initialize: (
              credit_type: MetronomeSDK::CreditTypeData,
              ending_balance: MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data::Ledger::EndingBalance,
              entries: ::Array[MetronomeSDK::V1::CreditLedgerEntry],
              pending_entries: ::Array[MetronomeSDK::V1::CreditLedgerEntry],
              starting_balance: MetronomeSDK::Models::V1::CreditGrantListEntriesResponse::Data::Ledger::StartingBalance
            ) -> void

            type ending_balance =
              {
                effective_at: Time,
                excluding_pending: Float,
                including_pending: Float
              }

            class EndingBalance < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor effective_at: Time

              attr_accessor excluding_pending: Float

              attr_accessor including_pending: Float

              def initialize: (
                effective_at: Time,
                excluding_pending: Float,
                including_pending: Float
              ) -> void
            end

            type starting_balance =
              {
                effective_at: Time,
                excluding_pending: Float,
                including_pending: Float
              }

            class StartingBalance < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor effective_at: Time

              attr_accessor excluding_pending: Float

              attr_accessor including_pending: Float

              def initialize: (
                effective_at: Time,
                excluding_pending: Float,
                including_pending: Float
              ) -> void
            end
          end
        end
      end
    end
  end
end
