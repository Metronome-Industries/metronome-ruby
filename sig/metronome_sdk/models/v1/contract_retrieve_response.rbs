module MetronomeSDK
  module Models
    module V1
      type contract_retrieve_response =
        { data: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data }

      class ContractRetrieveResponse < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor data: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data

        def initialize: (
          data: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data
        ) -> void

        def to_hash: -> {
          data: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data
        }

        type data =
          {
            id: String,
            amendments: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment],
            current: MetronomeSDK::ContractWithoutAmendments,
            customer_id: String,
            initial: MetronomeSDK::ContractWithoutAmendments,
            archived_at: Time,
            custom_fields: ::Hash[Symbol, String],
            customer_billing_provider_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration,
            prepaid_balance_threshold_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration,
            scheduled_charges_on_usage_invoices: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices,
            spend_threshold_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration,
            subscriptions: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription],
            uniqueness_key: String
          }

        class Data < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor amendments: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment]

          attr_accessor current: MetronomeSDK::ContractWithoutAmendments

          attr_accessor customer_id: String

          attr_accessor initial: MetronomeSDK::ContractWithoutAmendments

          attr_reader archived_at: Time?

          def archived_at=: (Time) -> Time

          attr_reader custom_fields: ::Hash[Symbol, String]?

          def custom_fields=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader customer_billing_provider_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration?

          def customer_billing_provider_configuration=: (
            MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration
          ) -> MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration

          attr_reader prepaid_balance_threshold_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration?

          def prepaid_balance_threshold_configuration=: (
            MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration
          ) -> MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration

          attr_reader scheduled_charges_on_usage_invoices: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices?

          def scheduled_charges_on_usage_invoices=: (
            MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices
          ) -> MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices

          attr_reader spend_threshold_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration?

          def spend_threshold_configuration=: (
            MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration
          ) -> MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration

          attr_reader subscriptions: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription]?

          def subscriptions=: (
            ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription]
          ) -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription]

          attr_reader uniqueness_key: String?

          def uniqueness_key=: (String) -> String

          def initialize: (
            id: String,
            amendments: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment],
            current: MetronomeSDK::ContractWithoutAmendments,
            customer_id: String,
            initial: MetronomeSDK::ContractWithoutAmendments,
            ?archived_at: Time,
            ?custom_fields: ::Hash[Symbol, String],
            ?customer_billing_provider_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration,
            ?prepaid_balance_threshold_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration,
            ?scheduled_charges_on_usage_invoices: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices,
            ?spend_threshold_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration,
            ?subscriptions: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription],
            ?uniqueness_key: String
          ) -> void

          def to_hash: -> {
            id: String,
            amendments: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment],
            current: MetronomeSDK::ContractWithoutAmendments,
            customer_id: String,
            initial: MetronomeSDK::ContractWithoutAmendments,
            archived_at: Time,
            custom_fields: ::Hash[Symbol, String],
            customer_billing_provider_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration,
            prepaid_balance_threshold_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration,
            scheduled_charges_on_usage_invoices: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices,
            spend_threshold_configuration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration,
            subscriptions: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription],
            uniqueness_key: String
          }

          type amendment =
            {
              id: String,
              commits: ::Array[MetronomeSDK::Commit],
              created_at: Time,
              created_by: String,
              overrides: ::Array[MetronomeSDK::Override],
              scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge],
              starting_at: Time,
              credits: ::Array[MetronomeSDK::Credit],
              discounts: ::Array[MetronomeSDK::Discount],
              netsuite_sales_order_id: String,
              professional_services: ::Array[MetronomeSDK::ProService],
              reseller_royalties: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty],
              salesforce_opportunity_id: String
            }

          class Amendment < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor id: String

            attr_accessor commits: ::Array[MetronomeSDK::Commit]

            attr_accessor created_at: Time

            attr_accessor created_by: String

            attr_accessor overrides: ::Array[MetronomeSDK::Override]

            attr_accessor scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge]

            attr_accessor starting_at: Time

            attr_reader credits: ::Array[MetronomeSDK::Credit]?

            def credits=: (
              ::Array[MetronomeSDK::Credit]
            ) -> ::Array[MetronomeSDK::Credit]

            attr_reader discounts: ::Array[MetronomeSDK::Discount]?

            def discounts=: (
              ::Array[MetronomeSDK::Discount]
            ) -> ::Array[MetronomeSDK::Discount]

            attr_reader netsuite_sales_order_id: String?

            def netsuite_sales_order_id=: (String) -> String

            attr_reader professional_services: ::Array[MetronomeSDK::ProService]?

            def professional_services=: (
              ::Array[MetronomeSDK::ProService]
            ) -> ::Array[MetronomeSDK::ProService]

            attr_reader reseller_royalties: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty]?

            def reseller_royalties=: (
              ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty]
            ) -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty]

            attr_reader salesforce_opportunity_id: String?

            def salesforce_opportunity_id=: (String) -> String

            def initialize: (
              id: String,
              commits: ::Array[MetronomeSDK::Commit],
              created_at: Time,
              created_by: String,
              overrides: ::Array[MetronomeSDK::Override],
              scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge],
              starting_at: Time,
              ?credits: ::Array[MetronomeSDK::Credit],
              ?discounts: ::Array[MetronomeSDK::Discount],
              ?netsuite_sales_order_id: String,
              ?professional_services: ::Array[MetronomeSDK::ProService],
              ?reseller_royalties: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty],
              ?salesforce_opportunity_id: String
            ) -> void

            def to_hash: -> {
              id: String,
              commits: ::Array[MetronomeSDK::Commit],
              created_at: Time,
              created_by: String,
              overrides: ::Array[MetronomeSDK::Override],
              scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge],
              starting_at: Time,
              credits: ::Array[MetronomeSDK::Credit],
              discounts: ::Array[MetronomeSDK::Discount],
              netsuite_sales_order_id: String,
              professional_services: ::Array[MetronomeSDK::ProService],
              reseller_royalties: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty],
              salesforce_opportunity_id: String
            }

            type reseller_royalty =
              {
                reseller_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty::reseller_type,
                aws_account_number: String,
                aws_offer_id: String,
                aws_payer_reference_id: String,
                ending_before: Time?,
                fraction: Float,
                gcp_account_id: String,
                gcp_offer_id: String,
                netsuite_reseller_id: String,
                reseller_contract_value: Float,
                starting_at: Time
              }

            class ResellerRoyalty < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor reseller_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty::reseller_type

              attr_reader aws_account_number: String?

              def aws_account_number=: (String) -> String

              attr_reader aws_offer_id: String?

              def aws_offer_id=: (String) -> String

              attr_reader aws_payer_reference_id: String?

              def aws_payer_reference_id=: (String) -> String

              attr_accessor ending_before: Time?

              attr_reader fraction: Float?

              def fraction=: (Float) -> Float

              attr_reader gcp_account_id: String?

              def gcp_account_id=: (String) -> String

              attr_reader gcp_offer_id: String?

              def gcp_offer_id=: (String) -> String

              attr_reader netsuite_reseller_id: String?

              def netsuite_reseller_id=: (String) -> String

              attr_reader reseller_contract_value: Float?

              def reseller_contract_value=: (Float) -> Float

              attr_reader starting_at: Time?

              def starting_at=: (Time) -> Time

              def initialize: (
                reseller_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty::reseller_type,
                ?aws_account_number: String,
                ?aws_offer_id: String,
                ?aws_payer_reference_id: String,
                ?ending_before: Time?,
                ?fraction: Float,
                ?gcp_account_id: String,
                ?gcp_offer_id: String,
                ?netsuite_reseller_id: String,
                ?reseller_contract_value: Float,
                ?starting_at: Time
              ) -> void

              def to_hash: -> {
                reseller_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty::reseller_type,
                aws_account_number: String,
                aws_offer_id: String,
                aws_payer_reference_id: String,
                ending_before: Time?,
                fraction: Float,
                gcp_account_id: String,
                gcp_offer_id: String,
                netsuite_reseller_id: String,
                reseller_contract_value: Float,
                starting_at: Time
              }

              type reseller_type =
                :AWS | :AWS_PRO_SERVICE | :GCP | :GCP_PRO_SERVICE

              module ResellerType
                extend MetronomeSDK::Internal::Type::Enum

                AWS: :AWS
                AWS_PRO_SERVICE: :AWS_PRO_SERVICE
                GCP: :GCP
                GCP_PRO_SERVICE: :GCP_PRO_SERVICE

                def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Amendment::ResellerRoyalty::reseller_type]
              end
            end
          end

          type customer_billing_provider_configuration =
            {
              billing_provider: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider,
              delivery_method: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method,
              id: String,
              configuration: ::Hash[Symbol, top]
            }

          class CustomerBillingProviderConfiguration < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor billing_provider: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider

            attr_accessor delivery_method: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method

            attr_reader id: String?

            def id=: (String) -> String

            attr_reader configuration: ::Hash[Symbol, top]?

            def configuration=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

            def initialize: (
              billing_provider: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider,
              delivery_method: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method,
              ?id: String,
              ?configuration: ::Hash[Symbol, top]
            ) -> void

            def to_hash: -> {
              billing_provider: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider,
              delivery_method: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method,
              id: String,
              configuration: ::Hash[Symbol, top]
            }

            type billing_provider =
              :aws_marketplace
              | :stripe
              | :netsuite
              | :custom
              | :azure_marketplace
              | :quickbooks_online
              | :workday
              | :gcp_marketplace

            module BillingProvider
              extend MetronomeSDK::Internal::Type::Enum

              AWS_MARKETPLACE: :aws_marketplace
              STRIPE: :stripe
              NETSUITE: :netsuite
              CUSTOM: :custom
              AZURE_MARKETPLACE: :azure_marketplace
              QUICKBOOKS_ONLINE: :quickbooks_online
              WORKDAY: :workday
              GCP_MARKETPLACE: :gcp_marketplace

              def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::billing_provider]
            end

            type delivery_method =
              :direct_to_billing_provider | :aws_sqs | :tackle | :aws_sns

            module DeliveryMethod
              extend MetronomeSDK::Internal::Type::Enum

              DIRECT_TO_BILLING_PROVIDER: :direct_to_billing_provider
              AWS_SQS: :aws_sqs
              TACKLE: :tackle
              AWS_SNS: :aws_sns

              def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::CustomerBillingProviderConfiguration::delivery_method]
            end
          end

          type prepaid_balance_threshold_configuration =
            {
              commit: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig,
              recharge_to_amount: Float,
              threshold_amount: Float
            }

          class PrepaidBalanceThresholdConfiguration < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor commit: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit

            attr_accessor is_enabled: bool

            attr_accessor payment_gate_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig

            attr_accessor recharge_to_amount: Float

            attr_accessor threshold_amount: Float

            def initialize: (
              commit: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig,
              recharge_to_amount: Float,
              threshold_amount: Float
            ) -> void

            def to_hash: -> {
              commit: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig,
              recharge_to_amount: Float,
              threshold_amount: Float
            }

            type commit =
              {
                product_id: String,
                applicable_product_ids: ::Array[String],
                applicable_product_tags: ::Array[String],
                description: String,
                name: String,
                specifiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]
              }

            class Commit < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor product_id: String

              attr_reader applicable_product_ids: ::Array[String]?

              def applicable_product_ids=: (::Array[String]) -> ::Array[String]

              attr_reader applicable_product_tags: ::Array[String]?

              def applicable_product_tags=: (::Array[String]) -> ::Array[String]

              attr_reader description: String?

              def description=: (String) -> String

              attr_reader name: String?

              def name=: (String) -> String

              attr_reader specifiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]?

              def specifiers=: (
                ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]
              ) -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]

              def initialize: (
                product_id: String,
                ?applicable_product_ids: ::Array[String],
                ?applicable_product_tags: ::Array[String],
                ?description: String,
                ?name: String,
                ?specifiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]
              ) -> void

              def to_hash: -> {
                product_id: String,
                applicable_product_ids: ::Array[String],
                applicable_product_tags: ::Array[String],
                description: String,
                name: String,
                specifiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::Commit::Specifier]
              }

              type specifier =
                {
                  presentation_group_values: ::Hash[Symbol, String],
                  pricing_group_values: ::Hash[Symbol, String],
                  product_id: String,
                  product_tags: ::Array[String]
                }

              class Specifier < MetronomeSDK::Internal::Type::BaseModel
                attr_reader presentation_group_values: ::Hash[Symbol, String]?

                def presentation_group_values=: (
                  ::Hash[Symbol, String]
                ) -> ::Hash[Symbol, String]

                attr_reader pricing_group_values: ::Hash[Symbol, String]?

                def pricing_group_values=: (
                  ::Hash[Symbol, String]
                ) -> ::Hash[Symbol, String]

                attr_reader product_id: String?

                def product_id=: (String) -> String

                attr_reader product_tags: ::Array[String]?

                def product_tags=: (::Array[String]) -> ::Array[String]

                def initialize: (
                  ?presentation_group_values: ::Hash[Symbol, String],
                  ?pricing_group_values: ::Hash[Symbol, String],
                  ?product_id: String,
                  ?product_tags: ::Array[String]
                ) -> void

                def to_hash: -> {
                  presentation_group_values: ::Hash[Symbol, String],
                  pricing_group_values: ::Hash[Symbol, String],
                  product_id: String,
                  product_tags: ::Array[String]
                }
              end
            end

            type payment_gate_config =
              {
                payment_gate_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                stripe_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type
              }

            class PaymentGateConfig < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor payment_gate_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type

              attr_reader stripe_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig?

              def stripe_config=: (
                MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig
              ) -> MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig

              attr_reader tax_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type?

              def tax_type=: (
                MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type

              def initialize: (
                payment_gate_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                ?stripe_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig,
                ?tax_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> void

              def to_hash: -> {
                payment_gate_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                stripe_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type
              }

              type payment_gate_type = :NONE | :STRIPE | :EXTERNAL

              module PaymentGateType
                extend MetronomeSDK::Internal::Type::Enum

                NONE: :NONE
                STRIPE: :STRIPE
                EXTERNAL: :EXTERNAL

                def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::payment_gate_type]
              end

              type stripe_config =
                {
                  payment_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
                }

              class StripeConfig < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor payment_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type

                def initialize: (
                  payment_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
                ) -> void

                def to_hash: -> {
                  payment_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
                }

                type payment_type = :INVOICE | :PAYMENT_INTENT

                module PaymentType
                  extend MetronomeSDK::Internal::Type::Enum

                  INVOICE: :INVOICE
                  PAYMENT_INTENT: :PAYMENT_INTENT

                  def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type]
                end
              end

              type tax_type = :NONE | :STRIPE

              module TaxType
                extend MetronomeSDK::Internal::Type::Enum

                NONE: :NONE
                STRIPE: :STRIPE

                def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::PrepaidBalanceThresholdConfiguration::PaymentGateConfig::tax_type]
              end
            end
          end

          type scheduled_charges_on_usage_invoices = :ALL

          module ScheduledChargesOnUsageInvoices
            extend MetronomeSDK::Internal::Type::Enum

            ALL: :ALL

            def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::scheduled_charges_on_usage_invoices]
          end

          type spend_threshold_configuration =
            {
              commit: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig,
              threshold_amount: Float
            }

          class SpendThresholdConfiguration < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor commit: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::Commit

            attr_accessor is_enabled: bool

            attr_accessor payment_gate_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig

            attr_accessor threshold_amount: Float

            def initialize: (
              commit: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig,
              threshold_amount: Float
            ) -> void

            def to_hash: -> {
              commit: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::Commit,
              is_enabled: bool,
              payment_gate_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig,
              threshold_amount: Float
            }

            type commit =
              { product_id: String, description: String, name: String }

            class Commit < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor product_id: String

              attr_reader description: String?

              def description=: (String) -> String

              attr_reader name: String?

              def name=: (String) -> String

              def initialize: (
                product_id: String,
                ?description: String,
                ?name: String
              ) -> void

              def to_hash: -> {
                product_id: String,
                description: String,
                name: String
              }
            end

            type payment_gate_config =
              {
                payment_gate_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                stripe_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type
              }

            class PaymentGateConfig < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor payment_gate_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type

              attr_reader stripe_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig?

              def stripe_config=: (
                MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig
              ) -> MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig

              attr_reader tax_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type?

              def tax_type=: (
                MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type

              def initialize: (
                payment_gate_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                ?stripe_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
                ?tax_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type
              ) -> void

              def to_hash: -> {
                payment_gate_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type,
                stripe_config: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig,
                tax_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type
              }

              type payment_gate_type = :NONE | :STRIPE | :EXTERNAL

              module PaymentGateType
                extend MetronomeSDK::Internal::Type::Enum

                NONE: :NONE
                STRIPE: :STRIPE
                EXTERNAL: :EXTERNAL

                def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::payment_gate_type]
              end

              type stripe_config =
                {
                  payment_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
                }

              class StripeConfig < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor payment_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type

                def initialize: (
                  payment_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
                ) -> void

                def to_hash: -> {
                  payment_type: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type
                }

                type payment_type = :INVOICE | :PAYMENT_INTENT

                module PaymentType
                  extend MetronomeSDK::Internal::Type::Enum

                  INVOICE: :INVOICE
                  PAYMENT_INTENT: :PAYMENT_INTENT

                  def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::StripeConfig::payment_type]
                end
              end

              type tax_type = :NONE | :STRIPE

              module TaxType
                extend MetronomeSDK::Internal::Type::Enum

                NONE: :NONE
                STRIPE: :STRIPE

                def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::SpendThresholdConfiguration::PaymentGateConfig::tax_type]
              end
            end
          end

          type subscription =
            {
              collection_schedule: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::collection_schedule,
              proration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::Proration,
              quantity_schedule: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::QuantitySchedule],
              starting_at: Time,
              subscription_rate: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate,
              id: String,
              custom_fields: ::Hash[Symbol, String],
              description: String,
              ending_before: Time,
              fiat_credit_type_id: String,
              name: String
            }

          class Subscription < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor collection_schedule: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::collection_schedule

            attr_accessor proration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::Proration

            attr_accessor quantity_schedule: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::QuantitySchedule]

            attr_accessor starting_at: Time

            attr_accessor subscription_rate: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate

            attr_reader id: String?

            def id=: (String) -> String

            attr_reader custom_fields: ::Hash[Symbol, String]?

            def custom_fields=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader description: String?

            def description=: (String) -> String

            attr_reader ending_before: Time?

            def ending_before=: (Time) -> Time

            attr_reader fiat_credit_type_id: String?

            def fiat_credit_type_id=: (String) -> String

            attr_reader name: String?

            def name=: (String) -> String

            def initialize: (
              collection_schedule: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::collection_schedule,
              proration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::Proration,
              quantity_schedule: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::QuantitySchedule],
              starting_at: Time,
              subscription_rate: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate,
              ?id: String,
              ?custom_fields: ::Hash[Symbol, String],
              ?description: String,
              ?ending_before: Time,
              ?fiat_credit_type_id: String,
              ?name: String
            ) -> void

            def to_hash: -> {
              collection_schedule: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::collection_schedule,
              proration: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::Proration,
              quantity_schedule: ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::QuantitySchedule],
              starting_at: Time,
              subscription_rate: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate,
              id: String,
              custom_fields: ::Hash[Symbol, String],
              description: String,
              ending_before: Time,
              fiat_credit_type_id: String,
              name: String
            }

            type collection_schedule = :ADVANCE | :ARREARS

            module CollectionSchedule
              extend MetronomeSDK::Internal::Type::Enum

              ADVANCE: :ADVANCE
              ARREARS: :ARREARS

              def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::collection_schedule]
            end

            type proration =
              {
                invoice_behavior: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior,
                is_prorated: bool
              }

            class Proration < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor invoice_behavior: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior

              attr_accessor is_prorated: bool

              def initialize: (
                invoice_behavior: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior,
                is_prorated: bool
              ) -> void

              def to_hash: -> {
                invoice_behavior: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior,
                is_prorated: bool
              }

              type invoice_behavior =
                :BILL_IMMEDIATELY | :BILL_ON_NEXT_COLLECTION_DATE

              module InvoiceBehavior
                extend MetronomeSDK::Internal::Type::Enum

                BILL_IMMEDIATELY: :BILL_IMMEDIATELY
                BILL_ON_NEXT_COLLECTION_DATE: :BILL_ON_NEXT_COLLECTION_DATE

                def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::Proration::invoice_behavior]
              end
            end

            type quantity_schedule =
              { quantity: Float, starting_at: Time, ending_before: Time }

            class QuantitySchedule < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor quantity: Float

              attr_accessor starting_at: Time

              attr_reader ending_before: Time?

              def ending_before=: (Time) -> Time

              def initialize: (
                quantity: Float,
                starting_at: Time,
                ?ending_before: Time
              ) -> void

              def to_hash: -> {
                quantity: Float,
                starting_at: Time,
                ending_before: Time
              }
            end

            type subscription_rate =
              {
                billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency,
                product: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::Product
              }

            class SubscriptionRate < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency

              attr_accessor product: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::Product

              def initialize: (
                billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency,
                product: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::Product
              ) -> void

              def to_hash: -> {
                billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency,
                product: MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::Product
              }

              type billing_frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

              module BillingFrequency
                extend MetronomeSDK::Internal::Type::Enum

                MONTHLY: :MONTHLY
                QUARTERLY: :QUARTERLY
                ANNUAL: :ANNUAL
                WEEKLY: :WEEKLY

                def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveResponse::Data::Subscription::SubscriptionRate::billing_frequency]
              end

              type product = { id: String, name: String }

              class Product < MetronomeSDK::Internal::Type::BaseModel
                attr_accessor id: String

                attr_accessor name: String

                def initialize: (id: String, name: String) -> void

                def to_hash: -> { id: String, name: String }
              end
            end
          end
        end
      end
    end
  end
end
