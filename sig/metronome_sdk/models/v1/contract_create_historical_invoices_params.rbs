module MetronomeSDK
  module Models
    module V1
      type contract_create_historical_invoices_params =
        {
          invoices: ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice],
          preview: bool
        }
        & MetronomeSDK::Internal::Type::request_parameters

      class ContractCreateHistoricalInvoicesParams < MetronomeSDK::Internal::Type::BaseModel
        extend MetronomeSDK::Internal::Type::RequestParameters::Converter
        include MetronomeSDK::Internal::Type::RequestParameters

        attr_accessor invoices: ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice]

        attr_accessor preview: bool

        def initialize: (
          invoices: ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice],
          preview: bool,
          ?request_options: MetronomeSDK::request_opts
        ) -> void

        def to_hash: -> MetronomeSDK::Models::V1::contract_create_historical_invoices_params

        type invoice =
          {
            contract_id: String,
            credit_type_id: String,
            customer_id: String,
            exclusive_end_date: Time,
            inclusive_start_date: Time,
            issue_date: Time,
            usage_line_items: ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::UsageLineItem],
            billable_status: MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::billable_status,
            breakdown_granularity: MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::breakdown_granularity,
            custom_fields: ::Hash[Symbol, String]
          }

        class Invoice < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor contract_id: String

          attr_accessor credit_type_id: String

          attr_accessor customer_id: String

          attr_accessor exclusive_end_date: Time

          attr_accessor inclusive_start_date: Time

          attr_accessor issue_date: Time

          attr_accessor usage_line_items: ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::UsageLineItem]

          attr_reader billable_status: MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::billable_status?

          def billable_status=: (
            MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::billable_status
          ) -> MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::billable_status

          attr_reader breakdown_granularity: MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::breakdown_granularity?

          def breakdown_granularity=: (
            MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::breakdown_granularity
          ) -> MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::breakdown_granularity

          attr_reader custom_fields: ::Hash[Symbol, String]?

          def custom_fields=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          def initialize: (
            contract_id: String,
            credit_type_id: String,
            customer_id: String,
            exclusive_end_date: Time,
            inclusive_start_date: Time,
            issue_date: Time,
            usage_line_items: ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::UsageLineItem],
            ?billable_status: MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::billable_status,
            ?breakdown_granularity: MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::breakdown_granularity,
            ?custom_fields: ::Hash[Symbol, String]
          ) -> void

          def to_hash: -> MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::invoice

          type usage_line_item =
            {
              exclusive_end_date: Time,
              inclusive_start_date: Time,
              product_id: String,
              presentation_group_values: ::Hash[Symbol, String],
              pricing_group_values: ::Hash[Symbol, String],
              quantity: Float,
              subtotals_with_quantity: ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::UsageLineItem::SubtotalsWithQuantity]
            }

          class UsageLineItem < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor exclusive_end_date: Time

            attr_accessor inclusive_start_date: Time

            attr_accessor product_id: String

            attr_reader presentation_group_values: ::Hash[Symbol, String]?

            def presentation_group_values=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader pricing_group_values: ::Hash[Symbol, String]?

            def pricing_group_values=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader quantity: Float?

            def quantity=: (Float) -> Float

            attr_reader subtotals_with_quantity: ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::UsageLineItem::SubtotalsWithQuantity]?

            def subtotals_with_quantity=: (
              ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::UsageLineItem::SubtotalsWithQuantity]
            ) -> ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::UsageLineItem::SubtotalsWithQuantity]

            def initialize: (
              exclusive_end_date: Time,
              inclusive_start_date: Time,
              product_id: String,
              ?presentation_group_values: ::Hash[Symbol, String],
              ?pricing_group_values: ::Hash[Symbol, String],
              ?quantity: Float,
              ?subtotals_with_quantity: ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::UsageLineItem::SubtotalsWithQuantity]
            ) -> void

            def to_hash: -> MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::usage_line_item

            type subtotals_with_quantity =
              {
                exclusive_end_date: Time,
                inclusive_start_date: Time,
                quantity: Float
              }

            class SubtotalsWithQuantity < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor exclusive_end_date: Time

              attr_accessor inclusive_start_date: Time

              attr_accessor quantity: Float

              def initialize: (
                exclusive_end_date: Time,
                inclusive_start_date: Time,
                quantity: Float
              ) -> void

              def to_hash: -> MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::UsageLineItem::subtotals_with_quantity
            end
          end

          type billable_status = :billable | :unbillable

          module BillableStatus
            extend MetronomeSDK::Internal::Type::Enum

            BILLABLE: :billable
            UNBILLABLE: :unbillable

            def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::billable_status]
          end

          type breakdown_granularity = :HOUR | :DAY

          module BreakdownGranularity
            extend MetronomeSDK::Internal::Type::Enum

            HOUR: :HOUR
            DAY: :DAY

            def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesParams::Invoice::breakdown_granularity]
          end
        end
      end
    end
  end
end
