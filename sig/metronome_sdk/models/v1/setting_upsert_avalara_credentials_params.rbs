module MetronomeSDK
  module Models
    module V1
      type setting_upsert_avalara_credentials_params =
        {
          avalara_environment: MetronomeSDK::Models::V1::SettingUpsertAvalaraCredentialsParams::avalara_environment,
          avalara_password: String,
          avalara_username: String,
          delivery_method_ids: ::Array[String]
        }
        & MetronomeSDK::Internal::Type::request_parameters

      class SettingUpsertAvalaraCredentialsParams < MetronomeSDK::Internal::Type::BaseModel
        extend MetronomeSDK::Internal::Type::RequestParameters::Converter
        include MetronomeSDK::Internal::Type::RequestParameters

        attr_accessor avalara_environment: MetronomeSDK::Models::V1::SettingUpsertAvalaraCredentialsParams::avalara_environment

        attr_accessor avalara_password: String

        attr_accessor avalara_username: String

        attr_accessor delivery_method_ids: ::Array[String]

        def initialize: (
          avalara_environment: MetronomeSDK::Models::V1::SettingUpsertAvalaraCredentialsParams::avalara_environment,
          avalara_password: String,
          avalara_username: String,
          delivery_method_ids: ::Array[String],
          ?request_options: MetronomeSDK::request_opts
        ) -> void

        def to_hash: -> {
          avalara_environment: MetronomeSDK::Models::V1::SettingUpsertAvalaraCredentialsParams::avalara_environment,
          avalara_password: String,
          avalara_username: String,
          delivery_method_ids: ::Array[String],
          request_options: MetronomeSDK::RequestOptions
        }

        type avalara_environment = :PRODUCTION | :SANDBOX

        module AvalaraEnvironment
          extend MetronomeSDK::Internal::Type::Enum

          PRODUCTION: :PRODUCTION
          SANDBOX: :SANDBOX

          def self?.values: -> ::Array[MetronomeSDK::Models::V1::SettingUpsertAvalaraCredentialsParams::avalara_environment]
        end
      end
    end
  end
end
