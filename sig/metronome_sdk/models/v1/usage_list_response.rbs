module MetronomeSDK
  module Models
    module V1
      type usage_list_response =
        {
          billable_metric_id: String,
          billable_metric_name: String,
          customer_id: String,
          end_timestamp: Time,
          start_timestamp: Time,
          value: Float?,
          groups: ::Hash[Symbol, Float?]
        }

      class UsageListResponse < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor billable_metric_id: String

        attr_accessor billable_metric_name: String

        attr_accessor customer_id: String

        attr_accessor end_timestamp: Time

        attr_accessor start_timestamp: Time

        attr_accessor value: Float?

        attr_reader groups: ::Hash[Symbol, Float?]?

        def groups=: (::Hash[Symbol, Float?]) -> ::Hash[Symbol, Float?]

        def initialize: (
          billable_metric_id: String,
          billable_metric_name: String,
          customer_id: String,
          end_timestamp: Time,
          start_timestamp: Time,
          value: Float?,
          ?groups: ::Hash[Symbol, Float?]
        ) -> void

        def to_hash: -> {
          billable_metric_id: String,
          billable_metric_name: String,
          customer_id: String,
          end_timestamp: Time,
          start_timestamp: Time,
          value: Float?,
          groups: ::Hash[Symbol, Float?]
        }
      end
    end
  end
end
