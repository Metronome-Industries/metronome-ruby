module MetronomeSDK
  module Models
    module V1
      type contract_retrieve_rate_schedule_params =
        {
          contract_id: String,
          customer_id: String,
          limit: Integer,
          next_page: String,
          at: Time,
          selectors: ::Array[MetronomeSDK::V1::ContractRetrieveRateScheduleParams::Selector]
        }
        & MetronomeSDK::Internal::Type::request_parameters

      class ContractRetrieveRateScheduleParams < MetronomeSDK::Internal::Type::BaseModel
        extend MetronomeSDK::Internal::Type::RequestParameters::Converter
        include MetronomeSDK::Internal::Type::RequestParameters

        attr_accessor contract_id: String

        attr_accessor customer_id: String

        attr_reader limit: Integer?

        def limit=: (Integer) -> Integer

        attr_reader next_page: String?

        def next_page=: (String) -> String

        attr_reader at: Time?

        def at=: (Time) -> Time

        attr_reader selectors: ::Array[MetronomeSDK::V1::ContractRetrieveRateScheduleParams::Selector]?

        def selectors=: (
          ::Array[MetronomeSDK::V1::ContractRetrieveRateScheduleParams::Selector]
        ) -> ::Array[MetronomeSDK::V1::ContractRetrieveRateScheduleParams::Selector]

        def initialize: (
          contract_id: String,
          customer_id: String,
          ?limit: Integer,
          ?next_page: String,
          ?at: Time,
          ?selectors: ::Array[MetronomeSDK::V1::ContractRetrieveRateScheduleParams::Selector],
          ?request_options: MetronomeSDK::request_opts
        ) -> void

        def to_hash: -> {
          contract_id: String,
          customer_id: String,
          limit: Integer,
          next_page: String,
          at: Time,
          selectors: ::Array[MetronomeSDK::V1::ContractRetrieveRateScheduleParams::Selector],
          request_options: MetronomeSDK::RequestOptions
        }

        type selector =
          {
            billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleParams::Selector::billing_frequency,
            partial_pricing_group_values: ::Hash[Symbol, String],
            pricing_group_values: ::Hash[Symbol, String],
            product_id: String,
            product_tags: ::Array[String]
          }

        class Selector < MetronomeSDK::Internal::Type::BaseModel
          attr_reader billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleParams::Selector::billing_frequency?

          def billing_frequency=: (
            MetronomeSDK::Models::V1::ContractRetrieveRateScheduleParams::Selector::billing_frequency
          ) -> MetronomeSDK::Models::V1::ContractRetrieveRateScheduleParams::Selector::billing_frequency

          attr_reader partial_pricing_group_values: ::Hash[Symbol, String]?

          def partial_pricing_group_values=: (
            ::Hash[Symbol, String]
          ) -> ::Hash[Symbol, String]

          attr_reader pricing_group_values: ::Hash[Symbol, String]?

          def pricing_group_values=: (
            ::Hash[Symbol, String]
          ) -> ::Hash[Symbol, String]

          attr_reader product_id: String?

          def product_id=: (String) -> String

          attr_reader product_tags: ::Array[String]?

          def product_tags=: (::Array[String]) -> ::Array[String]

          def initialize: (
            ?billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleParams::Selector::billing_frequency,
            ?partial_pricing_group_values: ::Hash[Symbol, String],
            ?pricing_group_values: ::Hash[Symbol, String],
            ?product_id: String,
            ?product_tags: ::Array[String]
          ) -> void

          def to_hash: -> {
            billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleParams::Selector::billing_frequency,
            partial_pricing_group_values: ::Hash[Symbol, String],
            pricing_group_values: ::Hash[Symbol, String],
            product_id: String,
            product_tags: ::Array[String]
          }

          type billing_frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

          module BillingFrequency
            extend MetronomeSDK::Internal::Type::Enum

            MONTHLY: :MONTHLY
            QUARTERLY: :QUARTERLY
            ANNUAL: :ANNUAL
            WEEKLY: :WEEKLY

            def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleParams::Selector::billing_frequency]
          end
        end
      end
    end
  end
end
