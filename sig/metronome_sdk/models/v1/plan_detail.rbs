module MetronomeSDK
  module Models
    module V1
      type plan_detail =
        {
          id: String,
          custom_fields: ::Hash[Symbol, String],
          name: String,
          credit_grants: ::Array[MetronomeSDK::V1::PlanDetail::CreditGrant],
          description: String,
          minimums: ::Array[MetronomeSDK::V1::PlanDetail::Minimum],
          overage_rates: ::Array[MetronomeSDK::V1::PlanDetail::OverageRate]
        }

      class PlanDetail < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor custom_fields: ::Hash[Symbol, String]

        attr_accessor name: String

        attr_reader credit_grants: ::Array[MetronomeSDK::V1::PlanDetail::CreditGrant]?

        def credit_grants=: (
          ::Array[MetronomeSDK::V1::PlanDetail::CreditGrant]
        ) -> ::Array[MetronomeSDK::V1::PlanDetail::CreditGrant]

        attr_reader description: String?

        def description=: (String) -> String

        attr_reader minimums: ::Array[MetronomeSDK::V1::PlanDetail::Minimum]?

        def minimums=: (
          ::Array[MetronomeSDK::V1::PlanDetail::Minimum]
        ) -> ::Array[MetronomeSDK::V1::PlanDetail::Minimum]

        attr_reader overage_rates: ::Array[MetronomeSDK::V1::PlanDetail::OverageRate]?

        def overage_rates=: (
          ::Array[MetronomeSDK::V1::PlanDetail::OverageRate]
        ) -> ::Array[MetronomeSDK::V1::PlanDetail::OverageRate]

        def initialize: (
          id: String,
          custom_fields: ::Hash[Symbol, String],
          name: String,
          ?credit_grants: ::Array[MetronomeSDK::V1::PlanDetail::CreditGrant],
          ?description: String,
          ?minimums: ::Array[MetronomeSDK::V1::PlanDetail::Minimum],
          ?overage_rates: ::Array[MetronomeSDK::V1::PlanDetail::OverageRate]
        ) -> void

        type credit_grant =
          {
            amount_granted: Float,
            amount_granted_credit_type: MetronomeSDK::CreditTypeData,
            amount_paid: Float,
            amount_paid_credit_type: MetronomeSDK::CreditTypeData,
            effective_duration: Float,
            name: String,
            priority: String,
            send_invoice: bool,
            reason: String,
            recurrence_duration: Float,
            recurrence_interval: Float
          }

        class CreditGrant < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor amount_granted: Float

          attr_accessor amount_granted_credit_type: MetronomeSDK::CreditTypeData

          attr_accessor amount_paid: Float

          attr_accessor amount_paid_credit_type: MetronomeSDK::CreditTypeData

          attr_accessor effective_duration: Float

          attr_accessor name: String

          attr_accessor priority: String

          attr_accessor send_invoice: bool

          attr_reader reason: String?

          def reason=: (String) -> String

          attr_reader recurrence_duration: Float?

          def recurrence_duration=: (Float) -> Float

          attr_reader recurrence_interval: Float?

          def recurrence_interval=: (Float) -> Float

          def initialize: (
            amount_granted: Float,
            amount_granted_credit_type: MetronomeSDK::CreditTypeData,
            amount_paid: Float,
            amount_paid_credit_type: MetronomeSDK::CreditTypeData,
            effective_duration: Float,
            name: String,
            priority: String,
            send_invoice: bool,
            ?reason: String,
            ?recurrence_duration: Float,
            ?recurrence_interval: Float
          ) -> void
        end

        type minimum =
          {
            credit_type: MetronomeSDK::CreditTypeData,
            name: String,
            start_period: Float,
            value: Float
          }

        class Minimum < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor credit_type: MetronomeSDK::CreditTypeData

          attr_accessor name: String

          attr_accessor start_period: Float

          attr_accessor value: Float

          def initialize: (
            credit_type: MetronomeSDK::CreditTypeData,
            name: String,
            start_period: Float,
            value: Float
          ) -> void
        end

        type overage_rate =
          {
            credit_type: MetronomeSDK::CreditTypeData,
            fiat_credit_type: MetronomeSDK::CreditTypeData,
            start_period: Float,
            to_fiat_conversion_factor: Float
          }

        class OverageRate < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor credit_type: MetronomeSDK::CreditTypeData

          attr_accessor fiat_credit_type: MetronomeSDK::CreditTypeData

          attr_accessor start_period: Float

          attr_accessor to_fiat_conversion_factor: Float

          def initialize: (
            credit_type: MetronomeSDK::CreditTypeData,
            fiat_credit_type: MetronomeSDK::CreditTypeData,
            start_period: Float,
            to_fiat_conversion_factor: Float
          ) -> void
        end
      end
    end
  end
end
