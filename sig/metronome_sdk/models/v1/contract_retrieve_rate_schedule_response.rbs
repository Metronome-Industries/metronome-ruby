module MetronomeSDK
  module Models
    module V1
      type contract_retrieve_rate_schedule_response =
        {
          data: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data],
          next_page: String?
        }

      class ContractRetrieveRateScheduleResponse < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor data: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data]

        attr_accessor next_page: String?

        def initialize: (
          data: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data],
          ?next_page: String?
        ) -> void

        type data =
          {
            entitled: bool,
            list_rate: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate,
            product_custom_fields: ::Hash[Symbol, String],
            product_id: String,
            product_name: String,
            product_tags: ::Array[String],
            rate_card_id: String,
            starting_at: Time,
            commit_rate: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate,
            ending_before: Time,
            override_rate: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate,
            pricing_group_values: ::Hash[Symbol, String]
          }

        class Data < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor entitled: bool

          attr_accessor list_rate: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate

          attr_accessor product_custom_fields: ::Hash[Symbol, String]

          attr_accessor product_id: String

          attr_accessor product_name: String

          attr_accessor product_tags: ::Array[String]

          attr_accessor rate_card_id: String

          attr_accessor starting_at: Time

          attr_reader commit_rate: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate?

          def commit_rate=: (
            MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate
          ) -> MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate

          attr_reader ending_before: Time?

          def ending_before=: (Time) -> Time

          attr_reader override_rate: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate?

          def override_rate=: (
            MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate
          ) -> MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate

          attr_reader pricing_group_values: ::Hash[Symbol, String]?

          def pricing_group_values=: (
            ::Hash[Symbol, String]
          ) -> ::Hash[Symbol, String]

          def initialize: (
            entitled: bool,
            list_rate: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate,
            product_custom_fields: ::Hash[Symbol, String],
            product_id: String,
            product_name: String,
            product_tags: ::Array[String],
            rate_card_id: String,
            starting_at: Time,
            ?commit_rate: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate,
            ?ending_before: Time,
            ?override_rate: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate,
            ?pricing_group_values: ::Hash[Symbol, String]
          ) -> void

          type list_rate =
            {
              rate_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::rate_type,
              credit_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::CreditType,
              custom_rate: ::Hash[Symbol, top],
              is_prorated: bool,
              price: Float,
              pricing_group_values: ::Hash[Symbol, String],
              quantity: Float,
              tiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::Tier],
              use_list_prices: bool
            }

          class ListRate < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor rate_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::rate_type

            attr_reader credit_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::CreditType?

            def credit_type=: (
              MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::CreditType
            ) -> MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::CreditType

            attr_reader custom_rate: ::Hash[Symbol, top]?

            def custom_rate=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

            attr_reader is_prorated: bool?

            def is_prorated=: (bool) -> bool

            attr_reader price: Float?

            def price=: (Float) -> Float

            attr_reader pricing_group_values: ::Hash[Symbol, String]?

            def pricing_group_values=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader quantity: Float?

            def quantity=: (Float) -> Float

            attr_reader tiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::Tier]?

            def tiers=: (
              ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::Tier]
            ) -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::Tier]

            attr_reader use_list_prices: bool?

            def use_list_prices=: (bool) -> bool

            def initialize: (
              rate_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::rate_type,
              ?credit_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::CreditType,
              ?custom_rate: ::Hash[Symbol, top],
              ?is_prorated: bool,
              ?price: Float,
              ?pricing_group_values: ::Hash[Symbol, String],
              ?quantity: Float,
              ?tiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::Tier],
              ?use_list_prices: bool
            ) -> void

            type rate_type =
              :FLAT | :PERCENTAGE | :SUBSCRIPTION | :CUSTOM | :TIERED

            module RateType
              extend MetronomeSDK::Internal::Type::Enum

              FLAT: :FLAT
              PERCENTAGE: :PERCENTAGE
              SUBSCRIPTION: :SUBSCRIPTION
              CUSTOM: :CUSTOM
              TIERED: :TIERED

              def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::ListRate::rate_type]
            end

            type credit_type = { id: String, name: String }

            class CreditType < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              attr_accessor name: String

              def initialize: (id: String, name: String) -> void
            end

            type tier = { price: Float, size: Float }

            class Tier < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor price: Float

              attr_reader size: Float?

              def size=: (Float) -> Float

              def initialize: (price: Float, ?size: Float) -> void
            end
          end

          type commit_rate =
            {
              rate_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate::rate_type,
              price: Float,
              tiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate::Tier]
            }

          class CommitRate < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor rate_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate::rate_type

            attr_reader price: Float?

            def price=: (Float) -> Float

            attr_reader tiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate::Tier]?

            def tiers=: (
              ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate::Tier]
            ) -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate::Tier]

            def initialize: (
              rate_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate::rate_type,
              ?price: Float,
              ?tiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate::Tier]
            ) -> void

            type rate_type =
              :FLAT | :PERCENTAGE | :SUBSCRIPTION | :TIERED | :CUSTOM

            module RateType
              extend MetronomeSDK::Internal::Type::Enum

              FLAT: :FLAT
              PERCENTAGE: :PERCENTAGE
              SUBSCRIPTION: :SUBSCRIPTION
              TIERED: :TIERED
              CUSTOM: :CUSTOM

              def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::CommitRate::rate_type]
            end

            type tier = { price: Float, size: Float }

            class Tier < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor price: Float

              attr_reader size: Float?

              def size=: (Float) -> Float

              def initialize: (price: Float, ?size: Float) -> void
            end
          end

          type override_rate =
            {
              rate_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::rate_type,
              credit_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::CreditType,
              custom_rate: ::Hash[Symbol, top],
              is_prorated: bool,
              price: Float,
              pricing_group_values: ::Hash[Symbol, String],
              quantity: Float,
              tiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::Tier],
              use_list_prices: bool
            }

          class OverrideRate < MetronomeSDK::Internal::Type::BaseModel
            attr_accessor rate_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::rate_type

            attr_reader credit_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::CreditType?

            def credit_type=: (
              MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::CreditType
            ) -> MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::CreditType

            attr_reader custom_rate: ::Hash[Symbol, top]?

            def custom_rate=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

            attr_reader is_prorated: bool?

            def is_prorated=: (bool) -> bool

            attr_reader price: Float?

            def price=: (Float) -> Float

            attr_reader pricing_group_values: ::Hash[Symbol, String]?

            def pricing_group_values=: (
              ::Hash[Symbol, String]
            ) -> ::Hash[Symbol, String]

            attr_reader quantity: Float?

            def quantity=: (Float) -> Float

            attr_reader tiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::Tier]?

            def tiers=: (
              ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::Tier]
            ) -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::Tier]

            attr_reader use_list_prices: bool?

            def use_list_prices=: (bool) -> bool

            def initialize: (
              rate_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::rate_type,
              ?credit_type: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::CreditType,
              ?custom_rate: ::Hash[Symbol, top],
              ?is_prorated: bool,
              ?price: Float,
              ?pricing_group_values: ::Hash[Symbol, String],
              ?quantity: Float,
              ?tiers: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::Tier],
              ?use_list_prices: bool
            ) -> void

            type rate_type =
              :FLAT | :PERCENTAGE | :SUBSCRIPTION | :CUSTOM | :TIERED

            module RateType
              extend MetronomeSDK::Internal::Type::Enum

              FLAT: :FLAT
              PERCENTAGE: :PERCENTAGE
              SUBSCRIPTION: :SUBSCRIPTION
              CUSTOM: :CUSTOM
              TIERED: :TIERED

              def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::OverrideRate::rate_type]
            end

            type credit_type = { id: String, name: String }

            class CreditType < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor id: String

              attr_accessor name: String

              def initialize: (id: String, name: String) -> void
            end

            type tier = { price: Float, size: Float }

            class Tier < MetronomeSDK::Internal::Type::BaseModel
              attr_accessor price: Float

              attr_reader size: Float?

              def size=: (Float) -> Float

              def initialize: (price: Float, ?size: Float) -> void
            end
          end
        end
      end
    end
  end
end
