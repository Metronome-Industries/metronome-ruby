module MetronomeSDK
  module Models
    module V1
      type contract_retrieve_rate_schedule_response =
        {
          data: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data],
          next_page: String?
        }

      class ContractRetrieveRateScheduleResponse < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor data: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data]

        attr_accessor next_page: String?

        def initialize: (
          data: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data],
          ?next_page: String?
        ) -> void

        def to_hash: -> {
          data: ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data],
          next_page: String?
        }

        type data =
          {
            entitled: bool,
            list_rate: MetronomeSDK::Rate,
            product_custom_fields: ::Hash[Symbol, String],
            product_id: String,
            product_name: String,
            product_tags: ::Array[String],
            rate_card_id: String,
            starting_at: Time,
            billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::billing_frequency,
            commit_rate: MetronomeSDK::CommitRate,
            ending_before: Time,
            override_rate: MetronomeSDK::Rate,
            pricing_group_values: ::Hash[Symbol, String]
          }

        class Data < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor entitled: bool

          attr_accessor list_rate: MetronomeSDK::Rate

          attr_accessor product_custom_fields: ::Hash[Symbol, String]

          attr_accessor product_id: String

          attr_accessor product_name: String

          attr_accessor product_tags: ::Array[String]

          attr_accessor rate_card_id: String

          attr_accessor starting_at: Time

          attr_reader billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::billing_frequency?

          def billing_frequency=: (
            MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::billing_frequency
          ) -> MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::billing_frequency

          attr_reader commit_rate: MetronomeSDK::CommitRate?

          def commit_rate=: (
            MetronomeSDK::CommitRate
          ) -> MetronomeSDK::CommitRate

          attr_reader ending_before: Time?

          def ending_before=: (Time) -> Time

          attr_reader override_rate: MetronomeSDK::Rate?

          def override_rate=: (MetronomeSDK::Rate) -> MetronomeSDK::Rate

          attr_reader pricing_group_values: ::Hash[Symbol, String]?

          def pricing_group_values=: (
            ::Hash[Symbol, String]
          ) -> ::Hash[Symbol, String]

          def initialize: (
            entitled: bool,
            list_rate: MetronomeSDK::Rate,
            product_custom_fields: ::Hash[Symbol, String],
            product_id: String,
            product_name: String,
            product_tags: ::Array[String],
            rate_card_id: String,
            starting_at: Time,
            ?billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::billing_frequency,
            ?commit_rate: MetronomeSDK::CommitRate,
            ?ending_before: Time,
            ?override_rate: MetronomeSDK::Rate,
            ?pricing_group_values: ::Hash[Symbol, String]
          ) -> void

          def to_hash: -> {
            entitled: bool,
            list_rate: MetronomeSDK::Rate,
            product_custom_fields: ::Hash[Symbol, String],
            product_id: String,
            product_name: String,
            product_tags: ::Array[String],
            rate_card_id: String,
            starting_at: Time,
            billing_frequency: MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::billing_frequency,
            commit_rate: MetronomeSDK::CommitRate,
            ending_before: Time,
            override_rate: MetronomeSDK::Rate,
            pricing_group_values: ::Hash[Symbol, String]
          }

          type billing_frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

          module BillingFrequency
            extend MetronomeSDK::Internal::Type::Enum

            MONTHLY: :MONTHLY
            QUARTERLY: :QUARTERLY
            ANNUAL: :ANNUAL
            WEEKLY: :WEEKLY

            def self?.values: -> ::Array[MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse::Data::billing_frequency]
          end
        end
      end
    end
  end
end
