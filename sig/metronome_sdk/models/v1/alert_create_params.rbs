module MetronomeSDK
  module Models
    module V1
      type alert_create_params =
        {
          alert_type: MetronomeSDK::Models::V1::AlertCreateParams::alert_type,
          name: String,
          threshold: Float,
          billable_metric_id: String,
          credit_grant_type_filters: ::Array[String],
          credit_type_id: String,
          custom_field_filters: ::Array[MetronomeSDK::V1::AlertCreateParams::CustomFieldFilter],
          customer_id: String,
          evaluate_on_create: bool,
          group_key_filter: MetronomeSDK::V1::AlertCreateParams::GroupKeyFilter,
          invoice_types_filter: ::Array[String],
          plan_id: String,
          uniqueness_key: String
        }
        & MetronomeSDK::Internal::Type::request_parameters

      class AlertCreateParams < MetronomeSDK::Internal::Type::BaseModel
        extend MetronomeSDK::Internal::Type::RequestParameters::Converter
        include MetronomeSDK::Internal::Type::RequestParameters

        attr_accessor alert_type: MetronomeSDK::Models::V1::AlertCreateParams::alert_type

        attr_accessor name: String

        attr_accessor threshold: Float

        attr_reader billable_metric_id: String?

        def billable_metric_id=: (String) -> String

        attr_reader credit_grant_type_filters: ::Array[String]?

        def credit_grant_type_filters=: (::Array[String]) -> ::Array[String]

        attr_reader credit_type_id: String?

        def credit_type_id=: (String) -> String

        attr_reader custom_field_filters: ::Array[MetronomeSDK::V1::AlertCreateParams::CustomFieldFilter]?

        def custom_field_filters=: (
          ::Array[MetronomeSDK::V1::AlertCreateParams::CustomFieldFilter]
        ) -> ::Array[MetronomeSDK::V1::AlertCreateParams::CustomFieldFilter]

        attr_reader customer_id: String?

        def customer_id=: (String) -> String

        attr_reader evaluate_on_create: bool?

        def evaluate_on_create=: (bool) -> bool

        attr_reader group_key_filter: MetronomeSDK::V1::AlertCreateParams::GroupKeyFilter?

        def group_key_filter=: (
          MetronomeSDK::V1::AlertCreateParams::GroupKeyFilter
        ) -> MetronomeSDK::V1::AlertCreateParams::GroupKeyFilter

        attr_reader invoice_types_filter: ::Array[String]?

        def invoice_types_filter=: (::Array[String]) -> ::Array[String]

        attr_reader plan_id: String?

        def plan_id=: (String) -> String

        attr_reader uniqueness_key: String?

        def uniqueness_key=: (String) -> String

        def initialize: (
          alert_type: MetronomeSDK::Models::V1::AlertCreateParams::alert_type,
          name: String,
          threshold: Float,
          ?billable_metric_id: String,
          ?credit_grant_type_filters: ::Array[String],
          ?credit_type_id: String,
          ?custom_field_filters: ::Array[MetronomeSDK::V1::AlertCreateParams::CustomFieldFilter],
          ?customer_id: String,
          ?evaluate_on_create: bool,
          ?group_key_filter: MetronomeSDK::V1::AlertCreateParams::GroupKeyFilter,
          ?invoice_types_filter: ::Array[String],
          ?plan_id: String,
          ?uniqueness_key: String,
          ?request_options: MetronomeSDK::request_opts
        ) -> void

        type alert_type =
          :low_credit_balance_reached
          | :spend_threshold_reached
          | :monthly_invoice_total_spend_threshold_reached
          | :low_remaining_days_in_plan_reached
          | :low_remaining_credit_percentage_reached
          | :usage_threshold_reached
          | :low_remaining_days_for_commit_segment_reached
          | :low_remaining_commit_balance_reached
          | :low_remaining_commit_percentage_reached
          | :low_remaining_days_for_contract_credit_segment_reached
          | :low_remaining_contract_credit_balance_reached
          | :low_remaining_contract_credit_percentage_reached
          | :low_remaining_contract_credit_and_commit_balance_reached
          | :invoice_total_reached

        module AlertType
          extend MetronomeSDK::Internal::Type::Enum

          LOW_CREDIT_BALANCE_REACHED: :low_credit_balance_reached
          SPEND_THRESHOLD_REACHED: :spend_threshold_reached
          MONTHLY_INVOICE_TOTAL_SPEND_THRESHOLD_REACHED: :monthly_invoice_total_spend_threshold_reached
          LOW_REMAINING_DAYS_IN_PLAN_REACHED: :low_remaining_days_in_plan_reached
          LOW_REMAINING_CREDIT_PERCENTAGE_REACHED: :low_remaining_credit_percentage_reached
          USAGE_THRESHOLD_REACHED: :usage_threshold_reached
          LOW_REMAINING_DAYS_FOR_COMMIT_SEGMENT_REACHED: :low_remaining_days_for_commit_segment_reached
          LOW_REMAINING_COMMIT_BALANCE_REACHED: :low_remaining_commit_balance_reached
          LOW_REMAINING_COMMIT_PERCENTAGE_REACHED: :low_remaining_commit_percentage_reached
          LOW_REMAINING_DAYS_FOR_CONTRACT_CREDIT_SEGMENT_REACHED: :low_remaining_days_for_contract_credit_segment_reached
          LOW_REMAINING_CONTRACT_CREDIT_BALANCE_REACHED: :low_remaining_contract_credit_balance_reached
          LOW_REMAINING_CONTRACT_CREDIT_PERCENTAGE_REACHED: :low_remaining_contract_credit_percentage_reached
          LOW_REMAINING_CONTRACT_CREDIT_AND_COMMIT_BALANCE_REACHED: :low_remaining_contract_credit_and_commit_balance_reached
          INVOICE_TOTAL_REACHED: :invoice_total_reached

          def self?.values: -> ::Array[MetronomeSDK::Models::V1::AlertCreateParams::alert_type]
        end

        type custom_field_filter =
          {
            entity: MetronomeSDK::V1::AlertCreateParams::CustomFieldFilter::entity,
            key: String,
            value: String
          }

        class CustomFieldFilter < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor entity: MetronomeSDK::V1::AlertCreateParams::CustomFieldFilter::entity

          attr_accessor key: String

          attr_accessor value: String

          def initialize: (
            entity: MetronomeSDK::V1::AlertCreateParams::CustomFieldFilter::entity,
            key: String,
            value: String
          ) -> void

          type entity = :Contract | :Commit | :ContractCredit

          module Entity
            extend MetronomeSDK::Internal::Type::Enum

            CONTRACT: :Contract
            COMMIT: :Commit
            CONTRACT_CREDIT: :ContractCredit

            def self?.values: -> ::Array[MetronomeSDK::V1::AlertCreateParams::CustomFieldFilter::entity]
          end
        end

        type group_key_filter = { key: String, value: String }

        class GroupKeyFilter < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor key: String

          attr_accessor value: String

          def initialize: (key: String, value: String) -> void
        end
      end
    end
  end
end
