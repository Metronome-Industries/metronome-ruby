module MetronomeSDK
  module Models
    type prepaid_balance_threshold_configuration_v2 =
      {
        commit: MetronomeSDK::PrepaidBalanceThresholdConfigurationV2::Commit,
        is_enabled: bool,
        payment_gate_config: MetronomeSDK::PaymentGateConfigV2,
        recharge_to_amount: Float,
        threshold_amount: Float,
        custom_credit_type_id: String
      }

    class PrepaidBalanceThresholdConfigurationV2 < MetronomeSDK::Internal::Type::BaseModel
      attr_accessor commit: MetronomeSDK::PrepaidBalanceThresholdConfigurationV2::Commit

      attr_accessor is_enabled: bool

      attr_accessor payment_gate_config: MetronomeSDK::PaymentGateConfigV2

      attr_accessor recharge_to_amount: Float

      attr_accessor threshold_amount: Float

      attr_reader custom_credit_type_id: String?

      def custom_credit_type_id=: (String) -> String

      def initialize: (
        commit: MetronomeSDK::PrepaidBalanceThresholdConfigurationV2::Commit,
        is_enabled: bool,
        payment_gate_config: MetronomeSDK::PaymentGateConfigV2,
        recharge_to_amount: Float,
        threshold_amount: Float,
        ?custom_credit_type_id: String
      ) -> void

      def to_hash: -> {
        commit: MetronomeSDK::PrepaidBalanceThresholdConfigurationV2::Commit,
        is_enabled: bool,
        payment_gate_config: MetronomeSDK::PaymentGateConfigV2,
        recharge_to_amount: Float,
        threshold_amount: Float,
        custom_credit_type_id: String
      }

      type commit =
        {
          product_id: String,
          applicable_product_ids: ::Array[String],
          applicable_product_tags: ::Array[String],
          description: String,
          name: String,
          specifiers: ::Array[MetronomeSDK::CommitSpecifierInput]
        }

      class Commit < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor product_id: String

        attr_reader applicable_product_ids: ::Array[String]?

        def applicable_product_ids=: (::Array[String]) -> ::Array[String]

        attr_reader applicable_product_tags: ::Array[String]?

        def applicable_product_tags=: (::Array[String]) -> ::Array[String]

        attr_reader description: String?

        def description=: (String) -> String

        attr_reader name: String?

        def name=: (String) -> String

        attr_reader specifiers: ::Array[MetronomeSDK::CommitSpecifierInput]?

        def specifiers=: (
          ::Array[MetronomeSDK::CommitSpecifierInput]
        ) -> ::Array[MetronomeSDK::CommitSpecifierInput]

        def initialize: (
          product_id: String,
          ?applicable_product_ids: ::Array[String],
          ?applicable_product_tags: ::Array[String],
          ?description: String,
          ?name: String,
          ?specifiers: ::Array[MetronomeSDK::CommitSpecifierInput]
        ) -> void

        def to_hash: -> {
          product_id: String,
          applicable_product_ids: ::Array[String],
          applicable_product_tags: ::Array[String],
          description: String,
          name: String,
          specifiers: ::Array[MetronomeSDK::CommitSpecifierInput]
        }
      end
    end
  end
end
