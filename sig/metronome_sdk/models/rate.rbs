module MetronomeSDK
  module Models
    type rate =
      {
        rate_type: MetronomeSDK::Rate::rate_type,
        credit_type: MetronomeSDK::CreditTypeData,
        custom_rate: ::Hash[Symbol, top],
        is_prorated: bool,
        price: Float,
        pricing_group_values: ::Hash[Symbol, String],
        quantity: Float,
        tiers: ::Array[MetronomeSDK::Tier],
        use_list_prices: bool
      }

    class Rate < MetronomeSDK::Internal::Type::BaseModel
      attr_accessor rate_type: MetronomeSDK::Rate::rate_type

      attr_reader credit_type: MetronomeSDK::CreditTypeData?

      def credit_type=: (
        MetronomeSDK::CreditTypeData
      ) -> MetronomeSDK::CreditTypeData

      attr_reader custom_rate: ::Hash[Symbol, top]?

      def custom_rate=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

      attr_reader is_prorated: bool?

      def is_prorated=: (bool) -> bool

      attr_reader price: Float?

      def price=: (Float) -> Float

      attr_reader pricing_group_values: ::Hash[Symbol, String]?

      def pricing_group_values=: (
        ::Hash[Symbol, String]
      ) -> ::Hash[Symbol, String]

      attr_reader quantity: Float?

      def quantity=: (Float) -> Float

      attr_reader tiers: ::Array[MetronomeSDK::Tier]?

      def tiers=: (::Array[MetronomeSDK::Tier]) -> ::Array[MetronomeSDK::Tier]

      attr_reader use_list_prices: bool?

      def use_list_prices=: (bool) -> bool

      def initialize: (
        rate_type: MetronomeSDK::Rate::rate_type,
        ?credit_type: MetronomeSDK::CreditTypeData,
        ?custom_rate: ::Hash[Symbol, top],
        ?is_prorated: bool,
        ?price: Float,
        ?pricing_group_values: ::Hash[Symbol, String],
        ?quantity: Float,
        ?tiers: ::Array[MetronomeSDK::Tier],
        ?use_list_prices: bool
      ) -> void

      type rate_type = :FLAT | :PERCENTAGE | :SUBSCRIPTION | :CUSTOM | :TIERED

      module RateType
        extend MetronomeSDK::Internal::Type::Enum

        FLAT: :FLAT
        PERCENTAGE: :PERCENTAGE
        SUBSCRIPTION: :SUBSCRIPTION
        CUSTOM: :CUSTOM
        TIERED: :TIERED

        def self?.values: -> ::Array[MetronomeSDK::Rate::rate_type]
      end
    end
  end
end
