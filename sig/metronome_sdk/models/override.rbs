module MetronomeSDK
  module Models
    type override =
      {
        id: String,
        starting_at: Time,
        applicable_product_tags: ::Array[String],
        credit_type: MetronomeSDK::CreditTypeData,
        ending_before: Time,
        entitled: bool,
        is_commit_specific: bool,
        is_prorated: bool,
        multiplier: Float,
        override_specifiers: ::Array[MetronomeSDK::Override::OverrideSpecifier],
        override_tiers: ::Array[MetronomeSDK::OverrideTier],
        overwrite_rate: MetronomeSDK::OverwriteRate,
        price: Float,
        priority: Float,
        product: MetronomeSDK::Override::Product,
        quantity: Float,
        rate_type: MetronomeSDK::Models::Override::rate_type,
        target: MetronomeSDK::Models::Override::target,
        tiers: ::Array[MetronomeSDK::Tier],
        type: MetronomeSDK::Models::Override::type_,
        value: ::Hash[Symbol, top]
      }

    class Override < MetronomeSDK::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor starting_at: Time

      attr_reader applicable_product_tags: ::Array[String]?

      def applicable_product_tags=: (::Array[String]) -> ::Array[String]

      attr_reader credit_type: MetronomeSDK::CreditTypeData?

      def credit_type=: (
        MetronomeSDK::CreditTypeData
      ) -> MetronomeSDK::CreditTypeData

      attr_reader ending_before: Time?

      def ending_before=: (Time) -> Time

      attr_reader entitled: bool?

      def entitled=: (bool) -> bool

      attr_reader is_commit_specific: bool?

      def is_commit_specific=: (bool) -> bool

      attr_reader is_prorated: bool?

      def is_prorated=: (bool) -> bool

      attr_reader multiplier: Float?

      def multiplier=: (Float) -> Float

      attr_reader override_specifiers: ::Array[MetronomeSDK::Override::OverrideSpecifier]?

      def override_specifiers=: (
        ::Array[MetronomeSDK::Override::OverrideSpecifier]
      ) -> ::Array[MetronomeSDK::Override::OverrideSpecifier]

      attr_reader override_tiers: ::Array[MetronomeSDK::OverrideTier]?

      def override_tiers=: (
        ::Array[MetronomeSDK::OverrideTier]
      ) -> ::Array[MetronomeSDK::OverrideTier]

      attr_reader overwrite_rate: MetronomeSDK::OverwriteRate?

      def overwrite_rate=: (
        MetronomeSDK::OverwriteRate
      ) -> MetronomeSDK::OverwriteRate

      attr_reader price: Float?

      def price=: (Float) -> Float

      attr_reader priority: Float?

      def priority=: (Float) -> Float

      attr_reader product: MetronomeSDK::Override::Product?

      def product=: (
        MetronomeSDK::Override::Product
      ) -> MetronomeSDK::Override::Product

      attr_reader quantity: Float?

      def quantity=: (Float) -> Float

      attr_reader rate_type: MetronomeSDK::Models::Override::rate_type?

      def rate_type=: (
        MetronomeSDK::Models::Override::rate_type
      ) -> MetronomeSDK::Models::Override::rate_type

      attr_reader target: MetronomeSDK::Models::Override::target?

      def target=: (
        MetronomeSDK::Models::Override::target
      ) -> MetronomeSDK::Models::Override::target

      attr_reader tiers: ::Array[MetronomeSDK::Tier]?

      def tiers=: (::Array[MetronomeSDK::Tier]) -> ::Array[MetronomeSDK::Tier]

      attr_reader type: MetronomeSDK::Models::Override::type_?

      def type=: (
        MetronomeSDK::Models::Override::type_
      ) -> MetronomeSDK::Models::Override::type_

      attr_reader value: ::Hash[Symbol, top]?

      def value=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

      def initialize: (
        id: String,
        starting_at: Time,
        ?applicable_product_tags: ::Array[String],
        ?credit_type: MetronomeSDK::CreditTypeData,
        ?ending_before: Time,
        ?entitled: bool,
        ?is_commit_specific: bool,
        ?is_prorated: bool,
        ?multiplier: Float,
        ?override_specifiers: ::Array[MetronomeSDK::Override::OverrideSpecifier],
        ?override_tiers: ::Array[MetronomeSDK::OverrideTier],
        ?overwrite_rate: MetronomeSDK::OverwriteRate,
        ?price: Float,
        ?priority: Float,
        ?product: MetronomeSDK::Override::Product,
        ?quantity: Float,
        ?rate_type: MetronomeSDK::Models::Override::rate_type,
        ?target: MetronomeSDK::Models::Override::target,
        ?tiers: ::Array[MetronomeSDK::Tier],
        ?type: MetronomeSDK::Models::Override::type_,
        ?value: ::Hash[Symbol, top]
      ) -> void

      def to_hash: -> {
        id: String,
        starting_at: Time,
        applicable_product_tags: ::Array[String],
        credit_type: MetronomeSDK::CreditTypeData,
        ending_before: Time,
        entitled: bool,
        is_commit_specific: bool,
        is_prorated: bool,
        multiplier: Float,
        override_specifiers: ::Array[MetronomeSDK::Override::OverrideSpecifier],
        override_tiers: ::Array[MetronomeSDK::OverrideTier],
        overwrite_rate: MetronomeSDK::OverwriteRate,
        price: Float,
        priority: Float,
        product: MetronomeSDK::Override::Product,
        quantity: Float,
        rate_type: MetronomeSDK::Models::Override::rate_type,
        target: MetronomeSDK::Models::Override::target,
        tiers: ::Array[MetronomeSDK::Tier],
        type: MetronomeSDK::Models::Override::type_,
        value: ::Hash[Symbol, top]
      }

      type override_specifier =
        {
          billing_frequency: MetronomeSDK::Models::Override::OverrideSpecifier::billing_frequency,
          commit_ids: ::Array[String],
          presentation_group_values: ::Hash[Symbol, String?],
          pricing_group_values: ::Hash[Symbol, String],
          product_id: String,
          product_tags: ::Array[String],
          recurring_commit_ids: ::Array[String],
          recurring_credit_ids: ::Array[String]
        }

      class OverrideSpecifier < MetronomeSDK::Internal::Type::BaseModel
        attr_reader billing_frequency: MetronomeSDK::Models::Override::OverrideSpecifier::billing_frequency?

        def billing_frequency=: (
          MetronomeSDK::Models::Override::OverrideSpecifier::billing_frequency
        ) -> MetronomeSDK::Models::Override::OverrideSpecifier::billing_frequency

        attr_reader commit_ids: ::Array[String]?

        def commit_ids=: (::Array[String]) -> ::Array[String]

        attr_reader presentation_group_values: ::Hash[Symbol, String?]?

        def presentation_group_values=: (
          ::Hash[Symbol, String?]
        ) -> ::Hash[Symbol, String?]

        attr_reader pricing_group_values: ::Hash[Symbol, String]?

        def pricing_group_values=: (
          ::Hash[Symbol, String]
        ) -> ::Hash[Symbol, String]

        attr_reader product_id: String?

        def product_id=: (String) -> String

        attr_reader product_tags: ::Array[String]?

        def product_tags=: (::Array[String]) -> ::Array[String]

        attr_reader recurring_commit_ids: ::Array[String]?

        def recurring_commit_ids=: (::Array[String]) -> ::Array[String]

        attr_reader recurring_credit_ids: ::Array[String]?

        def recurring_credit_ids=: (::Array[String]) -> ::Array[String]

        def initialize: (
          ?billing_frequency: MetronomeSDK::Models::Override::OverrideSpecifier::billing_frequency,
          ?commit_ids: ::Array[String],
          ?presentation_group_values: ::Hash[Symbol, String?],
          ?pricing_group_values: ::Hash[Symbol, String],
          ?product_id: String,
          ?product_tags: ::Array[String],
          ?recurring_commit_ids: ::Array[String],
          ?recurring_credit_ids: ::Array[String]
        ) -> void

        def to_hash: -> {
          billing_frequency: MetronomeSDK::Models::Override::OverrideSpecifier::billing_frequency,
          commit_ids: ::Array[String],
          presentation_group_values: ::Hash[Symbol, String?],
          pricing_group_values: ::Hash[Symbol, String],
          product_id: String,
          product_tags: ::Array[String],
          recurring_commit_ids: ::Array[String],
          recurring_credit_ids: ::Array[String]
        }

        type billing_frequency = :MONTHLY | :QUARTERLY | :ANNUAL | :WEEKLY

        module BillingFrequency
          extend MetronomeSDK::Internal::Type::Enum

          MONTHLY: :MONTHLY
          QUARTERLY: :QUARTERLY
          ANNUAL: :ANNUAL
          WEEKLY: :WEEKLY

          def self?.values: -> ::Array[MetronomeSDK::Models::Override::OverrideSpecifier::billing_frequency]
        end
      end

      type product = { id: String, name: String }

      class Product < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor name: String

        def initialize: (id: String, name: String) -> void

        def to_hash: -> { id: String, name: String }
      end

      type rate_type = :FLAT | :PERCENTAGE | :SUBSCRIPTION | :TIERED | :CUSTOM

      module RateType
        extend MetronomeSDK::Internal::Type::Enum

        FLAT: :FLAT
        PERCENTAGE: :PERCENTAGE
        SUBSCRIPTION: :SUBSCRIPTION
        TIERED: :TIERED
        CUSTOM: :CUSTOM

        def self?.values: -> ::Array[MetronomeSDK::Models::Override::rate_type]
      end

      type target = :COMMIT_RATE | :LIST_RATE

      module Target
        extend MetronomeSDK::Internal::Type::Enum

        COMMIT_RATE: :COMMIT_RATE
        LIST_RATE: :LIST_RATE

        def self?.values: -> ::Array[MetronomeSDK::Models::Override::target]
      end

      type type_ = :OVERWRITE | :MULTIPLIER | :TIERED

      module Type
        extend MetronomeSDK::Internal::Type::Enum

        OVERWRITE: :OVERWRITE
        MULTIPLIER: :MULTIPLIER
        TIERED: :TIERED

        def self?.values: -> ::Array[MetronomeSDK::Models::Override::type_]
      end
    end
  end
end
