module MetronomeSDK
  module Models
    type hierarchy_configuration =
      MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration
      | MetronomeSDK::HierarchyConfiguration::ChildHierarchyConfiguration

    module HierarchyConfiguration
      extend MetronomeSDK::Internal::Type::Union

      type parent_hierarchy_configuration =
        {
          children: ::Array[MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::Child],
          parent_behavior: MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior
        }

      class ParentHierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor children: ::Array[MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::Child]

        attr_reader parent_behavior: MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior?

        def parent_behavior=: (
          MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior
        ) -> MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior

        def initialize: (
          children: ::Array[MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::Child],
          ?parent_behavior: MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior
        ) -> void

        def to_hash: -> {
          children: ::Array[MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::Child],
          parent_behavior: MetronomeSDK::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior
        }

        type child = { contract_id: String, customer_id: String }

        class Child < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor contract_id: String

          attr_accessor customer_id: String

          def initialize: (contract_id: String, customer_id: String) -> void

          def to_hash: -> { contract_id: String, customer_id: String }
        end

        type parent_behavior =
          {
            invoice_consolidation_type: MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::invoice_consolidation_type
          }

        class ParentBehavior < MetronomeSDK::Internal::Type::BaseModel
          attr_reader invoice_consolidation_type: MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::invoice_consolidation_type?

          def invoice_consolidation_type=: (
            MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::invoice_consolidation_type
          ) -> MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::invoice_consolidation_type

          def initialize: (
            ?invoice_consolidation_type: MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::invoice_consolidation_type
          ) -> void

          def to_hash: -> {
            invoice_consolidation_type: MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::invoice_consolidation_type
          }

          type invoice_consolidation_type = :CONCATENATE | :NONE

          module InvoiceConsolidationType
            extend MetronomeSDK::Internal::Type::Enum

            CONCATENATE: :CONCATENATE
            NONE: :NONE

            def self?.values: -> ::Array[MetronomeSDK::Models::HierarchyConfiguration::ParentHierarchyConfiguration::ParentBehavior::invoice_consolidation_type]
          end
        end
      end

      type child_hierarchy_configuration =
        {
          parent: MetronomeSDK::HierarchyConfiguration::ChildHierarchyConfiguration::Parent,
          payer: MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::payer,
          usage_statement_behavior: MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::usage_statement_behavior
        }

      class ChildHierarchyConfiguration < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor parent: MetronomeSDK::HierarchyConfiguration::ChildHierarchyConfiguration::Parent

        attr_reader payer: MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::payer?

        def payer=: (
          MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::payer
        ) -> MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::payer

        attr_reader usage_statement_behavior: MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::usage_statement_behavior?

        def usage_statement_behavior=: (
          MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::usage_statement_behavior
        ) -> MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::usage_statement_behavior

        def initialize: (
          parent: MetronomeSDK::HierarchyConfiguration::ChildHierarchyConfiguration::Parent,
          ?payer: MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::payer,
          ?usage_statement_behavior: MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::usage_statement_behavior
        ) -> void

        def to_hash: -> {
          parent: MetronomeSDK::HierarchyConfiguration::ChildHierarchyConfiguration::Parent,
          payer: MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::payer,
          usage_statement_behavior: MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::usage_statement_behavior
        }

        type parent = { contract_id: String, customer_id: String }

        class Parent < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor contract_id: String

          attr_accessor customer_id: String

          def initialize: (contract_id: String, customer_id: String) -> void

          def to_hash: -> { contract_id: String, customer_id: String }
        end

        type payer = :SELF | :PARENT

        module Payer
          extend MetronomeSDK::Internal::Type::Enum

          SELF: :SELF
          PARENT: :PARENT

          def self?.values: -> ::Array[MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::payer]
        end

        type usage_statement_behavior = :CONSOLIDATE | :SEPARATE

        module UsageStatementBehavior
          extend MetronomeSDK::Internal::Type::Enum

          CONSOLIDATE: :CONSOLIDATE
          SEPARATE: :SEPARATE

          def self?.values: -> ::Array[MetronomeSDK::Models::HierarchyConfiguration::ChildHierarchyConfiguration::usage_statement_behavior]
        end
      end

      def self?.variants: -> ::Array[MetronomeSDK::Models::hierarchy_configuration]
    end
  end
end
