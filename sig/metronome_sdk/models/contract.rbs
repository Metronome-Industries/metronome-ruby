module MetronomeSDK
  module Models
    type contract =
      {
        id: String,
        amendments: ::Array[MetronomeSDK::Contract::Amendment],
        current: MetronomeSDK::ContractWithoutAmendments,
        customer_id: String,
        initial: MetronomeSDK::ContractWithoutAmendments,
        archived_at: Time,
        custom_fields: ::Hash[Symbol, String],
        customer_billing_provider_configuration: MetronomeSDK::Contract::CustomerBillingProviderConfiguration,
        prepaid_balance_threshold_configuration: MetronomeSDK::PrepaidBalanceThresholdConfiguration,
        priority: Float,
        scheduled_charges_on_usage_invoices: MetronomeSDK::Models::Contract::scheduled_charges_on_usage_invoices,
        spend_threshold_configuration: MetronomeSDK::SpendThresholdConfiguration,
        subscriptions: ::Array[MetronomeSDK::Subscription],
        uniqueness_key: String
      }

    class Contract < MetronomeSDK::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor amendments: ::Array[MetronomeSDK::Contract::Amendment]

      attr_accessor current: MetronomeSDK::ContractWithoutAmendments

      attr_accessor customer_id: String

      attr_accessor initial: MetronomeSDK::ContractWithoutAmendments

      attr_reader archived_at: Time?

      def archived_at=: (Time) -> Time

      attr_reader custom_fields: ::Hash[Symbol, String]?

      def custom_fields=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      attr_reader customer_billing_provider_configuration: MetronomeSDK::Contract::CustomerBillingProviderConfiguration?

      def customer_billing_provider_configuration=: (
        MetronomeSDK::Contract::CustomerBillingProviderConfiguration
      ) -> MetronomeSDK::Contract::CustomerBillingProviderConfiguration

      attr_reader prepaid_balance_threshold_configuration: MetronomeSDK::PrepaidBalanceThresholdConfiguration?

      def prepaid_balance_threshold_configuration=: (
        MetronomeSDK::PrepaidBalanceThresholdConfiguration
      ) -> MetronomeSDK::PrepaidBalanceThresholdConfiguration

      attr_reader priority: Float?

      def priority=: (Float) -> Float

      attr_reader scheduled_charges_on_usage_invoices: MetronomeSDK::Models::Contract::scheduled_charges_on_usage_invoices?

      def scheduled_charges_on_usage_invoices=: (
        MetronomeSDK::Models::Contract::scheduled_charges_on_usage_invoices
      ) -> MetronomeSDK::Models::Contract::scheduled_charges_on_usage_invoices

      attr_reader spend_threshold_configuration: MetronomeSDK::SpendThresholdConfiguration?

      def spend_threshold_configuration=: (
        MetronomeSDK::SpendThresholdConfiguration
      ) -> MetronomeSDK::SpendThresholdConfiguration

      attr_reader subscriptions: ::Array[MetronomeSDK::Subscription]?

      def subscriptions=: (
        ::Array[MetronomeSDK::Subscription]
      ) -> ::Array[MetronomeSDK::Subscription]

      attr_reader uniqueness_key: String?

      def uniqueness_key=: (String) -> String

      def initialize: (
        id: String,
        amendments: ::Array[MetronomeSDK::Contract::Amendment],
        current: MetronomeSDK::ContractWithoutAmendments,
        customer_id: String,
        initial: MetronomeSDK::ContractWithoutAmendments,
        ?archived_at: Time,
        ?custom_fields: ::Hash[Symbol, String],
        ?customer_billing_provider_configuration: MetronomeSDK::Contract::CustomerBillingProviderConfiguration,
        ?prepaid_balance_threshold_configuration: MetronomeSDK::PrepaidBalanceThresholdConfiguration,
        ?priority: Float,
        ?scheduled_charges_on_usage_invoices: MetronomeSDK::Models::Contract::scheduled_charges_on_usage_invoices,
        ?spend_threshold_configuration: MetronomeSDK::SpendThresholdConfiguration,
        ?subscriptions: ::Array[MetronomeSDK::Subscription],
        ?uniqueness_key: String
      ) -> void

      def to_hash: -> {
        id: String,
        amendments: ::Array[MetronomeSDK::Contract::Amendment],
        current: MetronomeSDK::ContractWithoutAmendments,
        customer_id: String,
        initial: MetronomeSDK::ContractWithoutAmendments,
        archived_at: Time,
        custom_fields: ::Hash[Symbol, String],
        customer_billing_provider_configuration: MetronomeSDK::Contract::CustomerBillingProviderConfiguration,
        prepaid_balance_threshold_configuration: MetronomeSDK::PrepaidBalanceThresholdConfiguration,
        priority: Float,
        scheduled_charges_on_usage_invoices: MetronomeSDK::Models::Contract::scheduled_charges_on_usage_invoices,
        spend_threshold_configuration: MetronomeSDK::SpendThresholdConfiguration,
        subscriptions: ::Array[MetronomeSDK::Subscription],
        uniqueness_key: String
      }

      type amendment =
        {
          id: String,
          commits: ::Array[MetronomeSDK::Commit],
          created_at: Time,
          created_by: String,
          overrides: ::Array[MetronomeSDK::Override],
          scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge],
          starting_at: Time,
          credits: ::Array[MetronomeSDK::Credit],
          discounts: ::Array[MetronomeSDK::Discount],
          netsuite_sales_order_id: String,
          professional_services: ::Array[MetronomeSDK::ProService],
          reseller_royalties: ::Array[MetronomeSDK::Contract::Amendment::ResellerRoyalty],
          salesforce_opportunity_id: String
        }

      class Amendment < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor commits: ::Array[MetronomeSDK::Commit]

        attr_accessor created_at: Time

        attr_accessor created_by: String

        attr_accessor overrides: ::Array[MetronomeSDK::Override]

        attr_accessor scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge]

        attr_accessor starting_at: Time

        attr_reader credits: ::Array[MetronomeSDK::Credit]?

        def credits=: (
          ::Array[MetronomeSDK::Credit]
        ) -> ::Array[MetronomeSDK::Credit]

        attr_reader discounts: ::Array[MetronomeSDK::Discount]?

        def discounts=: (
          ::Array[MetronomeSDK::Discount]
        ) -> ::Array[MetronomeSDK::Discount]

        attr_reader netsuite_sales_order_id: String?

        def netsuite_sales_order_id=: (String) -> String

        attr_reader professional_services: ::Array[MetronomeSDK::ProService]?

        def professional_services=: (
          ::Array[MetronomeSDK::ProService]
        ) -> ::Array[MetronomeSDK::ProService]

        attr_reader reseller_royalties: ::Array[MetronomeSDK::Contract::Amendment::ResellerRoyalty]?

        def reseller_royalties=: (
          ::Array[MetronomeSDK::Contract::Amendment::ResellerRoyalty]
        ) -> ::Array[MetronomeSDK::Contract::Amendment::ResellerRoyalty]

        attr_reader salesforce_opportunity_id: String?

        def salesforce_opportunity_id=: (String) -> String

        def initialize: (
          id: String,
          commits: ::Array[MetronomeSDK::Commit],
          created_at: Time,
          created_by: String,
          overrides: ::Array[MetronomeSDK::Override],
          scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge],
          starting_at: Time,
          ?credits: ::Array[MetronomeSDK::Credit],
          ?discounts: ::Array[MetronomeSDK::Discount],
          ?netsuite_sales_order_id: String,
          ?professional_services: ::Array[MetronomeSDK::ProService],
          ?reseller_royalties: ::Array[MetronomeSDK::Contract::Amendment::ResellerRoyalty],
          ?salesforce_opportunity_id: String
        ) -> void

        def to_hash: -> {
          id: String,
          commits: ::Array[MetronomeSDK::Commit],
          created_at: Time,
          created_by: String,
          overrides: ::Array[MetronomeSDK::Override],
          scheduled_charges: ::Array[MetronomeSDK::ScheduledCharge],
          starting_at: Time,
          credits: ::Array[MetronomeSDK::Credit],
          discounts: ::Array[MetronomeSDK::Discount],
          netsuite_sales_order_id: String,
          professional_services: ::Array[MetronomeSDK::ProService],
          reseller_royalties: ::Array[MetronomeSDK::Contract::Amendment::ResellerRoyalty],
          salesforce_opportunity_id: String
        }

        type reseller_royalty =
          {
            reseller_type: MetronomeSDK::Models::Contract::Amendment::ResellerRoyalty::reseller_type,
            aws_account_number: String,
            aws_offer_id: String,
            aws_payer_reference_id: String,
            ending_before: Time?,
            fraction: Float,
            gcp_account_id: String,
            gcp_offer_id: String,
            netsuite_reseller_id: String,
            reseller_contract_value: Float,
            starting_at: Time
          }

        class ResellerRoyalty < MetronomeSDK::Internal::Type::BaseModel
          attr_accessor reseller_type: MetronomeSDK::Models::Contract::Amendment::ResellerRoyalty::reseller_type

          attr_reader aws_account_number: String?

          def aws_account_number=: (String) -> String

          attr_reader aws_offer_id: String?

          def aws_offer_id=: (String) -> String

          attr_reader aws_payer_reference_id: String?

          def aws_payer_reference_id=: (String) -> String

          attr_accessor ending_before: Time?

          attr_reader fraction: Float?

          def fraction=: (Float) -> Float

          attr_reader gcp_account_id: String?

          def gcp_account_id=: (String) -> String

          attr_reader gcp_offer_id: String?

          def gcp_offer_id=: (String) -> String

          attr_reader netsuite_reseller_id: String?

          def netsuite_reseller_id=: (String) -> String

          attr_reader reseller_contract_value: Float?

          def reseller_contract_value=: (Float) -> Float

          attr_reader starting_at: Time?

          def starting_at=: (Time) -> Time

          def initialize: (
            reseller_type: MetronomeSDK::Models::Contract::Amendment::ResellerRoyalty::reseller_type,
            ?aws_account_number: String,
            ?aws_offer_id: String,
            ?aws_payer_reference_id: String,
            ?ending_before: Time?,
            ?fraction: Float,
            ?gcp_account_id: String,
            ?gcp_offer_id: String,
            ?netsuite_reseller_id: String,
            ?reseller_contract_value: Float,
            ?starting_at: Time
          ) -> void

          def to_hash: -> {
            reseller_type: MetronomeSDK::Models::Contract::Amendment::ResellerRoyalty::reseller_type,
            aws_account_number: String,
            aws_offer_id: String,
            aws_payer_reference_id: String,
            ending_before: Time?,
            fraction: Float,
            gcp_account_id: String,
            gcp_offer_id: String,
            netsuite_reseller_id: String,
            reseller_contract_value: Float,
            starting_at: Time
          }

          type reseller_type = :AWS | :AWS_PRO_SERVICE | :GCP | :GCP_PRO_SERVICE

          module ResellerType
            extend MetronomeSDK::Internal::Type::Enum

            AWS: :AWS
            AWS_PRO_SERVICE: :AWS_PRO_SERVICE
            GCP: :GCP
            GCP_PRO_SERVICE: :GCP_PRO_SERVICE

            def self?.values: -> ::Array[MetronomeSDK::Models::Contract::Amendment::ResellerRoyalty::reseller_type]
          end
        end
      end

      type customer_billing_provider_configuration =
        {
          archived_at: Time?,
          billing_provider: MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::billing_provider,
          delivery_method: MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::delivery_method,
          id: String,
          configuration: ::Hash[Symbol, top]
        }

      class CustomerBillingProviderConfiguration < MetronomeSDK::Internal::Type::BaseModel
        attr_accessor archived_at: Time?

        attr_accessor billing_provider: MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::billing_provider

        attr_accessor delivery_method: MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::delivery_method

        attr_reader id: String?

        def id=: (String) -> String

        attr_reader configuration: ::Hash[Symbol, top]?

        def configuration=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

        def initialize: (
          archived_at: Time?,
          billing_provider: MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::billing_provider,
          delivery_method: MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::delivery_method,
          ?id: String,
          ?configuration: ::Hash[Symbol, top]
        ) -> void

        def to_hash: -> {
          archived_at: Time?,
          billing_provider: MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::billing_provider,
          delivery_method: MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::delivery_method,
          id: String,
          configuration: ::Hash[Symbol, top]
        }

        type billing_provider =
          :aws_marketplace
          | :stripe
          | :netsuite
          | :custom
          | :azure_marketplace
          | :quickbooks_online
          | :workday
          | :gcp_marketplace

        module BillingProvider
          extend MetronomeSDK::Internal::Type::Enum

          AWS_MARKETPLACE: :aws_marketplace
          STRIPE: :stripe
          NETSUITE: :netsuite
          CUSTOM: :custom
          AZURE_MARKETPLACE: :azure_marketplace
          QUICKBOOKS_ONLINE: :quickbooks_online
          WORKDAY: :workday
          GCP_MARKETPLACE: :gcp_marketplace

          def self?.values: -> ::Array[MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::billing_provider]
        end

        type delivery_method =
          :direct_to_billing_provider | :aws_sqs | :tackle | :aws_sns

        module DeliveryMethod
          extend MetronomeSDK::Internal::Type::Enum

          DIRECT_TO_BILLING_PROVIDER: :direct_to_billing_provider
          AWS_SQS: :aws_sqs
          TACKLE: :tackle
          AWS_SNS: :aws_sns

          def self?.values: -> ::Array[MetronomeSDK::Models::Contract::CustomerBillingProviderConfiguration::delivery_method]
        end
      end

      type scheduled_charges_on_usage_invoices = :ALL

      module ScheduledChargesOnUsageInvoices
        extend MetronomeSDK::Internal::Type::Enum

        ALL: :ALL

        def self?.values: -> ::Array[MetronomeSDK::Models::Contract::scheduled_charges_on_usage_invoices]
      end
    end
  end
end
