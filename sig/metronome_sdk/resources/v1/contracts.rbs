module MetronomeSDK
  module Resources
    class V1
      class Contracts
        attr_reader products: MetronomeSDK::Resources::V1::Contracts::Products

        attr_reader rate_cards: MetronomeSDK::Resources::V1::Contracts::RateCards

        attr_reader named_schedules: MetronomeSDK::Resources::V1::Contracts::NamedSchedules

        def create: (
          customer_id: String,
          starting_at: Time,
          ?billing_provider_configuration: MetronomeSDK::V1::ContractCreateParams::BillingProviderConfiguration,
          ?commits: ::Array[MetronomeSDK::V1::ContractCreateParams::Commit],
          ?credits: ::Array[MetronomeSDK::V1::ContractCreateParams::Credit],
          ?custom_fields: ::Hash[Symbol, String],
          ?discounts: ::Array[MetronomeSDK::V1::ContractCreateParams::Discount],
          ?ending_before: Time,
          ?multiplier_override_prioritization: MetronomeSDK::Models::V1::ContractCreateParams::multiplier_override_prioritization,
          ?name: String,
          ?net_payment_terms_days: Float,
          ?netsuite_sales_order_id: String,
          ?overrides: ::Array[MetronomeSDK::V1::ContractCreateParams::Override],
          ?prepaid_balance_threshold_configuration: MetronomeSDK::V1::ContractCreateParams::PrepaidBalanceThresholdConfiguration,
          ?professional_services: ::Array[MetronomeSDK::V1::ContractCreateParams::ProfessionalService],
          ?rate_card_alias: String,
          ?rate_card_id: String,
          ?recurring_commits: ::Array[MetronomeSDK::V1::ContractCreateParams::RecurringCommit],
          ?recurring_credits: ::Array[MetronomeSDK::V1::ContractCreateParams::RecurringCredit],
          ?reseller_royalties: ::Array[MetronomeSDK::V1::ContractCreateParams::ResellerRoyalty],
          ?salesforce_opportunity_id: String,
          ?scheduled_charges: ::Array[MetronomeSDK::V1::ContractCreateParams::ScheduledCharge],
          ?scheduled_charges_on_usage_invoices: MetronomeSDK::Models::V1::ContractCreateParams::scheduled_charges_on_usage_invoices,
          ?spend_threshold_configuration: MetronomeSDK::V1::ContractCreateParams::SpendThresholdConfiguration,
          ?total_contract_value: Float,
          ?transition: MetronomeSDK::V1::ContractCreateParams::Transition,
          ?uniqueness_key: String,
          ?usage_filter: MetronomeSDK::V1::ContractCreateParams::UsageFilter,
          ?usage_statement_schedule: MetronomeSDK::V1::ContractCreateParams::UsageStatementSchedule,
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractCreateResponse

        def retrieve: (
          contract_id: String,
          customer_id: String,
          ?include_balance: bool,
          ?include_ledgers: bool,
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractRetrieveResponse

        def list: (
          customer_id: String,
          ?covering_date: Time,
          ?include_archived: bool,
          ?include_balance: bool,
          ?include_ledgers: bool,
          ?starting_at: Time,
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractListResponse

        def add_manual_balance_entry: (
          id: String,
          amount: Float,
          customer_id: String,
          reason: String,
          segment_id: String,
          ?contract_id: String,
          ?timestamp: Time,
          ?request_options: MetronomeSDK::request_opts
        ) -> nil

        def amend: (
          contract_id: String,
          customer_id: String,
          starting_at: Time,
          ?commits: ::Array[MetronomeSDK::V1::ContractAmendParams::Commit],
          ?credits: ::Array[MetronomeSDK::V1::ContractAmendParams::Credit],
          ?custom_fields: ::Hash[Symbol, String],
          ?discounts: ::Array[MetronomeSDK::V1::ContractAmendParams::Discount],
          ?netsuite_sales_order_id: String,
          ?overrides: ::Array[MetronomeSDK::V1::ContractAmendParams::Override],
          ?professional_services: ::Array[MetronomeSDK::V1::ContractAmendParams::ProfessionalService],
          ?reseller_royalties: ::Array[MetronomeSDK::V1::ContractAmendParams::ResellerRoyalty],
          ?salesforce_opportunity_id: String,
          ?scheduled_charges: ::Array[MetronomeSDK::V1::ContractAmendParams::ScheduledCharge],
          ?total_contract_value: Float,
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractAmendResponse

        def archive: (
          contract_id: String,
          customer_id: String,
          void_invoices: bool,
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractArchiveResponse

        def create_historical_invoices: (
          invoices: ::Array[MetronomeSDK::V1::ContractCreateHistoricalInvoicesParams::Invoice],
          preview: bool,
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractCreateHistoricalInvoicesResponse

        def list_balances: (
          customer_id: String,
          ?id: String,
          ?covering_date: Time,
          ?effective_before: Time,
          ?include_archived: bool,
          ?include_balance: bool,
          ?include_contract_balances: bool,
          ?include_ledgers: bool,
          ?next_page: String,
          ?starting_at: Time,
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractListBalancesResponse

        def retrieve_rate_schedule: (
          contract_id: String,
          customer_id: String,
          ?limit: Integer,
          ?next_page: String,
          ?at: Time,
          ?selectors: ::Array[MetronomeSDK::V1::ContractRetrieveRateScheduleParams::Selector],
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractRetrieveRateScheduleResponse

        def schedule_pro_services_invoice: (
          contract_id: String,
          customer_id: String,
          issued_at: Time,
          line_items: ::Array[MetronomeSDK::V1::ContractScheduleProServicesInvoiceParams::LineItem],
          ?netsuite_invoice_header_end: Time,
          ?netsuite_invoice_header_start: Time,
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractScheduleProServicesInvoiceResponse

        def set_usage_filter: (
          contract_id: String,
          customer_id: String,
          group_key: String,
          group_values: ::Array[String],
          starting_at: Time,
          ?request_options: MetronomeSDK::request_opts
        ) -> nil

        def update_end_date: (
          contract_id: String,
          customer_id: String,
          ?allow_ending_before_finalized_invoice: bool,
          ?ending_before: Time,
          ?request_options: MetronomeSDK::request_opts
        ) -> MetronomeSDK::Models::V1::ContractUpdateEndDateResponse

        def initialize: (client: MetronomeSDK::Client) -> void
      end
    end
  end
end
