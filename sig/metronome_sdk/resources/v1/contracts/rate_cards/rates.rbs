module MetronomeSDK
  module Resources
    class V1
      class Contracts
        class RateCards
          class Rates
            def list: (
              at: Time,
              rate_card_id: String,
              ?limit: Integer,
              ?next_page: String,
              ?selectors: ::Array[MetronomeSDK::V1::Contracts::RateCards::RateListParams::Selector],
              ?request_options: MetronomeSDK::request_opts
            ) -> MetronomeSDK::Internal::CursorPage[MetronomeSDK::Models::V1::Contracts::RateCards::RateListResponse]

            def add: (
              entitled: bool,
              product_id: String,
              rate_card_id: String,
              rate_type: MetronomeSDK::Models::V1::Contracts::RateCards::RateAddParams::rate_type,
              starting_at: Time,
              ?commit_rate: MetronomeSDK::V1::Contracts::RateCards::RateAddParams::CommitRate,
              ?credit_type_id: String,
              ?custom_rate: ::Hash[Symbol, top],
              ?ending_before: Time,
              ?is_prorated: bool,
              ?price: Float,
              ?pricing_group_values: ::Hash[Symbol, String],
              ?quantity: Float,
              ?tiers: ::Array[MetronomeSDK::V1::Contracts::RateCards::RateAddParams::Tier],
              ?use_list_prices: bool,
              ?request_options: MetronomeSDK::request_opts
            ) -> MetronomeSDK::Models::V1::Contracts::RateCards::RateAddResponse

            def add_many: (
              rate_card_id: String,
              rates: ::Array[MetronomeSDK::V1::Contracts::RateCards::RateAddManyParams::Rate],
              ?request_options: MetronomeSDK::request_opts
            ) -> MetronomeSDK::Models::V1::Contracts::RateCards::RateAddManyResponse

            def initialize: (client: MetronomeSDK::Client) -> void
          end
        end
      end
    end
  end
end
