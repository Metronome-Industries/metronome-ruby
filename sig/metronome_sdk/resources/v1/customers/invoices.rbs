module MetronomeSDK
  module Resources
    class V1
      class Customers
        class Invoices
          def retrieve: (
            customer_id: String,
            invoice_id: String,
            ?skip_zero_qty_line_items: bool,
            ?request_options: MetronomeSDK::request_opts
          ) -> MetronomeSDK::Models::V1::Customers::InvoiceRetrieveResponse

          def list: (
            customer_id: String,
            ?credit_type_id: String,
            ?ending_before: Time,
            ?limit: Integer,
            ?next_page: String,
            ?skip_zero_qty_line_items: bool,
            ?sort: MetronomeSDK::Models::V1::Customers::InvoiceListParams::sort,
            ?starting_on: Time,
            ?status: String,
            ?request_options: MetronomeSDK::request_opts
          ) -> MetronomeSDK::Internal::CursorPage[MetronomeSDK::Models::V1::Customers::Invoice]

          def add_charge: (
            customer_id: String,
            charge_id: String,
            customer_plan_id: String,
            description: String,
            invoice_start_timestamp: Time,
            price: Float,
            quantity: Float,
            ?request_options: MetronomeSDK::request_opts
          ) -> MetronomeSDK::Models::V1::Customers::InvoiceAddChargeResponse

          def list_breakdowns: (
            customer_id: String,
            ending_before: Time,
            starting_on: Time,
            ?credit_type_id: String,
            ?limit: Integer,
            ?next_page: String,
            ?skip_zero_qty_line_items: bool,
            ?sort: MetronomeSDK::Models::V1::Customers::InvoiceListBreakdownsParams::sort,
            ?status: String,
            ?window_size: MetronomeSDK::Models::V1::Customers::InvoiceListBreakdownsParams::window_size,
            ?request_options: MetronomeSDK::request_opts
          ) -> MetronomeSDK::Internal::CursorPage[MetronomeSDK::Models::V1::Customers::InvoiceListBreakdownsResponse]

          def initialize: (client: MetronomeSDK::Client) -> void
        end
      end
    end
  end
end
