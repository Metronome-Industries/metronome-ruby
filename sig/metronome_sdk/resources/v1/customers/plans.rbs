module MetronomeSDK
  module Resources
    class V1
      class Customers
        class Plans
          def list: (
            customer_id: String,
            ?limit: Integer,
            ?next_page: String,
            ?request_options: MetronomeSDK::request_opts
          ) -> MetronomeSDK::Internal::CursorPage[MetronomeSDK::Models::V1::Customers::PlanListResponse]

          def add: (
            customer_id: String,
            plan_id: String,
            starting_on: Time,
            ?ending_before: Time,
            ?net_payment_terms_days: Float,
            ?overage_rate_adjustments: ::Array[MetronomeSDK::V1::Customers::PlanAddParams::OverageRateAdjustment],
            ?price_adjustments: ::Array[MetronomeSDK::V1::Customers::PlanAddParams::PriceAdjustment],
            ?trial_spec: MetronomeSDK::V1::Customers::PlanAddParams::TrialSpec,
            ?request_options: MetronomeSDK::request_opts
          ) -> MetronomeSDK::Models::V1::Customers::PlanAddResponse

          def end_: (
            customer_id: String,
            customer_plan_id: String,
            ?ending_before: Time,
            ?void_invoices: bool,
            ?void_stripe_invoices: bool,
            ?request_options: MetronomeSDK::request_opts
          ) -> MetronomeSDK::Models::V1::Customers::PlanEndResponse

          def list_price_adjustments: (
            customer_id: String,
            customer_plan_id: String,
            ?limit: Integer,
            ?next_page: String,
            ?request_options: MetronomeSDK::request_opts
          ) -> MetronomeSDK::Internal::CursorPage[MetronomeSDK::Models::V1::Customers::PlanListPriceAdjustmentsResponse]

          def initialize: (client: MetronomeSDK::Client) -> void
        end
      end
    end
  end
end
